[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nEmail = Package.email.Email;\nEmailInternals = Package.email.EmailInternals;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nenableDebugLogging = Package['reywood:publish-composite'].enableDebugLogging;\npublishComposite = Package['reywood:publish-composite'].publishComposite;\nRoles = Package['alanning:roles'].Roles;\n_ = Package.underscore._;\nchai = Package['practicalmeteor:chai'].chai;\nassert = Package['practicalmeteor:chai'].assert;\nexpect = Package['practicalmeteor:chai'].expect;\nshould = Package['practicalmeteor:chai'].should;\nGravatar = Package['jparker:gravatar'].Gravatar;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAccountsTemplates = Package['useraccounts:core'].AccountsTemplates;\nAccounts = Package['accounts-base'].Accounts;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\nT9n = Package['softwarerero:accounts-t9n'].T9n;\n\n","servePath":"/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"individual_goals\":{\"server\":{\"publications.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/individual_goals/server/publications.js                                                                 //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet IndividualGoal;\nmodule.watch(require(\"../individual_goals.js\"), {\n  IndividualGoal(v) {\n    IndividualGoal = v;\n  }\n\n}, 1);\nlet User;\nmodule.watch(require(\"../../users/users.js\"), {\n  User(v) {\n    User = v;\n  }\n\n}, 2);\nMeteor.publish('individualGoalsData', function (userId) {\n  if (Meteor.userId() === userId) {\n    return IndividualGoal.find({\n      userId: userId\n    });\n  } else if (Roles.userIsInRole(Meteor.userId(), ['admin', 'view-goals'], Roles.GLOBAL_GROUP)) {\n    return IndividualGoal.find({\n      userId: userId,\n      privacy: {\n        \"$in\": [\"team\", \"public\"]\n      }\n    });\n  } else {\n    this.stop();\n    return;\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"individual_goals.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/individual_goals/individual_goals.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  IndividualGoal: () => IndividualGoal\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet User;\nmodule.watch(require(\"../users/users.js\"), {\n  User(v) {\n    User = v;\n  }\n\n}, 2);\nlet Class, Enum;\nmodule.watch(require(\"meteor/jagi:astronomy\"), {\n  Class(v) {\n    Class = v;\n  },\n\n  Enum(v) {\n    Enum = v;\n  }\n\n}, 3);\nlet UserNotify;\nmodule.watch(require(\"/imports/api/user_notify/user_notify.js\"), {\n  UserNotify(v) {\n    UserNotify = v;\n  }\n\n}, 4);\nlet GoalComment;\nmodule.watch(require(\"/imports/api/team_goals/team_goals.js\"), {\n  GoalComment(v) {\n    GoalComment = v;\n  }\n\n}, 5);\nconst IndividualGoal = Class.create({\n  name: 'IndividualGoal',\n  collection: new Mongo.Collection('individual_goal'),\n  fields: {\n    userId: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    description: {\n      type: String,\n      default: ''\n    },\n    parentId: {\n      type: String,\n      default: ''\n    },\n    assignedToStr: {\n      type: String,\n      transient: true\n    },\n    reachedDate: {\n      type: Date,\n      optional: true\n    },\n    startDate: {\n      type: Date,\n      optional: true\n    },\n    dueDate: {\n      type: Date,\n      optional: true\n    },\n    reviewDate: {\n      type: Date,\n      optional: true\n    },\n    reviewedOnDate: {\n      type: Date,\n      optional: true\n    },\n    goalComments: {\n      type: [GoalComment],\n      default: []\n    },\n    reviewComments: {\n      type: [GoalComment],\n      default: []\n    },\n    teamId: {\n      type: String,\n      default: \"\"\n    },\n    privacy: {\n      type: String,\n      default: 'private'\n    },\n    createdBy: {\n      type: String,\n      default: ''\n    }\n  },\n  behaviors: {\n    timestamp: {}\n  },\n  helpers: {\n    getGoalRoleGroup() {\n      return this.teamName + '+' + this._id;\n    },\n\n    userIsAdmin() {\n      if (Roles.userIsInRole(Meteor.userId(), 'admin', this.teamName) || Roles.userIsInRole(Meteor.userId(), 'admin', this.getGoalRoleGroup())) {\n        //user is either a global admin, a team admin, or a goal admin\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    userIsMentor() {\n      if (Roles.userIsInRole(Meteor.userId(), 'mentor', this.getGoalRoleGroup())) {\n        //user is a mentor for this goal\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    userIsAssigned() {\n      if (Roles.userIsInRole(Meteor.userId(), 'assigned', this.getGoalRoleGroup())) {\n        //user is assigned to this goal\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    setDateField(fieldName, rdate) {\n      if (typeof rdate === \"undefined\") {\n        rdate = new Date();\n      } else if (!(rdate instanceof Date)) {\n        return false;\n      }\n\n      this[fieldName] = rdate;\n      return true;\n    },\n\n    getUserFullNameX(userId) {\n      let u = User.findOne({\n        _id: userId\n      });\n\n      if (!u) {\n        return \"Michael\";\n      }\n\n      let name = u.MyProfile.firstName + \" \" + u.MyProfile.lastName;\n      return name;\n    },\n\n    hasModifyPerm(fieldName) {\n      switch (fieldName) {\n        //admins-only fields\n        case 'dueDate':\n        case 'startDate':\n        case 'reachedDate':\n        case 'reviewDate':\n        case 'title':\n        case 'description':\n        case 'assignedTo':\n        case 'mentors':\n        case 'admins':\n        case 'subgoals':\n          return this.userIsAdmin();\n          break;\n        //admins and mentors\n\n        case 'reviewedOnDate':\n        case 'reviewComments':\n          return this.userIsAdmin() || this.userIsMentor();\n          break;\n        //anyone assigned to the goal\n\n        case 'goalComments':\n          return this.userIsAdmin() || this.userIsMentor() || this.userIsAssigned();\n          break;\n\n        case 'teamId':\n        case 'privacy':\n          return true;\n          break;\n\n        default:\n          return false;\n          break;\n      }\n    },\n\n    notifyNew(oldList, newList) {\n      let diffList = _.difference(newList, oldList);\n\n      for (let i = 0; i < diffList.length; i++) {\n        UserNotify.add({\n          userId: diffList[i],\n          title: 'Goals',\n          body: 'You have been added to goal ' + this.title,\n          action: 'teamgoals:' + this.teamName\n        });\n      }\n    }\n\n  },\n  events: {\n    beforeSave(e) {\n      /*\n      let egoal = e.currentTarget;\n       //any user added to a goal is automatically added to the 'view-goals' role for the team\n      //if they are already in that role, this should just ignore the redundant addUser\n      let flds = [\"assignedTo\",\"mentors\",\"admins\"];\n      for (let i in flds) {\n          if (Array.isArray(egoal[flds[i]]) && egoal[flds[i]].length > 0) {\n              Roles.addUsersToRoles(egoal[flds[i]], 'view-goals', egoal.teamName);\n          }\n      }\n      */\n    }\n\n  },\n  meteorMethods: {\n    setDueDate(rdate) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      if (this.setDateField(\"dueDate\", rdate)) {\n        this.save();\n      } else {\n        throw new Meteor.Error(403, \"Invalid date\");\n      }\n    },\n\n    setGoalReached(rdate) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      if (this.setDateField(\"reachedDate\", rdate)) {\n        this.save();\n      } else {\n        throw new Meteor.Error(403, \"Invalid date\");\n      }\n    },\n\n    setReviewDate(rdate) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      if (this.setDateField(\"reviewDate\", rdate)) {\n        this.save();\n      } else {\n        throw new Meteor.Error(403, \"Invalid date\");\n      }\n    },\n\n    setGoalReviewedOn(rdate) {\n      //mentors and admins\n      if (!this.userIsAdmin() && !this.userIsMentor()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      if (this.setDateField(\"reviewedOnDate\", rdate)) {\n        this.save();\n      } else {\n        throw new Meteor.Error(403, \"Invalid date\");\n      }\n    },\n\n    addComment(commentTxt) {\n      //mentors, admins, and assignees\n      if (!this.userIsAdmin() && !this.userIsMentor() && !this.userIsAssigned()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.goalComments.push(new GoalComment({\n        userId: Meteor.userId(),\n        date: new Date(),\n        text: commentTxt\n      }));\n      this.save();\n    },\n\n    addReviewComment(commentTxt) {\n      //mentors and admins\n      if (!this.userIsAdmin() && !this.userIsMentor()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.reviewComments.push(new GoalComment({\n        userId: Meteor.userId(),\n        date: new Date(),\n        text: commentTxt\n      }));\n      this.save();\n    },\n\n    createNewGoal() {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      } //\n\n    },\n\n    setTitle(title) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.title = title;\n      this.save();\n    },\n\n    setDescription(descr) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.description = descr;\n      this.save();\n    },\n\n    setAssignedTo(ulist) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.notifyNew(this.assignedTo, ulist);\n      this.assignedTo = ulist;\n      this.save();\n    },\n\n    setMentors(ulist) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.notifyNew(this.mentors, ulist);\n      this.mentors = ulist;\n      this.save();\n    },\n\n    setAdmins(ulist) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.notifyNew(this.admins, ulist);\n      this.admins = ulist;\n      this.save();\n    },\n\n    getUserFullName(userId) {\n      const invocation = DDP._CurrentInvocation.get();\n\n      if (invocation.isSimulation) {\n        return \"George\";\n      }\n\n      let u = User.findOne({\n        _id: userId\n      });\n\n      if (!u) {\n        return \"Michael\";\n      }\n\n      let name = u.MyProfile.firstName + \" \" + u.MyProfile.lastName;\n      return name;\n    },\n\n    updateFromObj(updObj) {\n      let permError = false;\n\n      for (let fld in updObj) {\n        if (this[fld] !== updObj[fld] || Array.isArray(updObj[fld]) && _.isEqual(this[fld], updObj[fld])) {\n          if (this.hasModifyPerm(fld)) {\n            if (fld === \"assignedTo\" || fld === \"mentors\" || fld === \"admins\") {\n              this.notifyNew(this[fld], updObj[fld]);\n            }\n\n            this[fld] = updObj[fld];\n          } else {\n            permError = true;\n          }\n        }\n      }\n\n      this.save();\n\n      if (permError) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n    }\n\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/individual_goals/methods.js                                                                             //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet IndividualGoal;\nmodule.watch(require(\"./individual_goals.js\"), {\n  IndividualGoal(v) {\n    IndividualGoal = v;\n  }\n\n}, 0);\nMeteor.methods({\n  'individualgoals.createNewGoal'(goal) {\n    if (goal.userId !== Meteor.userId() && !Roles.userIsInRole(Meteor.userId(), ['admin'], goal.teamName)) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    }\n\n    goal.createdBy = Meteor.userId();\n    let g = new IndividualGoal(goal);\n    return g.save();\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"learn_share\":{\"server\":{\"publications.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/learn_share/server/publications.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet LearnShareSession;\nmodule.watch(require(\"../learn_share.js\"), {\n  LearnShareSession(v) {\n    LearnShareSession = v;\n  }\n\n}, 1);\nMeteor.publish('learnShareList', function () {\n  if (this.userId) {\n    return LearnShareSession.find({}, {\n      fields: {\n        title: 1,\n        teamId: 1\n      }\n    });\n  } else {\n    return [];\n  }\n});\nMeteor.publish('learnShareDetails', function (lssid) {\n  //if (this.userId) {\n  return LearnShareSession.find({\n    _id: lssid\n  }); //} else {\n  //    return [ ];\n  //}\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"learn_share.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/learn_share/learn_share.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  LearnShareSession: () => LearnShareSession\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet Class, Enum;\nmodule.watch(require(\"meteor/jagi:astronomy\"), {\n  Class(v) {\n    Class = v;\n  },\n\n  Enum(v) {\n    Enum = v;\n  }\n\n}, 2);\nlet User;\nmodule.watch(require(\"/imports/api/users/users.js\"), {\n  User(v) {\n    User = v;\n  }\n\n}, 3);\nlet UserNotify;\nmodule.watch(require(\"/imports/api/user_notify/user_notify.js\"), {\n  UserNotify(v) {\n    UserNotify = v;\n  }\n\n}, 4);\nvar fs = {};\n\nif (Meteor.isServer) {\n  fs = Npm.require('fs');\n}\n\nconst LSUser = Class.create({\n  name: 'LSUser',\n  fields: {\n    id: {\n      type: String,\n      default: ''\n    },\n    name: {\n      type: String,\n      default: 'John Doe'\n    }\n  }\n});\nconst LearnShareSession = Class.create({\n  name: \"LearnShareSession\",\n  collection: new Mongo.Collection('learn_share'),\n  fields: {\n    title: {\n      type: String,\n      default: \"unnamed Learn/Share session\"\n    },\n    notes: {\n      type: String,\n      default: \"duly noted\"\n    },\n    participants: {\n      type: [LSUser],\n      default: []\n    },\n    guests: {\n      type: [LSUser],\n      default: []\n    },\n    presenters: {\n      type: [LSUser],\n      default: []\n    },\n    state: {\n      type: String,\n      default: \"active\"\n    },\n    skypeUrl: {\n      type: String,\n      default: \"\"\n    },\n    teamId: {\n      type: String,\n      default: \"\"\n    }\n  },\n  behaviors: {\n    timestamp: {}\n  },\n  meteorMethods: {\n    addPresenter: function (user) {\n      if (\"locked\" === this.state) {\n        return;\n      }\n\n      var lsUser = new LSUser(user); //check for duplicate\n\n      if (typeof _.find(this.presenters, function (o) {\n        return o.id === lsUser.id;\n      }) !== \"undefined\") {\n        return false;\n      }\n\n      this.presenters.push(lsUser);\n      return this.save();\n    },\n    addParticipant: function (user) {\n      if (\"locked\" === this.state) {\n        return;\n      }\n\n      var lsUser = new LSUser(user); //check for duplicate\n\n      if (typeof _.find(this.participants, function (o) {\n        return o.id === lsUser.id;\n      }) !== \"undefined\") {\n        return false;\n      }\n\n      this.participants.push(lsUser);\n      UserNotify.add({\n        userId: lsUser.id,\n        title: 'Learn/Share',\n        body: 'You have been added to a Learn/Share session',\n        action: 'learnshare:' + this._id\n      });\n      return this.save();\n    },\n    removeParticipant: function (userId) {\n      if (\"locked\" === this.state) {\n        return;\n      }\n\n      this.participants = _.filter(this.participants, function (o) {\n        return o.id !== userId;\n      });\n      return this.save();\n    },\n    removeGuest: function (userId) {\n      if (\"locked\" === this.state) {\n        return;\n      }\n\n      this.guests = _.filter(this.guests, function (o) {\n        return o.id !== userId;\n      });\n      return this.save();\n    },\n    removePresenter: function (userId) {\n      if (\"locked\" === this.state) {\n        return;\n      }\n\n      this.presenters = _.filter(this.presenters, function (o) {\n        return o.id !== userId;\n      });\n      return this.save();\n    },\n    addParticipantSelf: function () {\n      if (\"locked\" === this.state) {\n        return;\n      }\n\n      if (Meteor.userId()) {\n        //check for duplicate\n        if (typeof _.find(this.participants, function (o) {\n          return o.id === Meteor.userId();\n        }) === \"undefined\") {\n          let u = User.findOne({\n            _id: Meteor.userId()\n          });\n\n          if (!u) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n          } else {\n            let lsu = new LSUser({\n              id: Meteor.userId(),\n              name: u.MyProfile.firstName + \" \" + u.MyProfile.lastName\n            });\n            this.participants.push(lsu);\n            this.save();\n          }\n        }\n      } else {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n    },\n    saveGuest: function (guestId, guestName) {\n      if (\"locked\" === this.state) {\n        return;\n      }\n\n      let guestObj = _.find(this.guests, function (o) {\n        return o.id === guestId;\n      });\n\n      if (\"undefined\" !== typeof guestObj) {\n        console.log(\"already a guest\");\n        this.guests = _.filter(this.guests, function (o) {\n          return o.id !== guestId;\n        });\n        guestObj.name = guestName;\n      } else {\n        console.log(\"not a guest\");\n        guestObj = new LSUser({\n          id: guestId,\n          name: guestName\n        });\n      }\n\n      this.guests.push(guestObj);\n      this.save();\n    },\n    saveText: function (title, notes) {\n      if (\"locked\" === this.state) {\n        return;\n      }\n\n      if (Roles.userIsInRole(Meteor.userId(), ['admin', 'learn-share-host'], Roles.GLOBAL_GROUP)) {\n        this.title = title;\n        this.notes = notes;\n        this.save();\n      } else {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n    },\n    lockSession: function (title, notes) {\n      if (Roles.userIsInRole(Meteor.userId(), ['admin', 'learn-share-host'], Roles.GLOBAL_GROUP)) {\n        this.state = \"locked\";\n        this.save();\n      } else {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n    },\n    unlockSession: function (title, notes) {\n      if (Roles.userIsInRole(Meteor.userId(), ['admin', 'learn-share-host'], Roles.GLOBAL_GROUP)) {\n        this.state = \"active\";\n        this.save();\n      } else {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n    },\n    setSkypeUrl: function (url) {\n      if (Roles.userIsInRole(Meteor.userId(), ['admin', 'learn-share-host'], Roles.GLOBAL_GROUP)) {\n        this.skypeUrl = url;\n        this.save();\n      }\n    },\n\n    uploadRecording(fileInfo, fileData) {\n      if (Meteor.isServer && Roles.userIsInRole(Meteor.userId(), ['admin', 'learn-share-host'], Roles.GLOBAL_GROUP)) {\n        let uploadPath = '/uploads/';\n        fs.writeFile(uploadPath + this._id + \".mp4\", fileData, 'binary', err => {\n          console.log(\"File written.\", err);\n        });\n      }\n    }\n\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/learn_share/methods.js                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet LearnShareSession;\nmodule.watch(require(\"./learn_share.js\"), {\n  LearnShareSession(v) {\n    LearnShareSession = v;\n  }\n\n}, 1);\n\nvar formattedDate = () => {\n  let d = new Date();\n  let year = d.getFullYear();\n  let month = d.getMonth() + 1;\n  let day = d.getDate();\n  return year + \"-\" + (\"00\" + month).slice(-2) + \"-\" + (\"00\" + day).slice(-2);\n};\n\nvar randomChars = () => {\n  var text = \"\";\n  var idLength = 2;\n  var possible = \"acdeghijklmnopqrstuvwxyz\";\n\n  for (var i = 0; i < idLength; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n};\n\nvar lssidGenerate = () => {\n  return formattedDate() + \"-\" + randomChars();\n};\n\nMeteor.methods({\n  'learnshare.createNewSession'(sessTitle, teamId) {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin', 'learn-share-host'], Roles.GLOBAL_GROUP)) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    }\n\n    let lssid = lssidGenerate();\n    let newSession = new LearnShareSession({\n      _id: lssid,\n      title: sessTitle,\n      teamId: teamId\n    });\n    newSession.save();\n    return lssid;\n  },\n\n  'learnshare.recordingExists'(fname) {\n    let fs = Npm.require('fs');\n\n    let uploadPath = '/uploads/';\n    console.log(\"exist\", uploadPath + fname + \".mp4\");\n\n    if (fs.existsSync(uploadPath + fname + \".mp4\")) {\n      console.log(\"yes\");\n      return true;\n    } else {\n      console.log(\"no\");\n      return false;\n    }\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"questions\":{\"server\":{\"publications.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/questions/server/publications.js                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Question, Reading, MyersBriggsCategory;\nmodule.watch(require(\"../questions.js\"), {\n  Question(v) {\n    Question = v;\n  },\n\n  Reading(v) {\n    Reading = v;\n  },\n\n  MyersBriggsCategory(v) {\n    MyersBriggsCategory = v;\n  }\n\n}, 1);\nlet User, MyersBriggs, Answer, UserType, Profile;\nmodule.watch(require(\"../../users/users.js\"), {\n  User(v) {\n    User = v;\n  },\n\n  MyersBriggs(v) {\n    MyersBriggs = v;\n  },\n\n  Answer(v) {\n    Answer = v;\n  },\n\n  UserType(v) {\n    UserType = v;\n  },\n\n  Profile(v) {\n    Profile = v;\n  }\n\n}, 2);\nMeteor.publishComposite('questions.bycategory', function (category) {\n  if (!Roles.userIsInRole(this.userId, ['admin'], Roles.GLOBAL_GROUP)) {\n    return this.ready();\n  }\n\n  console.log(\"Publication 'questions.bycategory': \", category, this.userId);\n  return {\n    find() {\n      return Question.find({\n        Categories: category\n      }, {\n        defaults: true,\n        sort: {\n          createdAt: -1\n        }\n      });\n    },\n\n    children: [{\n      find(question) {\n        return User.find({\n          _id: question.CreatedBy\n        }, {\n          limit: 1\n        });\n      }\n\n    }]\n  };\n});\nMeteor.publish('questions.toanswer', function (userId, refresh) {\n  //console.log(userId, this.userId);\n  //if(this.userId !== userId && !Roles.userIsInRole(this.userId, ['admin'], Roles.GLOBAL_GROUP)) { return this.ready(); }\n  console.log(\"Publication 'questions.toanswer': \", this.userId, userId);\n  let self = this;\n  let user = User.findOne({\n    _id: userId\n  });\n  let qids = user.MyProfile.UserType.getAnsweredQuestionsIDs(); //console.log(self, user, qids);\n\n  let observe = {\n    added: function (id, fields) {\n      self.added('questions', id, fields);\n    },\n    changed: function (id, fields) {\n      self.removed(\"questions\", id);\n    },\n    removed: function (id) {\n      self.removed('questions', id);\n    }\n  };\n  let ids = [0, 1, 2, 3];\n  ids.sort(function (a, b) {\n    let ar = Math.random();\n    let br = Math.random();\n\n    if (ar === br) {\n      return 0;\n    }\n\n    return ar > br ? -1 : 1;\n  });\n  handles = [null, null, null, null];\n\n  for (let i = 0; i < ids.length; i++) {\n    handles[ids[i]] = Question.find({\n      Categories: ids[i],\n      _id: {\n        $nin: qids\n      },\n      Active: true\n    }, {\n      limit: 1\n    }).observeChanges(observe);\n  }\n\n  self.ready();\n  self.onStop(function () {\n    for (let i = 0; i < ids.length; i++) {\n      handles[i].stop();\n    }\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/questions/methods.js                                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet Question, MyersBriggsCategory;\nmodule.watch(require(\"./questions.js\"), {\n  Question(v) {\n    Question = v;\n  },\n\n  MyersBriggsCategory(v) {\n    MyersBriggsCategory = v;\n  }\n\n}, 2);\nlet User, Answer;\nmodule.watch(require(\"../users/users.js\"), {\n  User(v) {\n    User = v;\n  },\n\n  Answer(v) {\n    Answer = v;\n  }\n\n}, 3);\nMeteor.methods({\n  'question.insert'(category, text, left, right, seg) {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    }\n\n    console.log(category);\n    let newQuestion = new Question({\n      Category: parseInt(category[0]),\n      Categories: category.map(a => {\n        return parseInt(a);\n      }),\n      Text: text,\n      LeftText: left,\n      RightText: right,\n      segments: seg,\n      CreatedBy: Meteor.userId()\n    });\n    console.log(category, text, newQuestion);\n    newQuestion.validate({\n      cast: true\n    });\n    return newQuestion.save();\n  },\n\n  'question.answer'(questionId, value, isReversed) {\n    let question = Question.findOne({\n      _id: questionId\n    });\n    let me = User.findOne({\n      _id: Meteor.userId()\n    });\n    value = parseFloat(value);\n\n    if (!!isReversed) {\n      value = ~value + 1;\n    }\n\n    console.log(questionId, value, !!isReversed);\n    let answer = new Answer({\n      Categories: question.Categories,\n      QuestionID: questionId,\n      Reversed: !!isReversed,\n      Value: value\n    });\n    question.addAnswer(answer);\n    me.MyProfile.UserType.answerQuestion(answer);\n    console.log(me.MyProfile);\n    me.save();\n  },\n\n  'question.unanswer'(questionId) {\n    let me = User.findOne({\n      _id: Meteor.userId()\n    });\n    let answer = me.MyProfile.UserType.getAnswerForQuestion(questionId);\n\n    if (answer == null) {\n      throw new Meteor.Error(403, 'You can\\'t unanwer a question you haven\\'t answered.');\n    }\n\n    me.MyProfile.UserType.unAnswerQuestion(answer);\n    me.save();\n  },\n\n  'question.unanswerAll'(questionIds) {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    }\n\n    if (!questionIds instanceof Array) {\n      questionIds = [questionIds];\n    }\n\n    let questions = Question.find({\n      _id: {\n        $in: questionIds\n      }\n    });\n    questions.forEach(function (question) {\n      question.unanswerAll();\n    });\n  },\n\n  'question.delete'(questionId) {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    }\n\n    let me = User.findOne({\n      _id: Meteor.userId()\n    });\n    let question = Question.findOne({\n      _id: questionId\n    });\n    question.remove();\n  },\n\n  'question.resetUsers'(userIds) {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    }\n\n    if (!userIds instanceof Array) {\n      userIds = [userIds];\n    }\n\n    let us = User.find({\n      _id: {\n        $in: userIds\n      }\n    });\n\n    if (!us) {\n      throw new Meteor.Error(404, \"User is not found.\");\n    }\n\n    us.forEach(function (u) {\n      u.MyProfile.UserType.reset();\n      u.save();\n    });\n  },\n\n  'question.resetAll'() {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    }\n\n    let qs = Question.find({});\n    qs.forEach(function (q) {\n      q.unanswerAll();\n    });\n    let us = User.find({});\n    us.forEach(function (u) {\n      u.MyProfile.UserType.reset();\n      u.save();\n    });\n  },\n\n  'question.countQuestions'(myUserId) {\n    //console.log(\"happy1\");\n    let me = User.findOne({\n      _id: myUserId\n    }); //console.log(\"UserID\", me);\n\n    let totalQuestions = Question.find().count(); //console.log(\"happy3\", totalQuestions);\n\n    me.MyProfile.UserType.setTotalQuestions(totalQuestions); //console.log(\"happy4\", me.MyProfile.UserType.getTotalQuestions());\n\n    return totalQuestions;\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"questions.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/questions/questions.js                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  Question: () => Question,\n  Reading: () => Reading,\n  MyersBriggsCategory: () => MyersBriggsCategory\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet Class, Enum;\nmodule.watch(require(\"meteor/jagi:astronomy\"), {\n  Class(v) {\n    Class = v;\n  },\n\n  Enum(v) {\n    Enum = v;\n  }\n\n}, 2);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 3);\nlet User;\nmodule.watch(require(\"../users/users.js\"), {\n  User(v) {\n    User = v;\n  }\n\n}, 4);\nlet Defaults;\nmodule.watch(require(\"/imports/startup/both/defaults.js\"), {\n  Defaults(v) {\n    Defaults = v;\n  }\n\n}, 5);\nlet UserNotify;\nmodule.watch(require(\"/imports/api/user_notify/user_notify.js\"), {\n  UserNotify(v) {\n    UserNotify = v;\n  }\n\n}, 6);\nconst MyersBriggsCategory = Enum.create({\n  name: 'MyersBriggsCategory',\n  identifiers: ['IE', 'NS', 'TF', 'JP']\n});\nconst Reading = Class.create({\n  name: 'Reading',\n  fields: {\n    Rank: {\n      type: Number,\n      default: 0,\n      validators: [{\n        type: 'lte',\n        resolveParam: function () {\n          return 50;\n        }\n      }, {\n        type: 'gte',\n        resolveParam: function () {\n          return -50;\n        }\n      }]\n    },\n    Text: {\n      type: String,\n      default: 'Well, you feel...'\n    }\n  }\n});\nconst PolarStats = Class.create({\n  name: 'PolarStats',\n  fields: {\n    LeftSum: {\n      type: Number,\n      default: 0\n    },\n    RightSum: {\n      type: Number,\n      default: 0\n    }\n  },\n  helpers: {\n    reset() {\n      this.LeftSum = 0;\n      this.RightSum = 0;\n    }\n\n  }\n});\nconst Question = Class.create({\n  name: \"Question\",\n  collection: new Mongo.Collection('questions'),\n  fields: {\n    Category: {\n      type: MyersBriggsCategory,\n      default: 'IE'\n    },\n    Categories: {\n      type: [MyersBriggsCategory],\n      default: []\n    },\n    Text: {\n      type: String,\n      default: 'Whoa! What we askin\\' here?'\n    },\n    LeftText: {\n      type: String,\n      default: 'Whoa! What we askin\\' here?'\n    },\n    RightText: {\n      type: String,\n      default: 'Whoa! What we askin\\' here?'\n    },\n    Readings: {\n      type: [Reading],\n      default: function () {\n        return [{\n          Rank: -50,\n          Text: \"You will ALWAYS Do this. Doing otherwise is inconceivable to you.\"\n        }, {\n          Rank: -49,\n          Text: \"There may be a possible scenerio where the reverse may apply, but it would be really rare.\"\n        }, {\n          Rank: -40,\n          Text: \"You can think of cases where you have done things the other way, but not under normal circumstances. \"\n        }, {\n          Rank: -30,\n          Text: \"This is your most common behavior, but there are definitely times you've done the opposite.\"\n        }, {\n          Rank: -20,\n          Text: \"This is a good default choice for you, but time and circumstance could easily find you doing the other.\"\n        }, {\n          Rank: -10,\n          Text: \"You don't have much of a preference either way, but this side sounds a bit more likely.\"\n        }, {\n          Rank: 10,\n          Text: \"You don't have much of a preference either way, but this side sounds a bit more likely.\"\n        }, {\n          Rank: 20,\n          Text: \"This is a good default choice for you, but time and circumstance could easily find you doing the other.\"\n        }, {\n          Rank: 30,\n          Text: \"This is your most common behavior, but there are definitely times you've done the opposite.\"\n        }, {\n          Rank: 40,\n          Text: \"You can think of cases where you have done things the other way, but not under normal circumstances. \"\n        }, {\n          Rank: 49,\n          Text: \"There may be a possible scenerio where the reverse may apply, but it would be really rare.\"\n        }, {\n          Rank: 50,\n          Text: \"You will ALWAYS Do this. Doing otherwise is inconceivable to you.\"\n        }];\n      }\n    },\n    segments: {\n      type: [String],\n      default: []\n    },\n    Active: {\n      type: Boolean,\n      default: false\n    },\n    CreatedBy: {\n      type: String,\n      default: function () {\n        return Meteor.userId();\n      }\n    },\n    TimesAnswered: {\n      type: PolarStats,\n      default: function () {\n        return new PolarStats();\n      }\n    },\n    SumOfAnswers: {\n      type: PolarStats,\n      default: function () {\n        return new PolarStats();\n      }\n    }\n  },\n  meteorMethods: {\n    getUser() {\n      let u = User.findOne({\n        _id: this.CreatedBy\n      });\n      return u;\n    }\n\n  },\n  helpers: {\n    addAnswer(answer) {\n      if (answer.Value < 0) {\n        this.TimesAnswered.LeftSum++;\n        this.SumOfAnswers.LeftSum += answer.Value;\n      } else {\n        this.TimesAnswered.RightSum++;\n        this.SumOfAnswers.RightSum += answer.Value;\n      }\n\n      this.save();\n    },\n\n    removeAnswer(answer) {\n      if (answer.Value < 0) {\n        this.TimesAnswered.LeftSum--;\n\n        if (this.TimesAnswered.LeftSum <= 0) {\n          this.TimesAnswered.LeftSum = 0;\n          this.SumOfAnswers.LeftSum = 0;\n        } else {\n          this.SumOfAnswers.LeftSum -= answer.Value;\n        }\n      } else {\n        this.TimesAnswered.RightSum--;\n\n        if (this.TimesAnswered.RightSum <= 0) {\n          this.TimesAnswered.RightSum = 0;\n          this.SumOfAnswers.RightSum = 0;\n        } else {\n          this.SumOfAnswers.RightSum -= answer.Value;\n        }\n      }\n\n      this.save();\n    },\n\n    allAnsweredUsers() {\n      return User.find({\n        'MyProfile.UserType.AnsweredQuestions.QuestionID': {\n          $eq: this._id\n        }\n      });\n    },\n\n    unanswerAll(noSave) {\n      let self = this;\n      self.allAnsweredUsers().forEach(function (user) {\n        let b = user.MyProfile.UserType.AnsweredQuestions.length;\n        user.MyProfile.UserType.unAnswerQuestion(user.MyProfile.UserType.getAnswerForQuestion(self._id), false);\n\n        if (!noSave) {\n          user.save();\n        }\n      });\n      this.reset();\n    },\n\n    reset() {\n      this.TimesAnswered.reset();\n      this.SumOfAnswers.reset();\n      this.save();\n    }\n\n  },\n  behaviors: {\n    timestamp: {},\n    softremove: {}\n  },\n  secured: {\n    update: false\n  },\n  events: {\n    beforeInsert(e) {\n      let u = User.findOne({\n        username: Defaults.user.username\n      });\n      UserNotify.add({\n        userId: u._id,\n        title: 'Questions',\n        body: 'New question added',\n        action: 'questions:' + e.currentTarget._id\n      });\n    },\n\n    beforeUpdate(e) {\n      const allowed = ['updatedAt', 'TimesAnswered', 'TimesAnswered.LeftSum', 'SumOfAnswers', 'SumOfAnswers.LeftSum', 'TimesAnswered.RightSum', 'SumOfAnswers.RightSum'];\n      const doc = e.currentTarget;\n      const fieldNames = doc.getModified();\n\n      _.each(fieldNames, function (fieldName) {\n        if (!Meteor.isServer && allowed.indexOf(fieldName) < 0 && !Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n          throw new Meteor.Error(403, \"You are not authorized\");\n        }\n      });\n    }\n\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"roles\":{\"server\":{\"publications.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/roles/server/publications.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nMeteor.publish(null, function () {\n  return Meteor.roles.find({});\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"team_goals\":{\"server\":{\"publications.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/team_goals/server/publications.js                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet TeamGoal;\nmodule.watch(require(\"../team_goals.js\"), {\n  TeamGoal(v) {\n    TeamGoal = v;\n  }\n\n}, 1);\nlet User;\nmodule.watch(require(\"../../users/users.js\"), {\n  User(v) {\n    User = v;\n  }\n\n}, 2);\nMeteor.publish('teamGoalsData', function (teamName) {\n  if (Roles.userIsInRole(Meteor.userId(), ['admin', 'view-goals'], teamName)) {\n    return TeamGoal.find({\n      teamName: teamName\n    });\n  } else {\n    this.stop();\n    return;\n  }\n});\nMeteor.publishComposite('teamGoalsUsers', function (teamName) {\n  if (!Roles.userIsInRole(Meteor.userId(), ['admin', 'view-goals'], teamName)) {\n    return this.ready();\n  }\n\n  return {\n    find() {\n      return TeamGoal.find({\n        teamName: teamName\n      });\n    },\n\n    children: [{\n      find(teamGoal) {\n        let userList = teamGoal.assignedTo.concat(teamGoal.mentors).concat(teamGoal.admins);\n        let fieldsObj = {};\n        fieldsObj[\"MyProfile.firstName\"] = 1;\n        fieldsObj[\"MyProfile.lastName\"] = 1;\n        return User.find({\n          _id: userList\n        }, {\n          fields: fieldsObj\n        });\n      }\n\n    }]\n  };\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/team_goals/methods.js                                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet TeamGoal;\nmodule.watch(require(\"./team_goals.js\"), {\n  TeamGoal(v) {\n    TeamGoal = v;\n  }\n\n}, 0);\nMeteor.methods({\n  'teamgoals.createNewGoal'(goal) {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin'], goal.teamName)) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    }\n\n    let g = new TeamGoal(goal);\n    return g.save();\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"team_goals.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/team_goals/team_goals.js                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  TeamGoal: () => TeamGoal,\n  GoalComment: () => GoalComment\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet User;\nmodule.watch(require(\"../users/users.js\"), {\n  User(v) {\n    User = v;\n  }\n\n}, 2);\nlet Class, Enum;\nmodule.watch(require(\"meteor/jagi:astronomy\"), {\n  Class(v) {\n    Class = v;\n  },\n\n  Enum(v) {\n    Enum = v;\n  }\n\n}, 3);\nlet UserNotify;\nmodule.watch(require(\"/imports/api/user_notify/user_notify.js\"), {\n  UserNotify(v) {\n    UserNotify = v;\n  }\n\n}, 4);\nconst GoalComment = Class.create({\n  name: 'GoalComment',\n  fields: {\n    userId: {\n      type: String,\n      default: function () {\n        return Meteor.userId();\n      }\n    },\n    date: {\n      type: Date,\n      default: function () {\n        return new Date();\n      }\n    },\n    text: {\n      type: String,\n      default: ''\n    }\n  }\n});\nconst TeamGoal = Class.create({\n  name: 'TeamGoal',\n  collection: new Mongo.Collection('team_goal'),\n  fields: {\n    teamName: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    description: {\n      type: String,\n      default: ''\n    },\n    parentId: {\n      type: String,\n      default: ''\n    },\n    assignedTo: {\n      type: [String],\n      default: []\n    },\n    mentors: {\n      type: [String],\n      default: []\n    },\n    assignedToStr: {\n      type: String,\n      transient: true\n    },\n    mentorsStr: {\n      type: String,\n      transient: true\n    },\n    adminsStr: {\n      type: String,\n      transient: true\n    },\n    admins: {\n      type: [String],\n      default: []\n    },\n    reachedDate: {\n      type: Date,\n      optional: true\n    },\n    startDate: {\n      type: Date,\n      optional: true\n    },\n    dueDate: {\n      type: Date,\n      optional: true\n    },\n    reviewDate: {\n      type: Date,\n      optional: true\n    },\n    reviewedOnDate: {\n      type: Date,\n      optional: true\n    },\n    goalComments: {\n      type: [GoalComment],\n      default: []\n    },\n    reviewComments: {\n      type: [GoalComment],\n      default: []\n    }\n  },\n  behaviors: {\n    timestamp: {}\n  },\n  helpers: {\n    getGoalRoleGroup() {\n      return this.teamName + '+' + this._id;\n    },\n\n    userIsAdmin() {\n      if (Roles.userIsInRole(Meteor.userId(), 'admin', this.teamName) || Roles.userIsInRole(Meteor.userId(), 'admin', this.getGoalRoleGroup())) {\n        //user is either a global admin, a team admin, or a goal admin\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    userIsMentor() {\n      if (Roles.userIsInRole(Meteor.userId(), 'mentor', this.getGoalRoleGroup())) {\n        //user is a mentor for this goal\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    userIsAssigned() {\n      if (Roles.userIsInRole(Meteor.userId(), 'assigned', this.getGoalRoleGroup())) {\n        //user is assigned to this goal\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    setDateField(fieldName, rdate) {\n      if (typeof rdate === \"undefined\") {\n        rdate = new Date();\n      } else if (!(rdate instanceof Date)) {\n        return false;\n      }\n\n      this[fieldName] = rdate;\n      return true;\n    },\n\n    getUserFullNameX(userId) {\n      let u = User.findOne({\n        _id: userId\n      });\n\n      if (!u) {\n        return \"Michael\";\n      }\n\n      let name = u.MyProfile.firstName + \" \" + u.MyProfile.lastName;\n      return name;\n    },\n\n    hasModifyPerm(fieldName) {\n      switch (fieldName) {\n        //admins-only fields\n        case 'dueDate':\n        case 'startDate':\n        case 'reachedDate':\n        case 'reviewDate':\n        case 'title':\n        case 'description':\n        case 'assignedTo':\n        case 'mentors':\n        case 'admins':\n        case 'subgoals':\n          return this.userIsAdmin();\n          break;\n        //admins and mentors\n\n        case 'reviewedOnDate':\n        case 'reviewComments':\n          return this.userIsAdmin() || this.userIsMentor();\n          break;\n        //anyone assigned to the goal\n\n        case 'goalComments':\n          return this.userIsAdmin() || this.userIsMentor() || this.userIsAssigned();\n          break;\n\n        default:\n          return false;\n          break;\n      }\n    },\n\n    notifyNew(oldList, newList) {\n      let diffList = _.difference(newList, oldList);\n\n      for (let i = 0; i < diffList.length; i++) {\n        UserNotify.add({\n          userId: diffList[i],\n          title: 'Team Goals',\n          body: 'You have been added to goal ' + this.title,\n          action: 'teamgoals:' + this.teamName\n        });\n      }\n    }\n\n  },\n  events: {\n    beforeSave(e) {\n      let egoal = e.currentTarget; //any user added to a goal is automatically added to the 'view-goals' role for the team\n      //if they are already in that role, this should just ignore the redundant addUser\n\n      let flds = [\"assignedTo\", \"mentors\", \"admins\"];\n\n      for (let i in flds) {\n        if (Array.isArray(egoal[flds[i]]) && egoal[flds[i]].length > 0) {\n          Roles.addUsersToRoles(egoal[flds[i]], 'view-goals', egoal.teamName);\n        }\n      }\n    }\n\n  },\n  meteorMethods: {\n    setDueDate(rdate) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      if (this.setDateField(\"dueDate\", rdate)) {\n        this.save();\n      } else {\n        throw new Meteor.Error(403, \"Invalid date\");\n      }\n    },\n\n    setGoalReached(rdate) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      if (this.setDateField(\"reachedDate\", rdate)) {\n        this.save();\n      } else {\n        throw new Meteor.Error(403, \"Invalid date\");\n      }\n    },\n\n    setReviewDate(rdate) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      if (this.setDateField(\"reviewDate\", rdate)) {\n        this.save();\n      } else {\n        throw new Meteor.Error(403, \"Invalid date\");\n      }\n    },\n\n    setGoalReviewedOn(rdate) {\n      //mentors and admins\n      if (!this.userIsAdmin() && !this.userIsMentor()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      if (this.setDateField(\"reviewedOnDate\", rdate)) {\n        this.save();\n      } else {\n        throw new Meteor.Error(403, \"Invalid date\");\n      }\n    },\n\n    addComment(commentTxt) {\n      //mentors, admins, and assignees\n      if (!this.userIsAdmin() && !this.userIsMentor() && !this.userIsAssigned()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.goalComments.push(new GoalComment({\n        userId: Meteor.userId(),\n        date: new Date(),\n        text: commentTxt\n      }));\n      this.save();\n    },\n\n    addReviewComment(commentTxt) {\n      //mentors and admins\n      if (!this.userIsAdmin() && !this.userIsMentor()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.reviewComments.push(new GoalComment({\n        userId: Meteor.userId(),\n        date: new Date(),\n        text: commentTxt\n      }));\n      this.save();\n    },\n\n    createNewGoal() {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      } //\n\n    },\n\n    setTitle(title) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.title = title;\n      this.save();\n    },\n\n    setDescription(descr) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.description = descr;\n      this.save();\n    },\n\n    setAssignedTo(ulist) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.notifyNew(this.assignedTo, ulist);\n      this.assignedTo = ulist;\n      this.save();\n    },\n\n    setMentors(ulist) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.notifyNew(this.mentors, ulist);\n      this.mentors = ulist;\n      this.save();\n    },\n\n    setAdmins(ulist) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.notifyNew(this.admins, ulist);\n      this.admins = ulist;\n      this.save();\n    },\n\n    getUserFullName(userId) {\n      const invocation = DDP._CurrentInvocation.get();\n\n      if (invocation.isSimulation) {\n        return \"George\";\n      }\n\n      let u = User.findOne({\n        _id: userId\n      });\n\n      if (!u) {\n        return \"Michael\";\n      }\n\n      let name = u.MyProfile.firstName + \" \" + u.MyProfile.lastName;\n      return name;\n    },\n\n    updateFromObj(updObj) {\n      let permError = false;\n\n      for (let fld in updObj) {\n        if (this[fld] !== updObj[fld] || Array.isArray(updObj[fld]) && _.isEqual(this[fld], updObj[fld])) {\n          if (this.hasModifyPerm(fld)) {\n            if (fld === \"assignedTo\" || fld === \"mentors\" || fld === \"admins\") {\n              this.notifyNew(this[fld], updObj[fld]);\n            }\n\n            this[fld] = updObj[fld];\n          } else {\n            permError = true;\n          }\n        }\n      }\n\n      this.save();\n\n      if (permError) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n    }\n\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"teams\":{\"server\":{\"publications.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/teams/server/publications.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Team;\nmodule.watch(require(\"../teams.js\"), {\n  Team(v) {\n    Team = v;\n  }\n\n}, 1);\nlet User;\nmodule.watch(require(\"../../users/users.js\"), {\n  User(v) {\n    User = v;\n  }\n\n}, 2);\nMeteor.publish('teamsData', function () {\n  if (this.userId) {\n    return Team.find({\n      $or: [{\n        Public: true\n      }, {\n        Members: Meteor.userId()\n      }]\n    }, {\n      fields: {\n        Name: 1,\n        Description: 1,\n        CreatedBy: 1,\n        Icon: 1,\n        Icon64: 1,\n        IconType: 1\n      }\n    });\n  } else {\n    return [];\n  }\n});\nMeteor.publish('teamsMemberOfList', userId => {\n  // if (userId == Meteor.userId() || Roles.userIsInRole(Meteor.userId(),'admin', Roles.GLOBAL_GROUP)) {\n  return Team.find({\n    Members: userId\n  }); // } else {\n  //    return [];\n  // }\n});\nMeteor.publishComposite('teamMemberList', userId => {\n  return {\n    find() {\n      let u = User.findOne({\n        _id: Meteor.userId()\n      });\n\n      if (typeof u === \"undefined\") {\n        return; // [];\n      }\n\n      let teamsList = [];\n\n      _.forEach(u.roles, (roles, team) => {\n        if (roles.indexOf('admin') > -1 || roles.indexOf('view-members')) {\n          teamsList.push(team);\n        }\n      });\n\n      let fieldsObj = {\n        Name: 1,\n        Description: 1,\n        Members: 1,\n        CreatedBy: 1,\n        Icon: 1,\n        Icon64: 1,\n        IconType: 1\n      };\n      return Team.find({\n        Name: {\n          '$in': teamsList\n        }\n      }, {\n        fields: fieldsObj\n      });\n    },\n\n    children: [{\n      find(team) {\n        if (Roles.userIsInRole(userId, ['admin', 'view-members'], team.Name) || Roles.userIsInRole(userId, 'admin', Roles.GLOBAL_GROUP)) {\n          let memberList = team.Members;\n          let reqQuery = {};\n          let fieldsObj = {};\n          fieldsObj[\"MyProfile.firstName\"] = 1;\n          fieldsObj[\"MyProfile.lastName\"] = 1;\n          fieldsObj[\"roles.\" + team.Name] = 1;\n          fieldsObj[\"teams\"] = 1;\n          reqQuery['roles.' + team.Name] = \"user-join-request\";\n          let u = User.find({\n            $or: [{\n              _id: {\n                '$in': memberList\n              }\n            }, reqQuery]\n          }, {\n            fields: fieldsObj\n          });\n          return u;\n        } else {\n          return this.ready();\n        }\n      }\n\n    }]\n  };\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/teams/methods.js                                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Team;\nmodule.watch(require(\"./teams.js\"), {\n  Team(v) {\n    Team = v;\n  }\n\n}, 0);\nMeteor.methods({\n  'team.createNewTeam'(newTeam) {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    }\n\n    newTeam.CreatedBy = Meteor.userId();\n    let t = new Team(newTeam);\n    return t.save();\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"teams.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/teams/teams.js                                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  Team: () => Team,\n  TeamIcon: () => TeamIcon\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet Class, Enum;\nmodule.watch(require(\"meteor/jagi:astronomy\"), {\n  Class(v) {\n    Class = v;\n  },\n\n  Enum(v) {\n    Enum = v;\n  }\n\n}, 2);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 3);\nlet User;\nmodule.watch(require(\"../users/users.js\"), {\n  User(v) {\n    User = v;\n  }\n\n}, 4);\nlet Defaults;\nmodule.watch(require(\"/imports/startup/both/defaults.js\"), {\n  Defaults(v) {\n    Defaults = v;\n  }\n\n}, 5);\nlet UserNotify;\nmodule.watch(require(\"/imports/api/user_notify/user_notify.js\"), {\n  UserNotify(v) {\n    UserNotify = v;\n  }\n\n}, 6);\nconst DefaultTeamID = \"NCuypCXN47KrSTeXh\";\nconst TeamIcon = Class.create({\n  name: \"TeamIcon\",\n  fields: {\n    data: {\n      type: String,\n      default: ''\n    },\n    contentType: {\n      type: String,\n      default: 'image/png'\n    }\n  }\n});\nconst Team = Class.create({\n  name: \"Team\",\n  collection: new Mongo.Collection('teams'),\n  fields: {\n    Name: {\n      type: String,\n      default: 'Whoa! The no-name team?'\n    },\n    Description: {\n      type: String,\n      default: 'This team is nondescript.'\n    },\n    Icon64: {\n      type: String,\n      default: ''\n    },\n    IconType: {\n      type: String,\n      defaut: 'image/png',\n      optional: true\n    },\n    Icon: {\n      type: TeamIcon,\n      default: function () {\n        return new TeamIcon();\n      }\n    },\n    Public: {\n      type: Boolean,\n      default: true\n    },\n    Members: {\n      type: [String],\n      default: []\n    },\n    Active: {\n      type: Boolean,\n      default: false\n    },\n    CreatedBy: {\n      type: String,\n      default: function () {\n        return this.userId;\n      }\n    }\n  },\n  indexes: {\n    nameIndex: {\n      fields: {\n        Name: 1\n      },\n      options: {\n        unique: true\n      }\n    }\n  },\n  meteorMethods: {\n    userRequestJoin() {\n      Roles.addUsersToRoles(Meteor.userId(), 'user-join-request', this.Name);\n    },\n\n    adminRequestUserJoin(user) {\n      if (Roles.userIsInRole(Meteor.userId(), 'admin', this.Name) && !Roles.userIsInRole(user, 'member', this.Name)) {\n        Roles.addUsersToRoles(user, 'admin-join-request', this.Name);\n\n        for (let i = 0; i < user.length; i++) {\n          UserNotify.add({\n            userId: user[i],\n            title: 'Teams',\n            body: 'Received join request for team ' + this.Name,\n            action: 'teams:' + this.Name.split(' ').join('-')\n          });\n        }\n      }\n    },\n\n    userAcceptJoin() {\n      if (Roles.userIsInRole(Meteor.userId(), 'admin-join-request', this.Name)) {\n        Roles.removeUsersFromRoles(Meteor.userId(), 'admin-join-request', this.Name);\n        this.addUsers(Meteor.userId());\n      }\n    },\n\n    userDeclineJoin() {\n      if (Roles.userIsInRole(Meteor.userId(), 'admin-join-request', this.Name)) {\n        Roles.removeUsersFromRoles(Meteor.userId(), 'admin-join-request', this.Name);\n      }\n    },\n\n    adminAcceptJoin(userId) {\n      if (Roles.userIsInRole(Meteor.userId(), 'admin', this.Name)) {\n        Roles.removeUsersFromRoles(userId, 'user-join-request', this.Name); //Roles.addUsersToRoles(userId, 'member', this.Name);\n\n        this.addUsers(userId);\n      }\n    },\n\n    adminRejectJoin(userId) {\n      if (Roles.userIsInRole(Meteor.userId(), 'admin', this.Name)) {\n        Roles.removeUsersFromRoles(userId, 'user-join-request', this.Name);\n      }\n    },\n\n    addRole(userId, role) {\n      if (Roles.userIsInRole(Meteor.userId(), 'admin', this.Name)) {\n        Roles.addUsersToRoles(userId, role, this.Name);\n      }\n    },\n\n    removeRole(userId, role) {\n      if (Roles.userIsInRole(Meteor.userId(), 'admin', this.Name)) {\n        Roles.removeUsersFromRoles(userId, role, this.Name);\n      }\n    },\n\n    updateFromObj(updObj) {\n      if (Roles.userIsInRole(Meteor.userId(), 'admin', this.Name)) {\n        for (let fld in updObj) {\n          if (\"Icon64\" !== fld && \"IconType\" !== fld && \"Icon\" !== fld) {\n            this[fld] = updObj[fld];\n          }\n        }\n\n        this.save();\n      }\n    },\n\n    uploadIcon(fileInfo, fileData) {\n      if (Meteor.isServer) {\n        var base64Image = new Buffer(fileData, 'binary').toString('base64');\n        this.Icon64 = base64Image;\n        this.IconType = 'image/png';\n        this.save();\n      }\n    }\n\n  },\n  helpers: {\n    addUsers(users) {\n      if (typeof users === 'string') {\n        users = [users];\n      } //admin list has to be filtered because getUsersInRole includes admin in GLOBAL_GROUP\n\n\n      let groupAdminList = Roles.getUsersInRole('admin', this.Name).fetch().filter(user => {\n        return \"undefined\" !== typeof user.roles && \"undefined\" !== typeof user.roles[this.Name] && user.roles[this.Name].indexOf('admin') > -1;\n      });\n\n      for (let i = 0; i < users.length; i++) {\n        if (this.Members.indexOf(users[i]) === -1) {\n          this.Members.push(users[i]);\n        }\n\n        let currUserRoles = ['member']; //Roles.addUsersToRoles(users[i], 'member', this.Name);\n        //if team doesn't have an admin, the first user added becomes admin\n\n        if (i == 0 && groupAdminList.length == 0) {\n          //Roles.addUsersToRoles(users[i], 'admin', this.Name);\n          currUserRoles.push('admin');\n        } else {\n          //Roles.addUsersToRoles(users[i], Defaults.role.name, this.Name);\n          currUserRoles.push(Defaults.role.name);\n        }\n\n        Roles.addUsersToRoles(users[i], currUserRoles, this.Name);\n        /*\n        let u = User.findOne( {_id: users[i]} );\n        if (u && u.teams.indexOf(this.Name) === -1) {\n            u.teams.push(this.Name);\n            u.save();\n        }\n        */\n      }\n\n      this.save();\n    },\n\n    removeUsers(users) {\n      if (typeof users === 'string') {\n        users = [users];\n      }\n\n      for (let i = 0; i < users.length; i++) {}\n    },\n\n    removeUsersFromTeamRoles(users, roles) {\n      if (typeof users === 'string') {\n        users = [users];\n      }\n\n      if (typeof roles === 'string') {\n        roles = [roles];\n      } //if removing the 'member' role from users, completely remove them from all roles and from the group\n\n\n      if (roles.indexOf('member') !== -1) {\n        this.removeUsers(users);\n      }\n\n      for (let i = 0; i < users.length; i++) {}\n    }\n\n  },\n  behaviors: {\n    timestamp: {},\n    softremove: {}\n  },\n  secured: {},\n  events: {\n    afterInit(e) {//\n    },\n\n    beforeSave(e) {\n      console.log(\"before save Team\", e.currentTarget.Name, e.currentTarget.Members);\n    }\n\n  }\n});\nTeam.Default = Team.findOne({\n  _id: DefaultTeamID\n});\n\nif (typeof Team.Default === \"undefined\") {\n  Team.Default = new Team({\n    _id: DefaultTeamID,\n    Name: 'No Team',\n    Active: true\n  });\n\n  if (Meteor.isServer) {\n    Team.Default.CreatedBy = 'kkcDYH3ix4f4Lb5qk'; //console.log(Team.Default);\n    //Team.Default.save();\n  }\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"type_readings\":{\"server\":{\"publications.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/type_readings/server/publications.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet TypeReading, ReadingRange;\nmodule.watch(require(\"../type_readings.js\"), {\n  TypeReading(v) {\n    TypeReading = v;\n  },\n\n  ReadingRange(v) {\n    ReadingRange = v;\n  }\n\n}, 1);\nlet User, MyersBriggs, Answer, UserType, Profile;\nmodule.watch(require(\"../../users/users.js\"), {\n  User(v) {\n    User = v;\n  },\n\n  MyersBriggs(v) {\n    MyersBriggs = v;\n  },\n\n  Answer(v) {\n    Answer = v;\n  },\n\n  UserType(v) {\n    UserType = v;\n  },\n\n  Profile(v) {\n    Profile = v;\n  }\n\n}, 2);\nlet MyersBriggsCategory;\nmodule.watch(require(\"../../questions/questions.js\"), {\n  MyersBriggsCategory(v) {\n    MyersBriggsCategory = v;\n  }\n\n}, 3);\nMeteor.publishComposite('typereadings.getAll', function () {\n  if (!Roles.userIsInRole(this.userId, ['admin'], Roles.GLOBAL_GROUP)) {\n    return this.ready();\n  }\n\n  var qry = {};\n  console.log(\"Publication 'typereadings.getAll': \", this.userId, qry);\n  return {\n    find() {\n      return TypeReading.find(qry, {\n        defaults: true,\n        sort: {\n          \"TypeReadingCategories.Range.low\": 1,\n          \"TypeReadingCategories.Range.Delta\": -1\n        }\n      });\n    },\n\n    children: [{\n      find(typereading) {\n        return User.find({\n          _id: typereading.CreatedBy\n        }, {\n          limit: 1\n        });\n      }\n\n    }]\n  };\n});\nMeteor.publishComposite('typereadings.byCategory', function (category) {\n  if (!Roles.userIsInRole(this.userId, ['admin'], Roles.GLOBAL_GROUP)) {\n    return this.ready();\n  }\n\n  var qry = {};\n  qry[\"TypeReadingCategories.\" + category + \".Range.low\"] = {\n    $gte: -100\n  };\n  console.log(\"Publication 'typereadings.byCategory': \", category, this.userId, qry);\n  return {\n    find() {\n      return TypeReading.find(qry, {\n        defaults: true,\n        sort: {\n          \"TypeReadingCategories.Range.low\": 1,\n          \"TypeReadingCategories.Range.Delta\": -1\n        }\n      });\n    },\n\n    children: [{\n      find(typereading) {\n        return User.find({\n          _id: typereading.CreatedBy\n        }, {\n          limit: 1\n        });\n      }\n\n    }]\n  };\n});\nMeteor.publish('typereadings.myReadings', function (userId, refresh) {\n  //console.log(userId, this.userId);\n  //if(this.userId !== userId && !Roles.userIsInRole(this.userId, ['admin'], Roles.GLOBAL_GROUP)) { return this.ready(); }\n  if (typeof userId === \"undefined\") {\n    return this.ready();\n  }\n\n  console.log(\"Publication 'typereadings.myReadings': \", this.userId, userId);\n  let self = this;\n  let user = User.findOne({\n    _id: userId\n  });\n\n  if (!user) {\n    return;\n  } //console.log(self, user);\n\n\n  let observe = {\n    added: function (id, fields) {\n      self.added('type_readings', id, fields);\n    },\n    changed: function (id, fields) {\n      self.removed(\"type_readings\", id);\n    },\n    removed: function (id) {\n      self.removed('type_readings', id);\n    }\n  };\n  let userType = user.MyProfile.UserType.Personality;\n  let handle = TypeReading.find({\n    $and: [{\n      $or: [{\n        $or: [{\n          \"TypeReadingCategories.0\": {\n            $type: 10\n          }\n        }, {\n          \"TypeReadingCategories.0\": {\n            $exists: false\n          }\n        }]\n      }, {\n        $and: [{\n          'TypeReadingCategories.0.Range.low': {\n            $lte: userType['IE'].Value\n          }\n        }, {\n          'TypeReadingCategories.0.Range.high': {\n            $gte: userType['IE'].Value\n          }\n        }]\n      }]\n    }, {\n      $or: [{\n        $or: [{\n          \"TypeReadingCategories.1\": {\n            $type: 10\n          }\n        }, {\n          \"TypeReadingCategories.1\": {\n            $exists: false\n          }\n        }]\n      }, {\n        $and: [{\n          'TypeReadingCategories.1.Range.low': {\n            $lte: userType['NS'].Value\n          }\n        }, {\n          'TypeReadingCategories.1.Range.high': {\n            $gte: userType['NS'].Value\n          }\n        }]\n      }]\n    }, {\n      $or: [{\n        $or: [{\n          \"TypeReadingCategories.2\": {\n            $type: 10\n          }\n        }, {\n          \"TypeReadingCategories.2\": {\n            $exists: false\n          }\n        }]\n      }, {\n        $and: [{\n          'TypeReadingCategories.2.Range.low': {\n            $lte: userType['TF'].Value\n          }\n        }, {\n          'TypeReadingCategories.2.Range.high': {\n            $gte: userType['TF'].Value\n          }\n        }]\n      }]\n    }, {\n      $or: [{\n        $or: [{\n          \"TypeReadingCategories.3\": {\n            $type: 10\n          }\n        }, {\n          \"TypeReadingCategories.3\": {\n            $exists: false\n          }\n        }]\n      }, {\n        $and: [{\n          'TypeReadingCategories.3.Range.low': {\n            $lte: userType['JP'].Value\n          }\n        }, {\n          'TypeReadingCategories.3.Range.high': {\n            $gte: userType['JP'].Value\n          }\n        }]\n      }]\n    }, {\n      'Categories.Categories': {\n        $elemMatch: {\n          $in: user.MyProfile.Categories.Categories\n        }\n      }\n    }, {\n      'Enabled': true\n    }]\n  }, {\n    defaults: true,\n    sort: {\n      'TypeReadingCategories.MyersBriggsCategory': 1,\n      'TypeReadingCategories.Range.Delta': -1\n    }\n  }).observeChanges(observe);\n  self.ready();\n  self.onStop(function () {\n    handle.stop();\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/type_readings/methods.js                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet TypeReading, ReadingRange, TypeReadingCategory, TypeReadingCategories;\nmodule.watch(require(\"./type_readings.js\"), {\n  TypeReading(v) {\n    TypeReading = v;\n  },\n\n  ReadingRange(v) {\n    ReadingRange = v;\n  },\n\n  TypeReadingCategory(v) {\n    TypeReadingCategory = v;\n  },\n\n  TypeReadingCategories(v) {\n    TypeReadingCategories = v;\n  }\n\n}, 1);\nlet User, MyersBriggs, Answer, UserType, Profile;\nmodule.watch(require(\"../users/users.js\"), {\n  User(v) {\n    User = v;\n  },\n\n  MyersBriggs(v) {\n    MyersBriggs = v;\n  },\n\n  Answer(v) {\n    Answer = v;\n  },\n\n  UserType(v) {\n    UserType = v;\n  },\n\n  Profile(v) {\n    Profile = v;\n  }\n\n}, 2);\nlet MyersBriggsCategory;\nmodule.watch(require(\"../questions/questions.js\"), {\n  MyersBriggsCategory(v) {\n    MyersBriggsCategory = v;\n  }\n\n}, 3);\nMeteor.methods({\n  'typereadings.insert'(header, body) {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    }\n\n    let newReading = new TypeReading({\n      Header: header,\n      Body: body,\n      CreatedBy: Meteor.userId()\n    });\n    console.log(header, body, newReading);\n    newReading.validate({\n      cast: true\n    });\n    return newReading.save();\n  },\n\n  'typereadings.addCategoryToReading'(readingId, category, high, low) {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    }\n\n    let reading = TypeReading.findOne({\n      _id: readingId\n    });\n    let catReading = new TypeReadingCategory();\n    catReading.MyersBriggsCategory = parseInt(category);\n    catReading.Range = new ReadingRange();\n    catReading.Range.high = parseInt(high);\n    catReading.Range.low = parseInt(low);\n    console.log(catReading);\n    reading.addTypeCategory(catReading);\n    reading.save();\n  },\n\n  'typereadings.delete'(readingId) {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    }\n\n    let reading = TypeReading.findOne({\n      _id: readingId\n    });\n    reading.remove();\n  },\n\n  'typereadings.toggle'(readingId) {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    }\n\n    let reading = TypeReading.findOne({\n      _id: readingId\n    });\n    reading.toggle();\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"type_readings.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/type_readings/type_readings.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  TypeReading: () => TypeReading,\n  ReadingRange: () => ReadingRange,\n  TypeReadingCategory: () => TypeReadingCategory,\n  TypeReadingCategories: () => TypeReadingCategories\n});\nlet Class;\nmodule.watch(require(\"meteor/jagi:astronomy\"), {\n  Class(v) {\n    Class = v;\n  }\n\n}, 0);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 2);\nlet MyersBriggsCategory;\nmodule.watch(require(\"../questions/questions.js\"), {\n  MyersBriggsCategory(v) {\n    MyersBriggsCategory = v;\n  }\n\n}, 3);\nlet Category, CategoryManager;\nmodule.watch(require(\"../categories/categories.js\"), {\n  Category(v) {\n    Category = v;\n  },\n\n  CategoryManager(v) {\n    CategoryManager = v;\n  }\n\n}, 4);\nconst ReadingRange = Class.create({\n  name: \"ReadingRange\",\n  fields: {\n    high: {\n      type: Number,\n      default: 50\n    },\n    low: {\n      type: Number,\n      default: 0\n    },\n    Delta: {\n      type: Number,\n      default: 50\n    }\n  },\n  helpers: {\n    in(val) {\n      return this.low <= val && val <= this.high;\n    },\n\n    setDelta() {\n      this.Delta = this.high - this.low;\n      return this;\n    }\n\n  }\n});\n\nReadingRange.Create = function (high, low) {\n  let m = new ReadingRange();\n  m.high = high;\n  m.low = low;\n  return m.setDelta();\n};\n\nReadingRange.FullHigh = function () {\n  return ReadingRange.Create(50, 0);\n};\n\nReadingRange.FullLow = function () {\n  return ReadingRange.Create(0, -50);\n};\n\nconst TypeReadingCategory = Class.create({\n  name: \"TypeReadingCategory\",\n  fields: {\n    MyersBriggsCategory: {\n      type: MyersBriggsCategory\n    },\n    Range: {\n      type: ReadingRange,\n      default: function () {\n        return ReadingRange.FullHigh;\n      }\n    }\n  }\n});\nconst TypeReadingCategories = Class.create({\n  name: \"TypeReadingCategories\",\n  fields: {\n    0: {\n      type: TypeReadingCategory,\n      optional: true\n    },\n    1: {\n      type: TypeReadingCategory,\n      optional: true\n    },\n    2: {\n      type: TypeReadingCategory,\n      optional: true\n    },\n    3: {\n      type: TypeReadingCategory,\n      optional: true\n    }\n  }\n});\nconst TypeReading = Class.create({\n  name: \"TypeReading\",\n  collection: new Mongo.Collection('type_readings'),\n  fields: {\n    TypeReadingCategories: {\n      type: TypeReadingCategories,\n      default: {}\n    },\n    Categories: {\n      type: CategoryManager,\n      default: function () {\n        return CategoryManager.OfType(\"TypeReading\");\n      }\n    },\n    Header: {\n      type: String,\n      default: \"\"\n    },\n    Body: {\n      type: String,\n      default: \"\"\n    },\n    CreatedBy: {\n      type: String,\n      default: function () {\n        return Meteor.userId();\n      }\n    },\n    Enabled: {\n      type: Boolean,\n      default: false\n    }\n  },\n  helpers: {\n    toggle() {\n      this.Enabled = !this.Enabled;\n      this.save();\n    },\n\n    addTypeCategory(cat) {\n      this.TypeReadingCategories[cat.MyersBriggsCategory] = cat;\n    }\n\n  },\n  events: {\n    beforeSave(e) {\n      _.forEach(e.target.TypeReadingCategories, reading => {\n        if (reading == null) {\n          return;\n        }\n\n        reading.Range.setDelta();\n      });\n\n      if (e.target.Categories.length() < 1) {\n        e.target.Categories.addCategory(Category.Default);\n      }\n    }\n\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"user_feedback\":{\"server\":{\"publications.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/user_feedback/server/publications.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet UserFeedback;\nmodule.watch(require(\"../user_feedback.js\"), {\n  UserFeedback(v) {\n    UserFeedback = v;\n  }\n\n}, 1);\nMeteor.publish('feedback.userComments', function () {\n  if (this.userId) {\n    return UserFeedback.find({\n      userId: Meteor.userId()\n    });\n  } else {\n    return [];\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/user_feedback/methods.js                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet UserFeedback;\nmodule.watch(require(\"./user_feedback.js\"), {\n  UserFeedback(v) {\n    UserFeedback = v;\n  }\n\n}, 0);\nMeteor.methods({\n  'feedback.createNewFeedback'(newFeedback) {\n    if (!Meteor.userId()) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    }\n\n    newFeedback.userId = Meteor.userId();\n    let f = new UserFeedback(newFeedback);\n    return f.save();\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"user_feedback.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/user_feedback/user_feedback.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  UserFeedback: () => UserFeedback\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet Class, Enum;\nmodule.watch(require(\"meteor/jagi:astronomy\"), {\n  Class(v) {\n    Class = v;\n  },\n\n  Enum(v) {\n    Enum = v;\n  }\n\n}, 2);\nconst UserFeedback = Class.create({\n  name: 'UserFeedback',\n  collection: new Mongo.Collection('user_feedback'),\n  fields: {\n    userId: {\n      type: String,\n      default: ''\n    },\n    source: {\n      type: String,\n      default: ''\n    },\n    context: {\n      type: String,\n      default: ''\n    },\n    comment: {\n      type: String,\n      default: ''\n    },\n    dateCreated: {\n      type: Date,\n      default: function () {\n        return new Date();\n      }\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"user_notify\":{\"server\":{\"publications.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/user_notify/server/publications.js                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet UserNotify;\nmodule.watch(require(\"../user_notify.js\"), {\n  UserNotify(v) {\n    UserNotify = v;\n  }\n\n}, 1);\nMeteor.publish('notificationList', function (userId) {\n  if (this.userId == userId) {\n    let un = UserNotify.find({\n      userId: this.userId\n    });\n    return un;\n  } else {\n    return [];\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"user_notify.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/user_notify/user_notify.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  UserNotify: () => UserNotify\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet Class, Enum;\nmodule.watch(require(\"meteor/jagi:astronomy\"), {\n  Class(v) {\n    Class = v;\n  },\n\n  Enum(v) {\n    Enum = v;\n  }\n\n}, 2);\nlet User;\nmodule.watch(require(\"../users/users.js\"), {\n  User(v) {\n    User = v;\n  }\n\n}, 3);\nlet Email;\nmodule.watch(require(\"meteor/email\"), {\n  Email(v) {\n    Email = v;\n  }\n\n}, 4);\nlet UserNotify = Class.create({\n  name: \"UserNotify\",\n  collection: new Mongo.Collection('user_notify'),\n  fields: {\n    userId: {\n      type: String,\n      default: ''\n    },\n    isRead: {\n      type: Boolean,\n      default: false\n    },\n    isPushed: {\n      type: Boolean,\n      default: false\n    },\n    isEmailed: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    body: {\n      type: String,\n      default: ''\n    },\n    action: {\n      type: String,\n      default: ''\n    },\n    createdDate: {\n      type: Date,\n      default: function () {\n        return new Date();\n      }\n    }\n  },\n  meteorMethods: {\n    markRead() {\n      this.isRead = true;\n      this.save();\n    },\n\n    markNotified() {\n      this.isPushed = true;\n      this.save();\n    }\n\n  },\n  helpers: {\n    test() {\n      console.log(\"123\");\n    },\n\n    pushNotify(opts) {\n      let noteOpts = {\n        body: this.body,\n        icon: '/img/panda.png',\n        data: this._id\n      };\n      let browserNote;\n\n      if (!(\"Notification\" in window)) {\n        alert(\"This browser does not support desktop notification\");\n      } // Let's check whether notification permissions have already been granted\n      else if (Notification.permission === \"granted\") {\n          // If it's okay let's create a notification\n          browserNote = new Notification(this.title, noteOpts);\n        } // Otherwise, we need to ask the user for permission\n        else if (Notification.permission !== \"denied\") {\n            Notification.requestPermission(function (permission) {\n              // If the user accepts, let's create a notification\n              if (permission === \"granted\") {\n                browserNote = new Notification(this.title, noteOpts);\n              }\n            });\n          }\n\n      if (Notification.permission === \"granted\" && typeof opts.onclick !== 'undefined') {\n        browserNote.onclick = opts.onclick;\n      }\n    }\n\n  },\n  events: {\n    beforeSave(e) {\n      if (Meteor.isServer) {\n        let note = e.currentTarget;\n\n        if (!note.isEmailed) {\n          let u = User.findOne({\n            _id: note.userId\n          });\n\n          if (u) {\n            let addr = u.emails[0].address;\n            Email.send({\n              to: addr,\n              from: \"wayne@paladinarcher.com\",\n              subject: \"Developer Level Notification - \" + note.title,\n              text: note.body\n            });\n          }\n        }\n      }\n    }\n\n  }\n});\n\nif (Meteor.isClient) {//\n}\n\nUserNotify.add = function (opts) {\n  let notify = new UserNotify(opts);\n  notify.save();\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"user_segments\":{\"server\":{\"publications.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/user_segments/server/publications.js                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet UserSegment;\nmodule.watch(require(\"../user_segments.js\"), {\n  UserSegment(v) {\n    UserSegment = v;\n  }\n\n}, 1);\nMeteor.publish('segmentList', function () {\n  //if (Meteor.userId()) {\n  return UserSegment.find(); //} else {\n  //    this.stop();\n  //    return;\n  //}\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"methods.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/user_segments/methods.js                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet UserSegment;\nmodule.watch(require(\"./user_segments.js\"), {\n  UserSegment(v) {\n    UserSegment = v;\n  }\n\n}, 0);\nMeteor.methods({\n  'segment.createNewSegment'(name, dscr) {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    } else {\n      let s = new UserSegment({\n        name: name,\n        description: dscr\n      });\n      return s.save();\n    }\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"user_segments.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/user_segments/user_segments.js                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  UserSegment: () => UserSegment\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet Class, Enum;\nmodule.watch(require(\"meteor/jagi:astronomy\"), {\n  Class(v) {\n    Class = v;\n  },\n\n  Enum(v) {\n    Enum = v;\n  }\n\n}, 2);\nconst UserSegment = Class.create({\n  name: 'UserSegment',\n  collection: new Mongo.Collection('user_segments'),\n  fields: {\n    name: {\n      type: String,\n      default: 'Default user segment'\n    },\n    description: {\n      type: String,\n      default: 'The default user segment for relevant content'\n    }\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"users\":{\"server\":{\"publications.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/users/server/publications.js                                                                            //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet User;\nmodule.watch(require(\"../users.js\"), {\n  User(v) {\n    User = v;\n  }\n\n}, 1);\nMeteor.publish('userData', function () {\n  if (this.userId) {\n    return User.find({\n      _id: this.userId\n    }, {\n      fields: {\n        roles: 1,\n        MyProfile: 1\n      }\n    });\n  } else {\n    return this.ready();\n  }\n});\nMeteor.publish('userList', function () {\n  if (Roles.userIsInRole(this.userId, ['admin'], Roles.GLOBAL_GROUP)) {\n    return User.find({});\n  } else {\n    return User.find({}, {\n      fields: {\n        roles: 1,\n        username: 1,\n        MyProfile: 1\n      }\n    });\n  }\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"methods.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/users/methods.js                                                                                        //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nMeteor.methods({\n  'user.sendVerificationEmail'() {\n    let userId = Meteor.userId();\n\n    if (userId) {\n      Accounts.emailTemplates.siteName = \"DeveloperLevel\";\n      Accounts.emailTemplates.from = \"DeveloperLevel <wayne@paladinarcher.com>\";\n      Accounts.emailTemplates.verifyEmail = {\n        subject() {\n          return \"[DeveloperLevel] Verify your email address\";\n        },\n\n        text(user, url) {\n          let emailAddress = user.emails[0].address,\n              urlWithoutHash = url.replace('#/', ''),\n              supportEmail = \"support@developerlevel.com\",\n              emailBody = `To verify your email address (${emailAddress}) visit the following link:\\n\\n${urlWithoutHash}\\n\\n If you did not request this verification, please ignore this email.`;\n          return emailBody;\n        }\n\n      };\n      return Accounts.sendVerificationEmail(userId);\n    }\n  }\n\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"users.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/users/users.js                                                                                          //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  User: () => User,\n  Profile: () => Profile,\n  UserType: () => UserType,\n  MyersBriggs: () => MyersBriggs,\n  Answer: () => Answer\n});\nlet Class;\nmodule.watch(require(\"meteor/jagi:astronomy\"), {\n  Class(v) {\n    Class = v;\n  }\n\n}, 0);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet MyersBriggsCategory, Question;\nmodule.watch(require(\"../questions/questions.js\"), {\n  MyersBriggsCategory(v) {\n    MyersBriggsCategory = v;\n  },\n\n  Question(v) {\n    Question = v;\n  }\n\n}, 2);\nlet Category, CategoryManager;\nmodule.watch(require(\"../categories/categories.js\"), {\n  Category(v) {\n    Category = v;\n  },\n\n  CategoryManager(v) {\n    CategoryManager = v;\n  }\n\n}, 3);\nlet Defaults;\nmodule.watch(require(\"../../startup/both/defaults.js\"), {\n  Defaults(v) {\n    Defaults = v;\n  }\n\n}, 4);\nlet Team;\nmodule.watch(require(\"../teams/teams.js\"), {\n  Team(v) {\n    Team = v;\n  }\n\n}, 5);\nlet UserSegment;\nmodule.watch(require(\"../user_segments/user_segments.js\"), {\n  UserSegment(v) {\n    UserSegment = v;\n  }\n\n}, 6);\nconst MyersBriggsBit = Class.create({\n  name: 'MyersBriggsBit',\n  fields: {\n    Value: {\n      type: Number,\n      default: 0\n    },\n    Totals: {\n      type: Number,\n      default: 0\n    },\n    QuestionCount: {\n      type: Number,\n      default: 0\n    }\n  },\n  helpers: {\n    addValue(value) {\n      this.Totals += value;\n      this.QuestionCount++;\n      this.Value = this.QuestionCount == 0 ? 0 : this.Totals / this.QuestionCount;\n    },\n\n    removeValue(value) {\n      this.QuestionCount--;\n\n      if (this.QuestionCount < 0) {\n        this.QuestionCount = 0;\n      }\n\n      if (this.QuestionCount == 0) {\n        this.Totals = this.Value = 0;\n        return;\n      }\n\n      this.Totals -= value;\n      this.Value = this.Totals / this.QuestionCount;\n    },\n\n    reset() {\n      this.Totals = 0;\n      this.QuestionCount = 0;\n      this.Value = 0;\n    }\n\n  }\n});\nconst MyersBriggs = Class.create({\n  name: 'MyersBriggs',\n  fields: {\n    IE: {\n      type: MyersBriggsBit,\n      default: function () {\n        return new MyersBriggsBit();\n      }\n    },\n    NS: {\n      type: MyersBriggsBit,\n      default: function () {\n        return new MyersBriggsBit();\n      }\n    },\n    TF: {\n      type: MyersBriggsBit,\n      default: function () {\n        return new MyersBriggsBit();\n      }\n    },\n    JP: {\n      type: MyersBriggsBit,\n      default: function () {\n        return new MyersBriggsBit();\n      }\n    }\n  },\n  helpers: {\n    addByCategory(category, value) {\n      console.log(category, value);\n      let name = this.getIdentifierById(category);\n      this[name].addValue(value);\n    },\n\n    removeByCategory(category, value) {\n      let name = this.getIdentifierById(category);\n      this[name].removeValue(value);\n    },\n\n    getIdentifierById(categoryId) {\n      if (categoryId === 0) {\n        return 'IE';\n      }\n\n      if (categoryId === 1) {\n        return 'NS';\n      }\n\n      if (categoryId === 2) {\n        return 'TF';\n      }\n\n      return 'JP';\n    },\n\n    getFourLetter() {\n      let IEL = this.IE.Value === 0 ? '_' : this.IE.Value < 0 ? 'I' : 'E';\n      let NSL = this.NS.Value === 0 ? '_' : this.NS.Value < 0 ? 'N' : 'S';\n      let TFL = this.TF.Value === 0 ? '_' : this.TF.Value < 0 ? 'T' : 'F';\n      let JPL = this.JP.Value === 0 ? '_' : this.JP.Value < 0 ? 'J' : 'P';\n      return `${IEL}${NSL}${TFL}${JPL}`;\n    },\n\n    reset() {\n      for (let i = 0; i < 4; i++) {\n        this[this.getIdentifierById(i)].reset();\n      }\n    }\n\n  }\n});\nconst Answer = Class.create({\n  name: 'Answer',\n  fields: {\n    Category: {\n      type: MyersBriggsCategory,\n      default: 0\n    },\n    Categories: {\n      type: [MyersBriggsCategory],\n      default: []\n    },\n    QuestionID: {\n      type: String,\n      default: ''\n    },\n    Reversed: {\n      type: Boolean,\n      default: false\n    },\n    Value: {\n      type: Number,\n      default: 0\n    },\n    AnsweredAt: {\n      type: Date,\n      default: function () {\n        return new Date();\n      }\n    }\n  },\n  helpers: {\n    getQuestion() {\n      let q = Question.findOne({\n        _id: this.QuestionID\n      });\n      return q;\n    },\n\n    unanswer() {\n      this.getQuestion().removeAnswer(this);\n    }\n\n  }\n});\nconst UserType = Class.create({\n  name: 'UserType',\n  fields: {\n    Personality: {\n      type: MyersBriggs,\n      default: function () {\n        return new MyersBriggs();\n      }\n    },\n    AnsweredQuestions: {\n      type: [Answer],\n      default: function () {\n        return [];\n      }\n    },\n    TotalQuestions: {\n      type: Number,\n      default: 0\n    }\n  },\n  helpers: {\n    getAnsweredQuestionsIDs() {\n      let qids = [];\n\n      _.each(this.AnsweredQuestions, function (ans) {\n        qids.push(ans.QuestionID);\n      });\n\n      return qids;\n    },\n\n    setTotalQuestions(totalQuestions) {\n      //console.log(\"user.js totalQuestions\", totalQuestions);\n      this.TotalQuestions = totalQuestions; //console.log(\"user.js totalQuestions2\", this.TotalQuestions);\n    },\n\n    getTotalQuestions() {\n      return this.TotalQuestions;\n    },\n\n    answerQuestion(answer) {\n      this.AnsweredQuestions.push(answer);\n      console.log(this.AnsweredQuestions);\n      console.log(answer.Categories);\n      let contextThis = this;\n\n      _.each(answer.Categories, function (cat) {\n        contextThis.Personality.addByCategory(cat, answer.Value);\n      }); //this.Personality.addByCategory(answer.Category, answer.Value);\n\n    },\n\n    unAnswerQuestion(answer, skipSlice) {\n      let index = this.getAnswerIndexForQuestionID(answer.QuestionID);\n      let before = this.AnsweredQuestions.length;\n\n      if (index < 0) {\n        return;\n      }\n\n      console.log(index);\n\n      if (!skipSlice) {\n        if (index == 0) {\n          this.AnsweredQuestions.shift();\n        } else if (index == this.AnsweredQuestions.length - 1) {\n          this.AnsweredQuestions.pop();\n        } else {\n          this.AnsweredQuestions = this.AnsweredQuestions.slice(0, index).concat(this.AnsweredQuestions.slice(index + 1));\n        }\n      }\n\n      answer.unanswer();\n\n      _.each(answer.Categories, function (cat) {\n        this.Personality.removeByCategory(cat, answer.Value);\n      }); //this.Personality.removeByCategory(answer.Category, answer.Value);\n\n\n      console.log(\"User Answer Count: \" + before + \" => \" + this.AnsweredQuestions.length);\n    },\n\n    getAnswerIndexForQuestionID(questionId) {\n      for (let i = 0; i < this.AnsweredQuestions.length; i++) {\n        if (this.AnsweredQuestions[i].QuestionID == questionId) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n\n    getAnswerForQuestion(questionId) {\n      return _.find(this.AnsweredQuestions, function (ans, i) {\n        return ans.QuestionID == questionId;\n      });\n    },\n\n    reset() {\n      let self = this;\n\n      _.each(this.AnsweredQuestions, function (ans) {\n        self.unAnswerQuestion(ans, true);\n      });\n\n      this.Personality.reset();\n      this.AnsweredQuestions = [];\n    }\n\n  }\n});\nconst DashboardPane = Class.create({\n  name: 'DashboardPane',\n  fields: {\n    size: {\n      type: Number,\n      default: 4\n    },\n    name: {\n      type: String,\n      default: 'App_home'\n    },\n    title: {\n      type: String,\n      default: 'Personality Questions'\n    },\n    route: {\n      type: String,\n      default: '/'\n    }\n  }\n});\nconst Profile = Class.create({\n  name: 'Profile',\n  fields: {\n    firstName: {\n      type: String,\n      validators: [{\n        type: 'minLength',\n        param: 2\n      }]\n    },\n    lastName: {\n      type: String,\n      validators: [{\n        type: 'minLength',\n        param: 2\n      }]\n    },\n    UserType: {\n      type: UserType,\n      default: function () {\n        return new UserType();\n      }\n    },\n    gender: {\n      type: Boolean,\n      default: false\n    },\n    birthDate: {\n      type: Date,\n      optional: true\n    },\n    Categories: {\n      type: CategoryManager,\n      default: function () {\n        return CategoryManager.OfType(\"User\");\n      }\n    },\n    dashboardPanes: {\n      type: [DashboardPane],\n      default: []\n    },\n    segments: {\n      type: [String],\n      default: []\n    }\n  },\n  helpers: {\n    calculateAge() {\n      if (this.birthDate) {\n        const diff = Date.now() - this.birthDate.getTime();\n        this.age = Math.abs(new Date(diff).getUTCFullYear() - 1970);\n      }\n    },\n\n    fullName(param) {\n      var fullName = this.firstName + ' ' + this.lastName;\n\n      if (param === 'lower') {\n        return fullName.toLowerCase();\n      } else if (param === 'upper') {\n        return fullName.toUpperCase();\n      }\n\n      return fullName;\n    }\n\n  }\n});\nconst User = Class.create({\n  name: 'User',\n  collection: Meteor.users,\n  fields: {\n    createdAt: Date,\n    emails: {\n      type: [Object],\n      default: function () {\n        return [];\n      }\n    },\n    MyProfile: {\n      type: Profile,\n      default: function () {\n        return new Profile();\n      }\n    },\n    teams: {\n      type: [String],\n      default: function () {\n        return [Team.Default.Name];\n      }\n    },\n    roles: {\n      type: Object\n    }\n  },\n\n  resolveError({\n    nestedName,\n    validator\n  }) {\n    console.log(nestedName, validator);\n  },\n\n  events: {\n    afterInit(e) {\n      e.target.MyProfile.calculateAge();\n    },\n\n    beforeSave(e) {\n      if (e.currentTarget.MyProfile.Categories.length() === 0) {\n        e.currentTarget.MyProfile.Categories.addCategory(Category.Default);\n      }\n\n      if (e.currentTarget.teams.length === 0) {\n        e.currentTarget.addTeam(Team.Default.Name);\n      }\n    }\n\n  },\n  meteorMethods: {\n    create() {\n      return this.save();\n    },\n\n    changeName(firstName, lastName) {\n      check(firstName, String);\n      check(lastName, String);\n      this.MyProfile.firstName = firstName;\n      this.MyProfile.lastName = lastName;\n      return this.save();\n    },\n\n    fullName(param) {\n      return this.MyProfile.fullName(param);\n    },\n\n    addTeam(teamName) {\n      let teamDoc = Team.findOne({\n        \"Name\": teamName\n      });\n\n      if (typeof teamDoc !== \"undefined\") {\n        teamDoc.addUsers(this._id);\n      } else {\n        return false;\n      }\n    },\n\n    profileUpdate(uprofile) {\n      check(uprofile.firstName, String);\n      check(uprofile.lastName, String);\n      check(uprofile.gender, Boolean);\n      this.MyProfile.firstName = uprofile.firstName;\n      this.MyProfile.lastName = uprofile.lastName;\n      this.MyProfile.gender = uprofile.gender;\n      this.MyProfile.segments = uprofile.segments;\n\n      if (\"\" !== uprofile.birthDate) {\n        this.MyProfile.birthDate = new Date(uprofile.birthDate);\n      }\n\n      return this.save();\n    }\n\n  },\n  indexes: {},\n  behaviors: {\n    slug: {\n      fieldName: 'email'\n    },\n    timestamp: {}\n  }\n});\n\nif (Meteor.isServer) {\n  User.extend({\n    fields: {\n      services: Object\n    }\n  });\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"categories\":{\"categories.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/api/categories/categories.js                                                                                //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  Category: () => Category,\n  CategoryManager: () => CategoryManager\n});\nlet Class;\nmodule.watch(require(\"meteor/jagi:astronomy\"), {\n  Class(v) {\n    Class = v;\n  }\n\n}, 0);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nconst DefaultCategoryID = \"xhKdwhacaWTcBTGPn\";\nconst TypeStats = Class.create({\n  name: 'TypeStats',\n  fields: {\n    num: {\n      type: Number,\n      default: 0\n    }\n  }\n});\nconst Category = Class.create({\n  name: 'Category',\n  collection: new Mongo.Collection('categories'),\n  fields: {\n    name: {\n      type: String,\n      default: \"the Unnamed Category\"\n    },\n    description: {\n      type: String,\n      default: \"this is the default stuff for a Category\"\n    },\n    stats: {\n      type: Object,\n      default: function () {\n        return {};\n      }\n    }\n  },\n  helpers: {\n    addByType(type) {\n      if (!this.getStatsByType(type)) {\n        this.stats[type] = new TypeStats();\n      }\n\n      this.getStatsByType(type).num++;\n      this.save();\n    },\n\n    removeByType(type) {\n      if (!this.getStatsByType(type)) {\n        return false;\n      }\n\n      this.getStatsByType(type).num--;\n      this.save();\n    },\n\n    getStatsByType(type) {\n      return this.stats[type];\n    }\n\n  },\n  meteorMethods: {\n    update(name, dscr) {\n      if (Roles.userIsInRole(Meteor.userId(), 'admin', Roles.GLOBAL_GROUP)) {\n        this.name = name;\n        this.description = dscr;\n        console.log(this.save());\n      }\n    }\n\n  }\n});\nCategory.Default = Category.findOne({\n  _id: DefaultCategoryID\n});\n\nif (typeof Category.Default === \"undefined\") {\n  Category.Default = new Category({\n    _id: DefaultCategoryID\n  });\n\n  if (Meteor.isServer) {\n    Category.Default.save();\n  }\n}\n\nconst CategoryManager = Class.create({\n  name: 'CategoryManager',\n  fields: {\n    Categories: {\n      type: [String],\n      default: function () {\n        return [];\n      }\n    },\n    Type: {\n      type: String,\n      default: \"um... what!?\"\n    }\n  },\n  helpers: {\n    length() {\n      return this.Categories.length;\n    },\n\n    areIntersected(categoryManager) {\n      for (let i = 0; i < this.Categories.length; i++) {\n        for (let j = 0; j < categoryManager.Categories.length; i++) {\n          if (this.Categories[i] == categoryManager.Categories[j]) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    addCategory(category, type) {\n      if (!type) {\n        type = this.Type;\n      }\n\n      this.Categories.push(category._id);\n      category.addByType(type);\n    },\n\n    hasCategory(category) {\n      if (this.Categories.length == 0) {\n        this.addCategory(Category.Default, this.Type);\n      }\n\n      return _.find(this.Categories, function (catId) {\n        return category._id == catId;\n      });\n    },\n\n    removeCategory(category, type, skipSlice) {\n      let index = -1;\n\n      _.each(this.Categories, function (catId, i) {\n        if (catId == category._id) {\n          index = i;\n        }\n      });\n\n      if (index < 0) {\n        return false;\n      }\n\n      if (!skipSlice) {\n        if (index == 0) {\n          this.Categories.shift();\n        } else if (index == this.Categories.length - 1) {\n          this.Categories.pop();\n        } else {\n          this.Categories = this.Categories.slice(0, index).concat(this.Categories.slice(index + 1));\n        }\n      }\n\n      category.removeByType(type);\n    }\n\n  }\n});\n\nCategoryManager.OfType = function (type) {\n  let c = new CategoryManager();\n  c.Type = type;\n  return c;\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"startup\":{\"both\":{\"at_config.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/startup/both/at_config.js                                                                                   //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet User;\nmodule.watch(require(\"/imports/api/users/users.js\"), {\n  User(v) {\n    User = v;\n  }\n\n}, 0);\nlet Team;\nmodule.watch(require(\"/imports/api/teams/teams.js\"), {\n  Team(v) {\n    Team = v;\n  }\n\n}, 1);\nlet Defaults;\nmodule.watch(require(\"/imports/startup/both/defaults.js\"), {\n  Defaults(v) {\n    Defaults = v;\n  }\n\n}, 2);\n\nconst myPostLogout = function () {\n  //example redirect after logout\n  FlowRouter.go('/signin');\n};\n\nconst mySubmitFunc = function (error, state) {\n  if (!error) {\n    if (state === \"signIn\") {// Successfully logged in\n      // ...\n    }\n\n    if (state === \"signUp\") {// Successfully registered\n      // ...\n    }\n  }\n};\n\nfunction myPreSubmitFunc() {\n  console.log(\"Pre:  \", arguments);\n}\n\nfunction myPostSubmitFunc(userId, info) {\n  Accounts.emailTemplates.siteName = \"DeveloperLevel\";\n  Accounts.emailTemplates.from = \"DeveloperLevel <wayne@paladinarcher.com>\";\n  Accounts.emailTemplates.verifyEmail = {\n    subject() {\n      return \"[DeveloperLevel] Verify your email address\";\n    },\n\n    text(user, url) {\n      let emailAddress = user.emails[0].address,\n          urlWithoutHash = url.replace('#/', ''),\n          supportEmail = \"support@developerlevel.com\",\n          emailBody = `To verify your email address (${emailAddress}) visit the following link:\\n\\n${urlWithoutHash}\\n\\n If you did not request this verification, please ignore this email.`;\n      return emailBody;\n    }\n\n  };\n  Accounts.sendVerificationEmail(userId);\n  console.log(\"Post: \", arguments);\n}\n\nAccountsTemplates.configure({\n  // Behavior\n  confirmPassword: true,\n  enablePasswordChange: true,\n  forbidClientAccountCreation: false,\n  overrideLoginErrors: true,\n  sendVerificationEmail: false,\n  lowercaseUsername: false,\n  focusFirstInput: true,\n  // Appearance\n  showAddRemoveServices: false,\n  showForgotPasswordLink: true,\n  showLabels: true,\n  showPlaceholders: true,\n  showResendVerificationEmailLink: false,\n  // Client-side Validation\n  continuousValidation: false,\n  negativeFeedback: false,\n  negativeValidation: true,\n  positiveValidation: true,\n  positiveFeedback: true,\n  showValidating: true,\n  // Privacy Policy and Terms of Use\n  privacyUrl: 'privacy',\n  termsUrl: 'terms-of-use',\n  // Redirects\n  homeRoutePath: '/',\n  redirectTimeout: 4000,\n  // Routing\n  defaultTemplate: 'Auth_page',\n  defaultLayout: 'App_body',\n  defaultContentRegion: 'main',\n  defaultLayoutRegions: {},\n  // Hooks\n  onLogoutHook: myPostLogout,\n  onSubmitHook: mySubmitFunc,\n  preSignUpHook: myPreSubmitFunc,\n  postSignUpHook: myPostSubmitFunc,\n  // Texts\n  texts: {\n    button: {\n      signUp: \"Register Now!\"\n    },\n    socialSignUp: \"Register\",\n    socialIcons: {\n      \"meteor-developer\": \"fa fa-rocket\"\n    },\n    title: {\n      forgotPwd: \"Recover Your Password\"\n    },\n    inputIcons: {\n      isValidating: \"fa fa-spinner fa-spin\",\n      hasSuccess: \"fa fa-check\",\n      hasError: \"fa fa-times\"\n    }\n  }\n}); // Define these routes in a file loaded on both client and server\n\nAccountsTemplates.configureRoute('signIn', {\n  name: 'signin',\n  path: '/signin'\n});\nAccountsTemplates.configureRoute('signUp', {\n  name: 'join',\n  path: '/join'\n});\nAccountsTemplates.configureRoute('forgotPwd');\nAccountsTemplates.configureRoute('resetPwd', {\n  name: 'resetPwd',\n  path: '/reset-password'\n});\nAccountsTemplates.addFields([{\n  _id: \"first_name\",\n  type: \"text\",\n  required: true,\n  displayName: \"First Name\",\n  func: function (value) {\n    //if(Meteor.isClient) {\n    console.log(\"Firstname validation: \", value); //}\n\n    return false;\n  }\n}, {\n  _id: \"last_name\",\n  type: \"text\",\n  required: true,\n  displayName: \"Last Name\",\n  func: function (value) {\n    //if(Meteor.isClient) {\n    console.log(\"Lastname validation: \", value); //}\n\n    return false;\n  }\n}, {\n  _id: \"gender\",\n  type: \"select\",\n  required: true,\n  displayName: \"Gender\",\n  select: [{\n    text: \"Male\",\n    value: \"male\"\n  }, {\n    text: \"Female\",\n    value: \"female\"\n  }]\n}]);\n\nif (Meteor.isServer) {\n  Accounts.onCreateUser((options, user) => {\n    user.slug = options.email;\n    user.updateAt = user.createdAt;\n    user.MyProfile = {\n      firstName: options.profile.first_name,\n      lastName: options.profile.last_name,\n      gender: options.profile.gender === \"female\",\n      UserType: {\n        Personality: {\n          IE: {},\n          NS: {},\n          TF: {},\n          JP: {}\n        },\n        AnsweredQuestions: []\n      },\n      birthDate: undefined,\n      age: undefined\n    };\n    user.teams = [Team.Default.Name];\n    user.roles = {};\n    user.profile = options.profile;\n\n    if (options.isAdmin && options.username === 'admin') {\n      user.roles[Roles.GLOBAL_GROUP] = ['admin'];\n      Roles.addUsersToRoles(user._id, 'admin', Roles.GLOBAL_GROUP);\n    } else {\n      let t = Team.findOne({\n        Name: Team.Default.Name\n      });\n      user.roles[Team.Default.Name] = ['member', Defaults.role.name];\n      t.addUsers(user._id);\n    }\n\n    return user;\n  });\n  Accounts.validateNewUser(function (user) {\n    var loggedInUser;\n\n    try {\n      loggedInUser = Meteor.user();\n    } catch (ex) {\n      console.log(ex);\n    }\n\n    if (!loggedInUser || Roles.userIsInRole(loggedInUser, ['admin', 'manage-users'], Roles.GLOBAL_GROUP)) {\n      // NOTE: This example assumes the user is not using groups.\n      return true;\n    }\n\n    throw new Meteor.Error(403, \"Not authorized to create new users\");\n  });\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"defaults.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/startup/both/defaults.js                                                                                    //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  Defaults: () => Defaults\n});\nconst Defaults = {\n  'user': {\n    'username': 'admin',\n    'email': 'admin@mydomain.com',\n    'isAdmin': true,\n    'profile': {\n      'first_name': 'Admin',\n      'last_name': 'Admin',\n      'gender': 'female'\n    }\n  },\n  'team': {\n    'Name': \"No Team\",\n    'Public': true,\n    'Members': [],\n    'Active': true\n  },\n  'role': {\n    'name': 'No-Permissions'\n  }\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/startup/both/index.js                                                                                       //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.watch(require(\"./at_config.js\"));\n\n// Import modules used by both client and server through a single index entry point\n// e.g. useraccounts configuration file.\nif (Meteor.isClient) {\n  Session.setDefault('refreshQuestions', Math.random());\n}\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"defaults.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/startup/server/defaults.js                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.export({\n  SrvDefaults: () => SrvDefaults\n});\nconst SrvDefaults = {\n  'user': {\n    'password': 'admin'\n  },\n  'uploadPath': '/uploads/'\n};\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fixtures.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/startup/server/fixtures.js                                                                                  //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Question, MyersBriggsCategory;\nmodule.watch(require(\"../../api/questions/questions.js\"), {\n  Question(v) {\n    Question = v;\n  },\n\n  MyersBriggsCategory(v) {\n    MyersBriggsCategory = v;\n  }\n\n}, 1);\nlet User;\nmodule.watch(require(\"../../api/users/users.js\"), {\n  User(v) {\n    User = v;\n  }\n\n}, 2);\nlet Team;\nmodule.watch(require(\"../../api/teams/teams.js\"), {\n  Team(v) {\n    Team = v;\n  }\n\n}, 3);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 4);\nlet Defaults;\nmodule.watch(require(\"../both/defaults.js\"), {\n  Defaults(v) {\n    Defaults = v;\n  }\n\n}, 5);\nlet SrvDefaults;\nmodule.watch(require(\"./defaults.js\"), {\n  SrvDefaults(v) {\n    SrvDefaults = v;\n  }\n\n}, 6);\nlet TypeReading, ReadingRange, TypeReadingCategory;\nmodule.watch(require(\"../../api/type_readings/type_readings.js\"), {\n  TypeReading(v) {\n    TypeReading = v;\n  },\n\n  ReadingRange(v) {\n    ReadingRange = v;\n  },\n\n  TypeReadingCategory(v) {\n    TypeReadingCategory = v;\n  }\n\n}, 7);\nMeteor.startup(() => {\n  var defaultUserId;\n\n  if (Meteor.users.find().count() < 1) {\n    defaultUserId = Accounts.createUser({\n      username: Defaults.user.username,\n      email: Defaults.user.email,\n      password: SrvDefaults.user.password,\n      isAdmin: Defaults.user.isAdmin,\n      profile: Defaults.user.profile,\n      teams: [Team.Default.Name]\n    });\n    let t = Team.findOne({\n      Name: Team.Default.Name\n    });\n    t.CreatedBy = userId;\n    t.save();\n  } //add all existing members to the default team\n\n\n  let teamUserIdList = [];\n  User.find({}).forEach(u => {\n    teamUserIdList.push(u._id);\n    Roles.addUsersToRoles(u._id, 'member', Team.Default.Name);\n\n    if (Roles.userIsInRole(u._id, 'admin', Roles.GLOBAL_GROUP)) {\n      Roles.addUsersToRoles(u._id, 'admin', Team.Default.Name);\n    } else {\n      Roles.addUsersToRoles(u._id, Defaults.role.name, Team.Default.Name);\n    }\n  }); //Team.Default.Members = Team.Default.Members.concat(teamUserIdList);\n\n  Team.Default.Members = teamUserIdList;\n  Team.Default.save();\n  let existingRoleNames = [];\n  Roles.getAllRoles().forEach(function (r) {\n    existingRoleNames.push(r.name);\n  });\n  let possibleRoles = [\"admin\", \"view-goals\", \"view-members\", \"member\", \"mentor\", \"assigned\", \"manage-users\", \"learn-share-host\", \"developer\"];\n\n  for (let i in possibleRoles) {\n    if (existingRoleNames.indexOf(possibleRoles[i]) === -1) {\n      Roles.createRole(possibleRoles[i]);\n    }\n  } // Adding this so that it will auto fix type readings inserted the wrong way. We can remove this once no one has them.\n\n\n  const RawReadings = TypeReading.getCollection();\n  var wrongReadings = RawReadings.find({\n    \"MyersBriggsCategory\": {\n      $exists: true\n    }\n  });\n  wrongReadings.forEach(reading => {\n    var newType = new TypeReadingCategory({\n      MyersBriggsCategory: reading.MyersBriggsCategory,\n      Range: reading.Range\n    });\n    delete reading.MyersBriggsCategory;\n    delete reading.Range;\n    delete reading.TypeReadingCategories;\n    RawReadings.update({\n      _id: reading._id\n    }, {\n      $unset: {\n        MyersBriggsCategory: \"\",\n        Range: \"\"\n      }\n    });\n    var newReading = new TypeReading(reading);\n    newReading._isNew = false;\n    newReading.addTypeCategory(newType);\n    console.log(newReading);\n    newReading.getModified();\n    newReading.save();\n  }); //convert questions with single category to array of categories\n\n  let qs = Question.find({\n    Categories: {\n      $exists: false\n    }\n  });\n\n  if (qs) {\n    qs.forEach(function (q) {\n      q.Categories = [q.Category];\n      q.save();\n    });\n  }\n\n  var fs = Npm.require('fs');\n\n  var uploadPath = SrvDefaults.uploadPath;\n\n  try {\n    if (!fs.existsSync(uploadPath)) {\n      fs.mkdirSync(uploadPath);\n    }\n  } catch (e) {\n    console.log(e);\n  }\n\n  WebApp.connectHandlers.use('/learnShareRecording', (req, res, next) => {\n    let fileName = req.url.split('/')[1];\n\n    if (fs.existsSync(uploadPath + fileName)) {\n      res.writeHead(200, {\n        'Content-Type': 'video/mp4'\n      });\n      fs.readFile(uploadPath + fileName, (err, data) => {\n        if (err) {\n          console.log(err);\n        } else {\n          res.write(data);\n          res.end();\n        }\n      });\n    } else {\n      console.log(\"file does not exist\");\n      res.writeHead(404);\n      res.write('404 not found');\n      res.end();\n    }\n  });\n});\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"index.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/startup/server/index.js                                                                                     //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.watch(require(\"../both/defaults.js\"));\nmodule.watch(require(\"./defaults.js\"));\nmodule.watch(require(\"./fixtures.js\"));\nmodule.watch(require(\"./register-api.js\"));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"register-api.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// imports/startup/server/register-api.js                                                                              //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.watch(require(\"../../api/questions/methods.js\"));\nmodule.watch(require(\"../../api/questions/server/publications.js\"));\nmodule.watch(require(\"../../api/users/methods.js\"));\nmodule.watch(require(\"../../api/users/server/publications.js\"));\nmodule.watch(require(\"../../api/type_readings/methods.js\"));\nmodule.watch(require(\"../../api/type_readings/server/publications.js\"));\nmodule.watch(require(\"../../api/teams/methods.js\"));\nmodule.watch(require(\"../../api/teams/server/publications.js\"));\nmodule.watch(require(\"../../api/team_goals/server/publications.js\"));\nmodule.watch(require(\"../../api/team_goals/methods.js\"));\nmodule.watch(require(\"../../api/individual_goals/server/publications.js\"));\nmodule.watch(require(\"../../api/individual_goals/methods.js\"));\nmodule.watch(require(\"../../api/learn_share/server/publications.js\"));\nmodule.watch(require(\"../../api/learn_share/methods.js\"));\nmodule.watch(require(\"../../api/roles/server/publications.js\"));\nmodule.watch(require(\"../../api/user_segments/server/publications.js\"));\nmodule.watch(require(\"../../api/user_segments/methods.js\"));\nmodule.watch(require(\"../../api/user_feedback/server/publications.js\"));\nmodule.watch(require(\"../../api/user_feedback/methods.js\"));\nmodule.watch(require(\"../../api/user_notify/server/publications.js\"));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},\"server\":{\"main.js\":function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                     //\n// server/main.js                                                                                                      //\n//                                                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                       //\nmodule.watch(require(\"/imports/startup/both\"));\nmodule.watch(require(\"/imports/startup/server\"));\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["imports/api/individual_goals/server/publications.js","imports/api/individual_goals/individual_goals.js","imports/api/individual_goals/methods.js","imports/api/learn_share/server/publications.js","imports/api/learn_share/learn_share.js","imports/api/learn_share/methods.js","imports/api/questions/server/publications.js","imports/api/questions/methods.js","imports/api/questions/questions.js","imports/api/roles/server/publications.js","imports/api/team_goals/server/publications.js","imports/api/team_goals/methods.js","imports/api/team_goals/team_goals.js","imports/api/teams/server/publications.js","imports/api/teams/methods.js","imports/api/teams/teams.js","imports/api/type_readings/server/publications.js","imports/api/type_readings/methods.js","imports/api/type_readings/type_readings.js","imports/api/user_feedback/server/publications.js","imports/api/user_feedback/methods.js","imports/api/user_feedback/user_feedback.js","imports/api/user_notify/server/publications.js","imports/api/user_notify/user_notify.js","imports/api/user_segments/server/publications.js","imports/api/user_segments/methods.js","imports/api/user_segments/user_segments.js","imports/api/users/server/publications.js","imports/api/users/methods.js","imports/api/users/users.js","imports/api/categories/categories.js","imports/startup/both/at_config.js","imports/startup/both/defaults.js","imports/startup/both/index.js","imports/startup/server/defaults.js","imports/startup/server/fixtures.js","imports/startup/server/index.js","imports/startup/server/register-api.js","server/main.js"],"names":["Meteor","module","watch","require","v","IndividualGoal","User","publish","userId","find","Roles","userIsInRole","GLOBAL_GROUP","privacy","stop","export","Mongo","Class","Enum","UserNotify","GoalComment","create","name","collection","Collection","fields","type","String","default","title","description","parentId","assignedToStr","transient","reachedDate","Date","optional","startDate","dueDate","reviewDate","reviewedOnDate","goalComments","reviewComments","teamId","createdBy","behaviors","timestamp","helpers","getGoalRoleGroup","teamName","_id","userIsAdmin","userIsMentor","userIsAssigned","setDateField","fieldName","rdate","getUserFullNameX","u","findOne","MyProfile","firstName","lastName","hasModifyPerm","notifyNew","oldList","newList","diffList","_","difference","i","length","add","body","action","events","beforeSave","e","meteorMethods","setDueDate","Error","save","setGoalReached","setReviewDate","setGoalReviewedOn","addComment","commentTxt","push","date","text","addReviewComment","createNewGoal","setTitle","setDescription","descr","setAssignedTo","ulist","assignedTo","setMentors","mentors","setAdmins","admins","getUserFullName","invocation","DDP","_CurrentInvocation","get","isSimulation","updateFromObj","updObj","permError","fld","Array","isArray","isEqual","methods","goal","g","LearnShareSession","lssid","fs","isServer","Npm","LSUser","id","notes","participants","guests","presenters","state","skypeUrl","addPresenter","user","lsUser","o","addParticipant","removeParticipant","filter","removeGuest","removePresenter","addParticipantSelf","lsu","saveGuest","guestId","guestName","guestObj","console","log","saveText","lockSession","unlockSession","setSkypeUrl","url","uploadRecording","fileInfo","fileData","uploadPath","writeFile","err","formattedDate","d","year","getFullYear","month","getMonth","day","getDate","slice","randomChars","idLength","possible","charAt","Math","floor","random","lssidGenerate","sessTitle","newSession","fname","existsSync","Question","Reading","MyersBriggsCategory","MyersBriggs","Answer","UserType","Profile","publishComposite","category","ready","Categories","defaults","sort","createdAt","children","question","CreatedBy","limit","refresh","self","qids","getAnsweredQuestionsIDs","observe","added","changed","removed","ids","a","b","ar","br","handles","$nin","Active","observeChanges","onStop","check","left","right","seg","newQuestion","Category","parseInt","map","Text","LeftText","RightText","segments","validate","cast","questionId","value","isReversed","me","parseFloat","answer","QuestionID","Reversed","Value","addAnswer","answerQuestion","getAnswerForQuestion","unAnswerQuestion","questionIds","questions","$in","forEach","unanswerAll","remove","userIds","us","reset","qs","q","myUserId","totalQuestions","count","setTotalQuestions","Defaults","identifiers","Rank","Number","validators","resolveParam","PolarStats","LeftSum","RightSum","Readings","Boolean","TimesAnswered","SumOfAnswers","getUser","removeAnswer","allAnsweredUsers","$eq","noSave","AnsweredQuestions","softremove","secured","update","beforeInsert","username","currentTarget","beforeUpdate","allowed","doc","fieldNames","getModified","each","indexOf","roles","TeamGoal","teamGoal","userList","concat","fieldsObj","mentorsStr","adminsStr","egoal","flds","addUsersToRoles","Team","$or","Public","Members","Name","Description","Icon","Icon64","IconType","teamsList","team","memberList","reqQuery","newTeam","t","TeamIcon","DefaultTeamID","data","contentType","defaut","indexes","nameIndex","options","unique","userRequestJoin","adminRequestUserJoin","split","join","userAcceptJoin","removeUsersFromRoles","addUsers","userDeclineJoin","adminAcceptJoin","adminRejectJoin","addRole","role","removeRole","uploadIcon","base64Image","Buffer","toString","users","groupAdminList","getUsersInRole","fetch","currUserRoles","removeUsers","removeUsersFromTeamRoles","afterInit","Default","TypeReading","ReadingRange","qry","typereading","$gte","userType","Personality","handle","$and","$type","$exists","$lte","$elemMatch","TypeReadingCategory","TypeReadingCategories","header","newReading","Header","Body","readingId","high","low","reading","catReading","Range","addTypeCategory","toggle","CategoryManager","Delta","in","val","setDelta","Create","m","FullHigh","FullLow","OfType","Enabled","cat","target","addCategory","UserFeedback","newFeedback","f","source","context","comment","dateCreated","un","Email","isRead","isPushed","isEmailed","createdDate","markRead","markNotified","test","pushNotify","opts","noteOpts","icon","browserNote","window","alert","Notification","permission","requestPermission","onclick","note","addr","emails","address","send","to","from","subject","isClient","notify","UserSegment","dscr","s","Accounts","emailTemplates","siteName","verifyEmail","emailAddress","urlWithoutHash","replace","supportEmail","emailBody","sendVerificationEmail","MyersBriggsBit","Totals","QuestionCount","addValue","removeValue","IE","NS","TF","JP","addByCategory","getIdentifierById","removeByCategory","categoryId","getFourLetter","IEL","NSL","TFL","JPL","AnsweredAt","getQuestion","unanswer","TotalQuestions","ans","getTotalQuestions","contextThis","skipSlice","index","getAnswerIndexForQuestionID","before","shift","pop","DashboardPane","size","route","param","gender","birthDate","dashboardPanes","calculateAge","diff","now","getTime","age","abs","getUTCFullYear","fullName","toLowerCase","toUpperCase","Object","teams","resolveError","nestedName","validator","addTeam","changeName","teamDoc","profileUpdate","uprofile","slug","extend","services","DefaultCategoryID","TypeStats","num","stats","addByType","getStatsByType","removeByType","Type","areIntersected","categoryManager","j","hasCategory","catId","removeCategory","c","myPostLogout","FlowRouter","go","mySubmitFunc","error","myPreSubmitFunc","arguments","myPostSubmitFunc","info","AccountsTemplates","configure","confirmPassword","enablePasswordChange","forbidClientAccountCreation","overrideLoginErrors","lowercaseUsername","focusFirstInput","showAddRemoveServices","showForgotPasswordLink","showLabels","showPlaceholders","showResendVerificationEmailLink","continuousValidation","negativeFeedback","negativeValidation","positiveValidation","positiveFeedback","showValidating","privacyUrl","termsUrl","homeRoutePath","redirectTimeout","defaultTemplate","defaultLayout","defaultContentRegion","defaultLayoutRegions","onLogoutHook","onSubmitHook","preSignUpHook","postSignUpHook","texts","button","signUp","socialSignUp","socialIcons","forgotPwd","inputIcons","isValidating","hasSuccess","hasError","configureRoute","path","addFields","required","displayName","func","select","onCreateUser","email","updateAt","profile","first_name","last_name","undefined","isAdmin","validateNewUser","loggedInUser","ex","Session","setDefault","SrvDefaults","startup","defaultUserId","createUser","password","teamUserIdList","existingRoleNames","getAllRoles","r","possibleRoles","createRole","RawReadings","getCollection","wrongReadings","newType","$unset","_isNew","mkdirSync","WebApp","connectHandlers","use","req","res","next","fileName","writeHead","readFile","write","end"],"mappings":"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","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { IndividualGoal } from '../individual_goals.js';\nimport { User } from '../../users/users.js';\n\nMeteor.publish('individualGoalsData', function (userId) {\n    if (Meteor.userId() === userId) {\n        return IndividualGoal.find( {userId: userId} );\n    } else if (Roles.userIsInRole(Meteor.userId(), ['admin','view-goals'], Roles.GLOBAL_GROUP)) {\n        return IndividualGoal.find( {\n            userId: userId,\n            privacy: {\"$in\":[\"team\",\"public\"]}\n        } );\n    } else {\n        this.stop();\n        return;\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { User } from '../users/users.js';\nimport { Class, Enum } from 'meteor/jagi:astronomy';\nimport { UserNotify } from '/imports/api/user_notify/user_notify.js';\nimport { GoalComment } from '/imports/api/team_goals/team_goals.js';\n\nconst IndividualGoal = Class.create({\n    name: 'IndividualGoal',\n    collection: new Mongo.Collection('individual_goal'),\n    fields: {\n        userId: {\n            type: String,\n            default: ''\n        },\n        title: {\n            type: String,\n            default: ''\n        },\n        description: {\n            type: String,\n            default: ''\n        },\n        parentId: {\n            type: String,\n            default: ''\n        },\n        assignedToStr: {\n            type: String,\n            transient: true\n        },\n        reachedDate: {\n            type: Date,\n            optional: true\n        },\n        startDate: {\n            type: Date,\n            optional: true\n        },\n        dueDate: {\n            type: Date,\n            optional: true\n        },\n        reviewDate: {\n            type: Date,\n            optional: true\n        },\n        reviewedOnDate: {\n            type: Date,\n            optional: true\n        },\n        goalComments: {\n            type: [GoalComment],\n            default: []\n        },\n        reviewComments: {\n            type: [GoalComment],\n            default: []\n        },\n        teamId: {\n            type: String,\n            default: \"\"\n        },\n        privacy: {\n            type: String,\n            default: 'private'\n        },\n        createdBy: {\n            type: String,\n            default: ''\n        }\n    },\n    behaviors: {\n        timestamp: {}\n    },\n    helpers: {\n        getGoalRoleGroup() {\n            return this.teamName + '+' + this._id;\n        },\n        userIsAdmin() {\n            if (\n              Roles.userIsInRole(Meteor.userId(), 'admin', this.teamName)\n             ||\n              Roles.userIsInRole(Meteor.userId(), 'admin', this.getGoalRoleGroup())\n            ) {\n                //user is either a global admin, a team admin, or a goal admin\n                return true;\n            } else {\n                return false;\n            }\n        },\n        userIsMentor() {\n            if (\n                Roles.userIsInRole(Meteor.userId(), 'mentor', this.getGoalRoleGroup())\n            ) {\n                //user is a mentor for this goal\n                return true;\n            } else {\n                return false;\n            }\n        },\n        userIsAssigned() {\n            if (\n                Roles.userIsInRole(Meteor.userId(), 'assigned', this.getGoalRoleGroup())\n            ) {\n                //user is assigned to this goal\n                return true;\n            } else {\n                return false;\n            }\n        },\n        setDateField(fieldName, rdate) {\n            if ( typeof rdate === \"undefined\") {\n                rdate = new Date();\n            } else if ( !(rdate instanceof Date) ) {\n                return false;\n            }\n            this[fieldName] = rdate;\n            return true;\n        },\n        getUserFullNameX(userId) {\n            let u = User.findOne( {_id: userId} );\n            if (!u) {\n                return \"Michael\";\n            }\n            let name = u.MyProfile.firstName + \" \" + u.MyProfile.lastName;\n            return name;\n        },\n        hasModifyPerm(fieldName) {\n            switch (fieldName) {\n            //admins-only fields\n            case 'dueDate':\n            case 'startDate':\n            case 'reachedDate':\n            case 'reviewDate':\n            case 'title':\n            case 'description':\n            case 'assignedTo':\n            case 'mentors':\n            case 'admins':\n            case 'subgoals':\n                return this.userIsAdmin();\n                break;\n            //admins and mentors\n            case 'reviewedOnDate':\n            case 'reviewComments':\n                return this.userIsAdmin() || this.userIsMentor();\n                break;\n            //anyone assigned to the goal\n            case 'goalComments':\n                return this.userIsAdmin() || this.userIsMentor() || this.userIsAssigned();\n                break;\n            case 'teamId':\n            case 'privacy':\n                return true;\n                break;\n            default:\n                return false;\n                break;\n            }\n        },\n        notifyNew(oldList,newList) {\n            let diffList = _.difference(newList,oldList);\n            for (let i = 0; i < diffList.length; i++) {\n                UserNotify.add({\n                    userId: diffList[i],\n                    title: 'Goals',\n                    body: 'You have been added to goal '+this.title,\n                    action: 'teamgoals:'+this.teamName\n                });\n            }\n        }\n    },\n    events: {\n        beforeSave(e) {\n            /*\n            let egoal = e.currentTarget;\n\n            //any user added to a goal is automatically added to the 'view-goals' role for the team\n            //if they are already in that role, this should just ignore the redundant addUser\n            let flds = [\"assignedTo\",\"mentors\",\"admins\"];\n            for (let i in flds) {\n                if (Array.isArray(egoal[flds[i]]) && egoal[flds[i]].length > 0) {\n                    Roles.addUsersToRoles(egoal[flds[i]], 'view-goals', egoal.teamName);\n                }\n            }\n            */\n        },\n    },\n    meteorMethods: {\n        setDueDate(rdate) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            if ( this.setDateField(\"dueDate\", rdate) ) {\n                this.save();\n            } else {\n                throw new Meteor.Error(403, \"Invalid date\");\n            }\n        },\n        setGoalReached(rdate) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            if ( this.setDateField(\"reachedDate\", rdate) ) {\n                this.save();\n            } else {\n                throw new Meteor.Error(403, \"Invalid date\");\n            }\n        },\n        setReviewDate(rdate) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            if ( this.setDateField(\"reviewDate\", rdate) ) {\n                this.save();\n            } else {\n                throw new Meteor.Error(403, \"Invalid date\");\n            }\n        },\n        setGoalReviewedOn(rdate) {\n            //mentors and admins\n            if ( !this.userIsAdmin() && !this.userIsMentor()) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            if ( this.setDateField(\"reviewedOnDate\", rdate) ) {\n                this.save();\n            } else {\n                throw new Meteor.Error(403, \"Invalid date\");\n            }\n        },\n        addComment(commentTxt) {\n            //mentors, admins, and assignees\n            if ( !this.userIsAdmin() && !this.userIsMentor() && !this.userIsAssigned() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            this.goalComments.push(\n                new GoalComment( {\n                    userId: Meteor.userId(),\n                    date: new Date(),\n                    text: commentTxt,\n                } )\n            );\n            this.save();\n        },\n        addReviewComment(commentTxt) {\n            //mentors and admins\n            if ( !this.userIsAdmin() && !this.userIsMentor() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            this.reviewComments.push(\n                new GoalComment( {\n                    userId: Meteor.userId(),\n                    date: new Date(),\n                    text: commentTxt,\n                } )\n            );\n            this.save();\n        },\n        createNewGoal() {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            //\n        },\n        setTitle(title) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            this.title = title;\n            this.save();\n        },\n        setDescription(descr) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            this.description = descr;\n            this.save();\n        },\n        setAssignedTo(ulist) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            this.notifyNew(this.assignedTo,ulist);\n            this.assignedTo = ulist;\n            this.save();\n        },\n        setMentors(ulist) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n            this.notifyNew(this.mentors,ulist);\n            this.mentors = ulist;\n            this.save();\n        },\n        setAdmins(ulist) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            this.notifyNew(this.admins,ulist);\n            this.admins = ulist;\n            this.save();\n        },\n        getUserFullName(userId) {\n            const invocation = DDP._CurrentInvocation.get();\n            if (invocation.isSimulation) {\n                return \"George\";\n            }\n            let u = User.findOne( {_id: userId} );\n            if (!u) {\n                return \"Michael\";\n            }\n            let name = u.MyProfile.firstName + \" \" + u.MyProfile.lastName;\n            return name;\n        },\n        updateFromObj(updObj) {\n            let permError = false;\n\n            for (let fld in updObj) {\n                if (\n                  this[fld] !== updObj[fld] ||\n                  (Array.isArray(updObj[fld]) && _.isEqual(this[fld], updObj[fld]))\n                ) {\n                    if (this.hasModifyPerm(fld)) {\n                        if (fld === \"assignedTo\" || fld === \"mentors\" || fld === \"admins\") {\n                            this.notifyNew(this[fld],updObj[fld]);\n                        }\n                        this[fld] = updObj[fld];\n                    } else {\n                        permError = true;\n                    }\n                }\n            }\n            this.save();\n            if (permError) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n        }\n    }\n});\n\nexport { IndividualGoal };\n","import { IndividualGoal } from './individual_goals.js';\n\nMeteor.methods({\n    'individualgoals.createNewGoal'(goal) {\n        if (goal.userId !== Meteor.userId() && !Roles.userIsInRole(Meteor.userId(), ['admin'], goal.teamName)) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        }\n\n        goal.createdBy = Meteor.userId();\n        let g = new IndividualGoal(goal);\n        return g.save();\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { LearnShareSession } from '../learn_share.js';\n\nMeteor.publish('learnShareList', function() {\n    if (this.userId) {\n        return LearnShareSession.find( {}, {\n            fields: { title: 1, teamId: 1 }\n        });\n    } else {\n        return [ ];\n    }\n});\n\nMeteor.publish('learnShareDetails', function(lssid) {\n    //if (this.userId) {\n        return LearnShareSession.find( {_id:lssid} );\n    //} else {\n    //    return [ ];\n    //}\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { Class, Enum } from 'meteor/jagi:astronomy';\nimport { User } from '/imports/api/users/users.js';\nimport { UserNotify } from '/imports/api/user_notify/user_notify.js';\n\nvar fs = {};\nif (Meteor.isServer) {\n    fs = Npm.require('fs');\n}\n\nconst LSUser = Class.create({\n    name: 'LSUser',\n    fields: {\n        id: {\n            type: String,\n            default: ''\n        },\n        name: {\n            type: String,\n            default: 'John Doe'\n        }\n    }\n});\n\nconst LearnShareSession = Class.create({\n    name: \"LearnShareSession\",\n    collection: new Mongo.Collection('learn_share'),\n    fields: {\n        title: {\n            type: String,\n            default: \"unnamed Learn/Share session\"\n        },\n        notes: {\n            type: String,\n            default: \"duly noted\"\n        },\n        participants: {\n            type: [LSUser],\n            default: []\n        },\n        guests: {\n            type: [LSUser],\n            default: []\n        },\n        presenters: {\n            type: [LSUser],\n            default: []\n        },\n        state: {\n            type: String,\n            default: \"active\"\n        },\n        skypeUrl: {\n            type: String,\n            default: \"\"\n        },\n        teamId: {\n            type: String,\n            default: \"\"\n        }\n    },\n    behaviors: {\n        timestamp: {}\n    },\n    meteorMethods: {\n        addPresenter: function (user) {\n            if (\"locked\" === this.state) {\n                return;\n            }\n            var lsUser = new LSUser(user);\n\n            //check for duplicate\n            if (typeof _.find(this.presenters, function(o) {return o.id===lsUser.id;}) !== \"undefined\") {\n                return false;\n            }\n            this.presenters.push(lsUser);\n            return this.save();\n        },\n        addParticipant: function (user) {\n            if (\"locked\" === this.state) {\n                return;\n            }\n            var lsUser = new LSUser(user);\n\n            //check for duplicate\n            if (typeof _.find(this.participants, function(o) {return o.id===lsUser.id;}) !== \"undefined\") {\n                return false;\n            }\n            this.participants.push(lsUser);\n            UserNotify.add({\n                userId: lsUser.id,\n                title: 'Learn/Share',\n                body: 'You have been added to a Learn/Share session',\n                action: 'learnshare:'+this._id\n            });\n            return this.save();\n        },\n        removeParticipant: function (userId) {\n            if (\"locked\" === this.state) {\n                return;\n            }\n            this.participants = _.filter(this.participants, function (o) {return o.id!==userId});\n            return this.save();\n        },\n        removeGuest: function (userId) {\n            if (\"locked\" === this.state) {\n                return;\n            }\n            this.guests = _.filter(this.guests, function (o) {return o.id!==userId});\n            return this.save();\n        },\n        removePresenter: function (userId) {\n            if (\"locked\" === this.state) {\n                return;\n            }\n            this.presenters = _.filter(this.presenters, function (o) {return o.id!==userId});\n            return this.save();\n        },\n        addParticipantSelf: function () {\n            if (\"locked\" === this.state) {\n                return;\n            }\n            if (Meteor.userId()) {\n                //check for duplicate\n                if (typeof _.find(this.participants, function(o) {return o.id===Meteor.userId();}) === \"undefined\") {\n                    let u = User.findOne( {_id: Meteor.userId()} );\n                    if (!u) {\n                        throw new Meteor.Error(403, \"You are not authorized\");\n                    } else {\n                        let lsu = new LSUser({\n                            id: Meteor.userId(),\n                            name: u.MyProfile.firstName + \" \" + u.MyProfile.lastName\n                        })\n                        this.participants.push(lsu);\n                        this.save();\n                    }\n                }\n            } else {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n        },\n        saveGuest: function(guestId, guestName) {\n            if (\"locked\" === this.state) {\n                return;\n            }\n            let guestObj = _.find(this.guests, function(o) {return o.id===guestId;});\n            if (\"undefined\" !== typeof guestObj) {\n                console.log(\"already a guest\");\n                this.guests = _.filter(this.guests, function(o) {return o.id!==guestId});\n                guestObj.name = guestName;\n            } else {\n                console.log(\"not a guest\");\n                guestObj = new LSUser({id: guestId, name: guestName});\n            }\n            this.guests.push(guestObj);\n            this.save();\n        },\n        saveText: function (title, notes) {\n            if (\"locked\" === this.state) {\n                return;\n            }\n            if (Roles.userIsInRole(Meteor.userId(), ['admin','learn-share-host'], Roles.GLOBAL_GROUP)) {\n                this.title = title;\n                this.notes = notes;\n                this.save();\n            } else {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n        },\n        lockSession: function (title, notes) {\n            if (Roles.userIsInRole(Meteor.userId(), ['admin','learn-share-host'], Roles.GLOBAL_GROUP)) {\n                this.state = \"locked\";\n                this.save();\n            } else {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n        },\n        unlockSession: function (title, notes) {\n            if (Roles.userIsInRole(Meteor.userId(), ['admin','learn-share-host'], Roles.GLOBAL_GROUP)) {\n                this.state = \"active\";\n                this.save();\n            } else {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n        },\n        setSkypeUrl: function (url) {\n            if (Roles.userIsInRole(Meteor.userId(), ['admin','learn-share-host'], Roles.GLOBAL_GROUP)) {\n                this.skypeUrl = url;\n                this.save();\n            }\n        },\n        uploadRecording(fileInfo, fileData) {\n            if (Meteor.isServer && Roles.userIsInRole(Meteor.userId(), ['admin','learn-share-host'], Roles.GLOBAL_GROUP)) {\n                let uploadPath = '/uploads/';\n                fs.writeFile(uploadPath+this._id+\".mp4\", fileData, 'binary', (err) => {\n                    console.log(\"File written.\", err);\n                });\n            }\n        }\n    }\n});\n\nexport { LearnShareSession };\n","import { Meteor } from 'meteor/meteor';\nimport { LearnShareSession } from './learn_share.js';\n\nvar formattedDate = () => {\n    let d = new Date();\n    let year = d.getFullYear();\n    let month = d.getMonth() + 1;\n    let day = d.getDate();\n    return (year +\"-\"+ (\"00\"+month).slice(-2) +\"-\"+ (\"00\"+day).slice(-2));\n}\n\nvar randomChars = () => {\n    var text = \"\";\n    var idLength = 2;\n    var possible = \"acdeghijklmnopqrstuvwxyz\";\n\n    for (var i = 0; i < idLength; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return text;\n}\n\nvar lssidGenerate = () => {\n    return (formattedDate() + \"-\" + randomChars());\n}\nMeteor.methods({\n    'learnshare.createNewSession'(sessTitle, teamId) {\n        if (!Roles.userIsInRole(Meteor.userId(), ['admin','learn-share-host'], Roles.GLOBAL_GROUP)) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        }\n\n        let lssid = lssidGenerate();\n\n        let newSession = new LearnShareSession({\n            _id: lssid,\n            title: sessTitle,\n            teamId: teamId\n        });\n        newSession.save();\n        return lssid;\n    },\n    'learnshare.recordingExists'(fname) {\n        let fs = Npm.require('fs');\n        let uploadPath = '/uploads/';\n        console.log(\"exist\",uploadPath+fname+\".mp4\");\n        if (fs.existsSync(uploadPath+fname+\".mp4\")) {\n            console.log(\"yes\");\n            return true;\n        } else {\n            console.log(\"no\");\n            return false;\n        }\n    }\n})\n","// All questions-related publications\n\nimport { Meteor } from 'meteor/meteor';\nimport { Question, Reading, MyersBriggsCategory } from '../questions.js';\nimport { User, MyersBriggs, Answer, UserType, Profile } from '../../users/users.js';\n\nMeteor.publishComposite('questions.bycategory', function (category) {\n    if(!Roles.userIsInRole(this.userId, ['admin'], Roles.GLOBAL_GROUP)) { return this.ready(); }\n    console.log(\"Publication 'questions.bycategory': \", category, this.userId);\n    return {\n        find() {\n            return Question.find({\n                Categories:category\n            }, {\n                defaults: true,\n                sort: {createdAt: -1}\n            });\n        },\n        children: [{\n            find(question) {\n                return User.find({ _id: question.CreatedBy }, { limit: 1 });\n            }\n        }]\n    };\n});\n\nMeteor.publish('questions.toanswer', function (userId, refresh) {\n    //console.log(userId, this.userId);\n    //if(this.userId !== userId && !Roles.userIsInRole(this.userId, ['admin'], Roles.GLOBAL_GROUP)) { return this.ready(); }\n    console.log(\"Publication 'questions.toanswer': \", this.userId, userId);\n    let self = this;\n    let user = User.findOne({_id:userId});\n    let qids = user.MyProfile.UserType.getAnsweredQuestionsIDs();\n    //console.log(self, user, qids);\n    let observe = {\n        added: function(id, fields) {\n            self.added('questions', id, fields);\n        },\n        changed: function(id, fields) {\n            self.removed(\"questions\", id);\n        },\n        removed: function(id) {\n            self.removed('questions', id);\n        }\n    };\n    let ids = [0,1,2,3];\n    ids.sort(function (a, b) {\n        let ar = Math.random();\n        let br = Math.random();\n        if(ar === br) { return 0; }\n        return ar > br ? -1 : 1;\n    });\n    handles = [null, null, null, null];\n    for(let i = 0; i < ids.length; i++) {\n        handles[ids[i]] = Question.find({Categories:ids[i], _id: { $nin: qids }, Active: true},{ limit: 1}).observeChanges(observe);\n    }\n\n    self.ready();\n    self.onStop(function() {\n        for(let i = 0; i < ids.length; i++) {\n            handles[i].stop();\n        }\n    });\n});\n","// Methods related to Questions\n\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport { Question, MyersBriggsCategory } from './questions.js';\nimport { User, Answer} from '../users/users.js';\n\nMeteor.methods({\n    'question.insert'(category, text, left, right, seg) {\n        if(!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        }\n        console.log(category);\n        let newQuestion = new Question({ Category: parseInt(category[0]), Categories: category.map((a)=>{return parseInt(a);}), Text: text, LeftText:left, RightText:right, segments:seg, CreatedBy:Meteor.userId() });\n        console.log(category, text, newQuestion);\n        newQuestion.validate({\n            cast: true\n        });\n\n        return newQuestion.save();\n    },\n    'question.answer'(questionId, value, isReversed) {\n        let question = Question.findOne({_id:questionId});\n        let me = User.findOne({_id:Meteor.userId()});\n        value = parseFloat(value);\n        if(!!isReversed) { value = ~value + 1; }\n        console.log(questionId, value, !!isReversed);\n        let answer = new Answer({\n            Categories: question.Categories,\n            QuestionID: questionId,\n            Reversed: !!isReversed,\n            Value: value\n        });\n        question.addAnswer(answer);\n        me.MyProfile.UserType.answerQuestion(answer);\n        console.log(me.MyProfile);\n        me.save();\n    },\n    'question.unanswer'(questionId) {\n        let me = User.findOne({_id:Meteor.userId()});\n        let answer = me.MyProfile.UserType.getAnswerForQuestion(questionId);\n        if(answer == null) { throw new Meteor.Error(403, 'You can\\'t unanwer a question you haven\\'t answered.'); }\n        me.MyProfile.UserType.unAnswerQuestion(answer);\n        me.save();\n    },\n    'question.unanswerAll'(questionIds) {\n        if(!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        }\n        if(!questionIds instanceof Array) { questionIds = [questionIds]; }\n        let questions = Question.find({_id:{ $in : questionIds}});\n        questions.forEach(function (question) { question.unanswerAll(); });\n    },\n    'question.delete'(questionId) {\n        if(!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        }\n        let me = User.findOne({_id:Meteor.userId()});\n        let question = Question.findOne({_id:questionId});\n        question.remove();\n    },\n    'question.resetUsers'(userIds) {\n        if(!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        }\n        if(!userIds instanceof Array) { userIds = [userIds]; }\n        let us = User.find({_id:{$in:userIds}});\n        if(!us) { throw new Meteor.Error(404, \"User is not found.\"); }\n        us.forEach(function (u) {\n            u.MyProfile.UserType.reset();\n            u.save();\n        });\n    },\n    'question.resetAll'() {\n        if(!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        }\n        let qs = Question.find({});\n        qs.forEach(function (q) {\n            q.unanswerAll();\n        });\n        let us = User.find({});\n        us.forEach(function (u) {\n            u.MyProfile.UserType.reset();\n            u.save();\n        });\n    },\n    'question.countQuestions'(myUserId) {\n        //console.log(\"happy1\");\n        let me = User.findOne({_id:myUserId});\n        //console.log(\"UserID\", me);\n        let totalQuestions = Question.find().count();\n        //console.log(\"happy3\", totalQuestions);\n        me.MyProfile.UserType.setTotalQuestions(totalQuestions);\n        //console.log(\"happy4\", me.MyProfile.UserType.getTotalQuestions());\n        return totalQuestions;\n    }\n});\n","// Definition of the questions collection\n\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { Class, Enum } from 'meteor/jagi:astronomy';\nimport { check } from 'meteor/check';\nimport { User } from '../users/users.js';\nimport { Defaults } from '/imports/startup/both/defaults.js';\nimport { UserNotify } from '/imports/api/user_notify/user_notify.js';\n\nconst MyersBriggsCategory = Enum.create({\n    name: 'MyersBriggsCategory',\n    identifiers: ['IE','NS','TF','JP']\n});\nconst Reading = Class.create({\n    name:'Reading',\n    fields: {\n        Rank: {\n            type: Number,\n            default: 0,\n            validators: [{\n                type: 'lte',\n                resolveParam: function () { return 50; }\n            },{\n                type: 'gte',\n                resolveParam: function () { return -50; }\n            }]\n        },\n        Text: {\n            type:String,\n            default: 'Well, you feel...'\n        }\n    }\n});\nconst PolarStats = Class.create({\n    name: 'PolarStats',\n    fields: {\n        LeftSum: {\n            type: Number,\n            default: 0\n        },\n        RightSum: {\n            type: Number,\n            default: 0\n        }\n    },\n    helpers: {\n        reset() {\n            this.LeftSum = 0;\n            this.RightSum = 0;\n        }\n    }\n});\nconst Question = Class.create({\n    name: \"Question\",\n    collection: new Mongo.Collection('questions'),\n    fields: {\n        Category: {\n            type: MyersBriggsCategory,\n            default: 'IE'\n        },\n        Categories: {\n            type: [MyersBriggsCategory],\n            default: []\n        },\n        Text: {\n            type: String,\n            default: 'Whoa! What we askin\\' here?'\n        },\n        LeftText: {\n            type: String,\n            default: 'Whoa! What we askin\\' here?'\n        },\n        RightText: {\n            type: String,\n            default: 'Whoa! What we askin\\' here?'\n        },\n        Readings: {\n            type: [Reading],\n            default: function () {\n                return [\n                    { Rank: -50, Text: \"You will ALWAYS Do this. Doing otherwise is inconceivable to you.\"},\n                    { Rank: -49, Text: \"There may be a possible scenerio where the reverse may apply, but it would be really rare.\"},\n                    { Rank: -40, Text: \"You can think of cases where you have done things the other way, but not under normal circumstances. \"},\n                    { Rank: -30, Text: \"This is your most common behavior, but there are definitely times you've done the opposite.\"},\n                    { Rank: -20, Text: \"This is a good default choice for you, but time and circumstance could easily find you doing the other.\"},\n                    { Rank: -10, Text: \"You don't have much of a preference either way, but this side sounds a bit more likely.\"},\n                    { Rank: 10, Text: \"You don't have much of a preference either way, but this side sounds a bit more likely.\"},\n                    { Rank: 20, Text: \"This is a good default choice for you, but time and circumstance could easily find you doing the other.\"},\n                    { Rank: 30, Text: \"This is your most common behavior, but there are definitely times you've done the opposite.\"},\n                    { Rank: 40, Text: \"You can think of cases where you have done things the other way, but not under normal circumstances. \"},\n                    { Rank: 49, Text: \"There may be a possible scenerio where the reverse may apply, but it would be really rare.\"},\n                    { Rank: 50, Text: \"You will ALWAYS Do this. Doing otherwise is inconceivable to you.\"}\n                ];\n            }\n        },\n        segments: {\n            type: [String],\n            default: []\n        },\n        Active: {\n            type: Boolean,\n            default: false\n        },\n        CreatedBy: {\n            type: String,\n            default: function() { return Meteor.userId(); }\n        },\n        TimesAnswered: {\n            type: PolarStats,\n            default: function () { return new PolarStats(); }\n        },\n        SumOfAnswers: {\n            type: PolarStats,\n            default: function () { return new PolarStats(); }\n        }\n    },\n    meteorMethods: {\n        getUser() {\n            let u = User.findOne({_id:this.CreatedBy});\n            return u;\n        }\n    },\n    helpers: {\n        addAnswer(answer) {\n            if(answer.Value < 0) {\n                this.TimesAnswered.LeftSum++;\n                this.SumOfAnswers.LeftSum += answer.Value;\n            } else {\n                this.TimesAnswered.RightSum++;\n                this.SumOfAnswers.RightSum += answer.Value;\n            }\n            this.save();\n        },\n        removeAnswer(answer) {\n            if(answer.Value < 0) {\n                this.TimesAnswered.LeftSum--;\n                if(this.TimesAnswered.LeftSum <= 0) { this.TimesAnswered.LeftSum = 0; this.SumOfAnswers.LeftSum = 0; }\n                else { this.SumOfAnswers.LeftSum -= answer.Value; }\n            } else {\n                this.TimesAnswered.RightSum--;\n                if(this.TimesAnswered.RightSum <= 0) { this.TimesAnswered.RightSum = 0; this.SumOfAnswers.RightSum = 0; }\n                else { this.SumOfAnswers.RightSum -= answer.Value; }\n            }\n            this.save();\n        },\n        allAnsweredUsers() {\n            return User.find({ 'MyProfile.UserType.AnsweredQuestions.QuestionID':{ $eq: this._id } });\n        },\n        unanswerAll(noSave) {\n            let self = this;\n            self.allAnsweredUsers().forEach(function (user) {\n                let b = user.MyProfile.UserType.AnsweredQuestions.length;\n                user.MyProfile.UserType.unAnswerQuestion(user.MyProfile.UserType.getAnswerForQuestion(self._id), false);\n                if(!noSave) { user.save(); }\n            });\n            this.reset();\n        },\n        reset() {\n            this.TimesAnswered.reset();\n            this.SumOfAnswers.reset();\n            this.save();\n        }\n    },\n    behaviors: {\n        timestamp: {},\n        softremove: {}\n    },\n    secured: {\n        update: false\n    },\n    events: {\n        beforeInsert(e) {\n            let u = User.findOne( {username:Defaults.user.username} );\n            UserNotify.add({\n                userId: u._id,\n                title: 'Questions',\n                body: 'New question added',\n                action: 'questions:'+e.currentTarget._id\n            });\n        },\n        beforeUpdate(e) {\n            const allowed = [ 'updatedAt', 'TimesAnswered', 'TimesAnswered.LeftSum', 'SumOfAnswers', 'SumOfAnswers.LeftSum', 'TimesAnswered.RightSum', 'SumOfAnswers.RightSum' ];\n            const doc = e.currentTarget;\n            const fieldNames = doc.getModified();\n            _.each(fieldNames, function (fieldName) {\n                if(!Meteor.isServer && allowed.indexOf(fieldName) < 0 && !Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n                    throw new Meteor.Error(403, \"You are not authorized\");\n                }\n            });\n        }\n    }\n});\n\nexport { Question, Reading, MyersBriggsCategory };\n","import { Meteor } from 'meteor/meteor';\n\nMeteor.publish(null, function (){\n  return Meteor.roles.find({})\n});\n","import { Meteor } from 'meteor/meteor';\nimport { TeamGoal } from '../team_goals.js';\nimport { User } from '../../users/users.js';\n\nMeteor.publish('teamGoalsData', function (teamName) {\n    if (Roles.userIsInRole(Meteor.userId(), ['admin','view-goals'], teamName)) {\n        return TeamGoal.find( {teamName: teamName} );\n    } else {\n        this.stop();\n        return;\n    }\n});\n\nMeteor.publishComposite('teamGoalsUsers', function (teamName) {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin','view-goals'], teamName)) {\n        return this.ready();\n    }\n    return {\n        find() {\n            return TeamGoal.find( {teamName: teamName} );\n        },\n        children: [{\n            find(teamGoal) {\n                let userList = teamGoal.assignedTo.concat(teamGoal.mentors).concat(teamGoal.admins);\n                let fieldsObj = {};\n                fieldsObj[\"MyProfile.firstName\"] = 1;\n                fieldsObj[\"MyProfile.lastName\"] = 1;\n                return User.find( {_id: userList}, {fields: fieldsObj} );\n            }\n        }]\n    }\n})\n","import { TeamGoal } from './team_goals.js';\n\nMeteor.methods({\n    'teamgoals.createNewGoal'(goal) {\n        if (!Roles.userIsInRole(Meteor.userId(), ['admin'], goal.teamName)) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        }\n\n        let g = new TeamGoal(goal);\n        return g.save();\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { User } from '../users/users.js';\nimport { Class, Enum } from 'meteor/jagi:astronomy';\nimport { UserNotify } from '/imports/api/user_notify/user_notify.js';\n\nconst GoalComment = Class.create({\n    name: 'GoalComment',\n    fields: {\n        userId: {\n            type: String,\n            default: function() { return Meteor.userId(); }\n        },\n        date: {\n            type: Date,\n            default: function() { return new Date(); }\n        },\n        text: {\n            type: String,\n            default: ''\n        }\n    }\n});\n\nconst TeamGoal = Class.create({\n    name: 'TeamGoal',\n    collection: new Mongo.Collection('team_goal'),\n    fields: {\n        teamName: {\n            type: String,\n            default: ''\n        },\n        title: {\n            type: String,\n            default: ''\n        },\n        description: {\n            type: String,\n            default: ''\n        },\n        parentId: {\n            type: String,\n            default: ''\n        },\n        assignedTo: {\n            type: [String],\n            default: []\n        },\n        mentors: {\n            type: [String],\n            default: []\n        },\n        assignedToStr: {\n            type: String,\n            transient: true\n        },\n        mentorsStr: {\n            type: String,\n            transient: true\n        },\n        adminsStr: {\n            type: String,\n            transient: true\n        },\n        admins: {\n            type: [String],\n            default: []\n        },\n        reachedDate: {\n            type: Date,\n            optional: true\n        },\n        startDate: {\n            type: Date,\n            optional: true\n        },\n        dueDate: {\n            type: Date,\n            optional: true\n        },\n        reviewDate: {\n            type: Date,\n            optional: true\n        },\n        reviewedOnDate: {\n            type: Date,\n            optional: true\n        },\n        goalComments: {\n            type: [GoalComment],\n            default: []\n        },\n        reviewComments: {\n            type: [GoalComment],\n            default: []\n        }\n    },\n    behaviors: {\n        timestamp: {}\n    },\n    helpers: {\n        getGoalRoleGroup() {\n            return this.teamName + '+' + this._id;\n        },\n        userIsAdmin() {\n            if (\n              Roles.userIsInRole(Meteor.userId(), 'admin', this.teamName)\n             ||\n              Roles.userIsInRole(Meteor.userId(), 'admin', this.getGoalRoleGroup())\n            ) {\n                //user is either a global admin, a team admin, or a goal admin\n                return true;\n            } else {\n                return false;\n            }\n        },\n        userIsMentor() {\n            if (\n                Roles.userIsInRole(Meteor.userId(), 'mentor', this.getGoalRoleGroup())\n            ) {\n                //user is a mentor for this goal\n                return true;\n            } else {\n                return false;\n            }\n        },\n        userIsAssigned() {\n            if (\n                Roles.userIsInRole(Meteor.userId(), 'assigned', this.getGoalRoleGroup())\n            ) {\n                //user is assigned to this goal\n                return true;\n            } else {\n                return false;\n            }\n        },\n        setDateField(fieldName, rdate) {\n            if ( typeof rdate === \"undefined\") {\n                rdate = new Date();\n            } else if ( !(rdate instanceof Date) ) {\n                return false;\n            }\n            this[fieldName] = rdate;\n            return true;\n        },\n        getUserFullNameX(userId) {\n            let u = User.findOne( {_id: userId} );\n            if (!u) {\n                return \"Michael\";\n            }\n            let name = u.MyProfile.firstName + \" \" + u.MyProfile.lastName;\n            return name;\n        },\n        hasModifyPerm(fieldName) {\n            switch (fieldName) {\n            //admins-only fields\n            case 'dueDate':\n            case 'startDate':\n            case 'reachedDate':\n            case 'reviewDate':\n            case 'title':\n            case 'description':\n            case 'assignedTo':\n            case 'mentors':\n            case 'admins':\n            case 'subgoals':\n                return this.userIsAdmin();\n                break;\n            //admins and mentors\n            case 'reviewedOnDate':\n            case 'reviewComments':\n                return this.userIsAdmin() || this.userIsMentor();\n                break;\n            //anyone assigned to the goal\n            case 'goalComments':\n                return this.userIsAdmin() || this.userIsMentor() || this.userIsAssigned();\n                break;\n            default:\n                return false;\n                break;\n            }\n        },\n        notifyNew(oldList,newList) {\n            let diffList = _.difference(newList,oldList);\n            for (let i = 0; i < diffList.length; i++) {\n                UserNotify.add({\n                    userId: diffList[i],\n                    title: 'Team Goals',\n                    body: 'You have been added to goal '+this.title,\n                    action: 'teamgoals:'+this.teamName\n                });\n            }\n        }\n    },\n    events: {\n        beforeSave(e) {\n            let egoal = e.currentTarget;\n\n            //any user added to a goal is automatically added to the 'view-goals' role for the team\n            //if they are already in that role, this should just ignore the redundant addUser\n            let flds = [\"assignedTo\",\"mentors\",\"admins\"];\n            for (let i in flds) {\n                if (Array.isArray(egoal[flds[i]]) && egoal[flds[i]].length > 0) {\n                    Roles.addUsersToRoles(egoal[flds[i]], 'view-goals', egoal.teamName);\n                }\n            }\n        },\n    },\n    meteorMethods: {\n        setDueDate(rdate) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            if ( this.setDateField(\"dueDate\", rdate) ) {\n                this.save();\n            } else {\n                throw new Meteor.Error(403, \"Invalid date\");\n            }\n        },\n        setGoalReached(rdate) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            if ( this.setDateField(\"reachedDate\", rdate) ) {\n                this.save();\n            } else {\n                throw new Meteor.Error(403, \"Invalid date\");\n            }\n        },\n        setReviewDate(rdate) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            if ( this.setDateField(\"reviewDate\", rdate) ) {\n                this.save();\n            } else {\n                throw new Meteor.Error(403, \"Invalid date\");\n            }\n        },\n        setGoalReviewedOn(rdate) {\n            //mentors and admins\n            if ( !this.userIsAdmin() && !this.userIsMentor()) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            if ( this.setDateField(\"reviewedOnDate\", rdate) ) {\n                this.save();\n            } else {\n                throw new Meteor.Error(403, \"Invalid date\");\n            }\n        },\n        addComment(commentTxt) {\n            //mentors, admins, and assignees\n            if ( !this.userIsAdmin() && !this.userIsMentor() && !this.userIsAssigned() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            this.goalComments.push(\n                new GoalComment( {\n                    userId: Meteor.userId(),\n                    date: new Date(),\n                    text: commentTxt,\n                } )\n            );\n            this.save();\n        },\n        addReviewComment(commentTxt) {\n            //mentors and admins\n            if ( !this.userIsAdmin() && !this.userIsMentor() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            this.reviewComments.push(\n                new GoalComment( {\n                    userId: Meteor.userId(),\n                    date: new Date(),\n                    text: commentTxt,\n                } )\n            );\n            this.save();\n        },\n        createNewGoal() {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            //\n        },\n        setTitle(title) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            this.title = title;\n            this.save();\n        },\n        setDescription(descr) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            this.description = descr;\n            this.save();\n        },\n        setAssignedTo(ulist) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            this.notifyNew(this.assignedTo,ulist);\n            this.assignedTo = ulist;\n            this.save();\n        },\n        setMentors(ulist) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n            this.notifyNew(this.mentors,ulist);\n            this.mentors = ulist;\n            this.save();\n        },\n        setAdmins(ulist) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            this.notifyNew(this.admins,ulist);\n            this.admins = ulist;\n            this.save();\n        },\n        getUserFullName(userId) {\n            const invocation = DDP._CurrentInvocation.get();\n            if (invocation.isSimulation) {\n                return \"George\";\n            }\n            let u = User.findOne( {_id: userId} );\n            if (!u) {\n                return \"Michael\";\n            }\n            let name = u.MyProfile.firstName + \" \" + u.MyProfile.lastName;\n            return name;\n        },\n        updateFromObj(updObj) {\n            let permError = false;\n\n            for (let fld in updObj) {\n                if (\n                  this[fld] !== updObj[fld] ||\n                  (Array.isArray(updObj[fld]) && _.isEqual(this[fld], updObj[fld]))\n                ) {\n                    if (this.hasModifyPerm(fld)) {\n                        if (fld === \"assignedTo\" || fld === \"mentors\" || fld === \"admins\") {\n                            this.notifyNew(this[fld],updObj[fld]);\n                        }\n                        this[fld] = updObj[fld];\n                    } else {\n                        permError = true;\n                    }\n                }\n            }\n            this.save();\n            if (permError) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n        }\n    }\n});\n\nexport { TeamGoal, GoalComment };\n","import { Meteor } from 'meteor/meteor';\nimport { Team } from '../teams.js';\nimport { User } from '../../users/users.js';\n\nMeteor.publish('teamsData', function() {\n    if (this.userId) {\n        return Team.find(\n            {\n                $or: [\n                    {Public: true},\n                    {Members: Meteor.userId()}\n                ]\n            },\n            {\n                fields: { Name: 1, Description: 1, CreatedBy: 1, Icon: 1, Icon64: 1, IconType: 1 }\n            }\n        );\n    } else {\n        return [ ];\n    }\n});\n\nMeteor.publish('teamsMemberOfList', (userId) => {\n    // if (userId == Meteor.userId() || Roles.userIsInRole(Meteor.userId(),'admin', Roles.GLOBAL_GROUP)) {\n        return Team.find( {Members: userId} );\n    // } else {\n    //    return [];\n    // }\n});\n\n\nMeteor.publishComposite('teamMemberList', (userId) => {\n    return {\n        find() {\n            let u = User.findOne( {_id: Meteor.userId()} );\n\n            if (typeof u === \"undefined\") {\n                return; // [];\n            }\n            let teamsList = [];\n            _.forEach(u.roles, (roles, team) => {\n                if (roles.indexOf('admin') > -1 || roles.indexOf('view-members')) {\n                    teamsList.push(team);\n                }\n            });\n            let fieldsObj = {\n                Name: 1,\n                Description: 1,\n                Members: 1,\n                CreatedBy: 1,\n                Icon: 1,\n                Icon64: 1,\n                IconType: 1\n            };\n\n            return Team.find( {Name: {'$in': teamsList}}, {\n                fields: fieldsObj\n            });\n        },\n        children: [{\n            find(team) {\n                if ( Roles.userIsInRole(userId, ['admin','view-members'], team.Name) || Roles.userIsInRole(userId, 'admin', Roles.GLOBAL_GROUP) ) {\n\n                    let memberList = team.Members;\n\n                    let reqQuery = {};\n                    let fieldsObj = {};\n                    fieldsObj[\"MyProfile.firstName\"] = 1;\n                    fieldsObj[\"MyProfile.lastName\"] = 1;\n                    fieldsObj[\"roles.\"+team.Name] = 1;\n                    fieldsObj[\"teams\"] = 1;\n\n                    reqQuery['roles.'+team.Name] = \"user-join-request\";\n                    let u = User.find(\n                    {\n                        $or: [\n                            { _id: { '$in': memberList } },\n                            reqQuery\n                        ]\n                    }, { fields: fieldsObj });\n                    return u;\n                } else {\n                    return this.ready();\n                }\n            }\n        }]\n    }\n});\n","import {Team } from './teams.js';\n\nMeteor.methods({\n    'team.createNewTeam'(newTeam) {\n        if ( !Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP) ) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        }\n\n        newTeam.CreatedBy = Meteor.userId();\n        let t = new Team(newTeam);\n        return t.save();\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { Class, Enum } from 'meteor/jagi:astronomy';\nimport { check } from 'meteor/check';\nimport { User } from '../users/users.js';\nimport { Defaults } from '/imports/startup/both/defaults.js';\nimport { UserNotify } from '/imports/api/user_notify/user_notify.js';\nconst DefaultTeamID = \"NCuypCXN47KrSTeXh\";\n\nconst TeamIcon = Class.create({\n    name: \"TeamIcon\",\n    fields: {\n        data: {\n            type: String,\n            default: ''\n        },\n        contentType: {\n            type: String,\n            default: 'image/png'\n        }\n    }\n});\n\nconst Team = Class.create({\n    name: \"Team\",\n    collection: new Mongo.Collection('teams'),\n    fields: {\n        Name: {\n            type: String,\n            default: 'Whoa! The no-name team?'\n        },\n        Description: {\n        \ttype: String,\n        \tdefault: 'This team is nondescript.'\n        },\n        Icon64: {\n            type: String,\n            default: ''\n        },\n        IconType: {\n            type: String,\n            defaut: 'image/png',\n            optional: true\n        },\n        Icon: {\n            type: TeamIcon,\n            default: function() { return new TeamIcon(); }\n        },\n        Public: {\n            type: Boolean,\n            default: true\n        },\n        Members: {\n            type: [String],\n            default: []\n        },\n        Active: {\n            type: Boolean,\n            default: false\n        },\n        CreatedBy: {\n            type: String,\n            default: function() { return this.userId; }\n        },\n    },\n    indexes: {\n        nameIndex: {\n            fields: {\n                Name: 1\n            },\n            options: {\n                unique: true\n            },\n        }\n    },\n    meteorMethods: {\n        userRequestJoin() {\n            Roles.addUsersToRoles(Meteor.userId(), 'user-join-request', this.Name);\n        },\n        adminRequestUserJoin(user) {\n            if (Roles.userIsInRole(Meteor.userId(), 'admin', this.Name) && !Roles.userIsInRole(user, 'member', this.Name)) {\n                Roles.addUsersToRoles(user, 'admin-join-request', this.Name);\n                for (let i = 0; i < user.length; i++) {\n                    UserNotify.add({\n                        userId: user[i],\n                        title: 'Teams',\n                        body: 'Received join request for team ' + this.Name,\n                        action: 'teams:'+this.Name.split(' ').join('-')\n                    });\n                }\n            }\n        },\n        userAcceptJoin() {\n            if (Roles.userIsInRole(Meteor.userId(), 'admin-join-request', this.Name)) {\n                Roles.removeUsersFromRoles(Meteor.userId(), 'admin-join-request', this.Name);\n                this.addUsers(Meteor.userId());\n            }\n        },\n        userDeclineJoin() {\n            if (Roles.userIsInRole(Meteor.userId(), 'admin-join-request', this.Name)) {\n                Roles.removeUsersFromRoles(Meteor.userId(), 'admin-join-request', this.Name);\n            }\n        },\n        adminAcceptJoin(userId) {\n            if (Roles.userIsInRole(Meteor.userId(), 'admin', this.Name)) {\n                Roles.removeUsersFromRoles(userId, 'user-join-request', this.Name);\n                //Roles.addUsersToRoles(userId, 'member', this.Name);\n                this.addUsers(userId);\n            }\n        },\n        adminRejectJoin(userId) {\n            if (Roles.userIsInRole(Meteor.userId(), 'admin', this.Name)) {\n                Roles.removeUsersFromRoles(userId, 'user-join-request', this.Name);\n            }\n        },\n        addRole(userId, role) {\n            if (Roles.userIsInRole(Meteor.userId(), 'admin', this.Name)) {\n                Roles.addUsersToRoles(userId, role, this.Name);\n            }\n        },\n        removeRole(userId, role) {\n            if (Roles.userIsInRole(Meteor.userId(), 'admin', this.Name)) {\n                Roles.removeUsersFromRoles(userId, role, this.Name);\n            }\n        },\n        updateFromObj(updObj) {\n            if (Roles.userIsInRole(Meteor.userId(), 'admin', this.Name)) {\n                for (let fld in updObj) {\n                    if (\"Icon64\" !== fld && \"IconType\" !== fld && \"Icon\" !== fld) {\n                        this[fld] = updObj[fld];\n                    }\n                }\n                this.save();\n            }\n        },\n        uploadIcon(fileInfo, fileData) {\n            if (Meteor.isServer) {\n                var base64Image = new Buffer(fileData, 'binary').toString('base64');\n                this.Icon64 = base64Image;\n                this.IconType = 'image/png';\n                this.save();\n            }\n        }\n    },\n    helpers: {\n        addUsers(users) {\n            if (typeof users === 'string') {\n                users = [users];\n            }\n\n            //admin list has to be filtered because getUsersInRole includes admin in GLOBAL_GROUP\n            let groupAdminList = Roles.getUsersInRole('admin', this.Name).fetch().filter( (user) => {\n                return (\n                    \"undefined\" !== typeof user.roles &&\n                    \"undefined\" !== typeof user.roles[this.Name] &&\n                    user.roles[this.Name].indexOf('admin') > -1\n                );\n            });\n\n            for (let i = 0; i < users.length; i++) {\n                if (this.Members.indexOf(users[i]) === -1) {\n                    this.Members.push( users[i] );\n                }\n                let currUserRoles = ['member'];\n                //Roles.addUsersToRoles(users[i], 'member', this.Name);\n\n                //if team doesn't have an admin, the first user added becomes admin\n                if (i == 0 && groupAdminList.length == 0) {\n                    //Roles.addUsersToRoles(users[i], 'admin', this.Name);\n                    currUserRoles.push('admin');\n                } else {\n                    //Roles.addUsersToRoles(users[i], Defaults.role.name, this.Name);\n                    currUserRoles.push(Defaults.role.name);\n                }\n                Roles.addUsersToRoles(users[i], currUserRoles, this.Name);\n                /*\n                let u = User.findOne( {_id: users[i]} );\n                if (u && u.teams.indexOf(this.Name) === -1) {\n                    u.teams.push(this.Name);\n                    u.save();\n                }\n                */\n            }\n            this.save();\n        },\n        removeUsers(users) {\n            if (typeof users === 'string') {\n                users = [users];\n            }\n\n            for (let i = 0; i < users.length; i++) {\n            }\n        },\n        removeUsersFromTeamRoles(users, roles) {\n            if (typeof users === 'string') {\n                users = [users];\n            }\n            if (typeof roles === 'string') {\n                roles = [roles];\n            }\n\n            //if removing the 'member' role from users, completely remove them from all roles and from the group\n            if (roles.indexOf('member') !== -1) {\n                this.removeUsers(users)\n            }\n\n            for (let i = 0; i < users.length; i++) {\n            }\n        }\n    },\n    behaviors: {\n        timestamp: {},\n        softremove: {}\n    },\n    secured: {\n    },\n    events: {\n        afterInit(e) {\n            //\n        },\n        beforeSave(e) {\n            console.log(\"before save Team\", e.currentTarget.Name, e.currentTarget.Members);\n        }\n    }\n});\n\nTeam.Default = Team.findOne({_id:DefaultTeamID});\nif (typeof Team.Default === \"undefined\") {\n    Team.Default = new Team({\n        _id:DefaultTeamID,\n        Name: 'No Team',\n        Active: true\n    });\n    if (Meteor.isServer) {\n        Team.Default.CreatedBy = 'kkcDYH3ix4f4Lb5qk';\n        //console.log(Team.Default);\n        //Team.Default.save();\n    }\n}\n\nexport { Team,TeamIcon };\n","// All type-reading-related publications\n\nimport { Meteor } from 'meteor/meteor';\nimport { TypeReading, ReadingRange } from '../type_readings.js';\nimport { User, MyersBriggs, Answer, UserType, Profile } from '../../users/users.js';\nimport { MyersBriggsCategory } from \"../../questions/questions.js\";\nMeteor.publishComposite('typereadings.getAll', function () {\n    if(!Roles.userIsInRole(this.userId, ['admin'], Roles.GLOBAL_GROUP)) { return this.ready(); }\n    var qry = {};\n    console.log(\"Publication 'typereadings.getAll': \", this.userId, qry);\n    return {\n        find() {\n            return TypeReading.find(qry, {\n                defaults: true,\n                sort: { \"TypeReadingCategories.Range.low\":1, \"TypeReadingCategories.Range.Delta\": -1 }\n            });\n        },\n        children: [{\n            find(typereading) {\n                return User.find({ _id: typereading.CreatedBy }, { limit: 1 });\n            }\n        }]\n    };\n});\nMeteor.publishComposite('typereadings.byCategory', function (category) {\n    if(!Roles.userIsInRole(this.userId, ['admin'], Roles.GLOBAL_GROUP)) { return this.ready(); }\n    var qry = {};\n    qry[\"TypeReadingCategories.\"+category+\".Range.low\"] = { $gte: -100 };\n    console.log(\"Publication 'typereadings.byCategory': \", category, this.userId, qry);\n    return {\n        find() {\n            return TypeReading.find(qry, {\n                defaults: true,\n                sort: { \"TypeReadingCategories.Range.low\":1,\"TypeReadingCategories.Range.Delta\": -1 }\n            });\n        },\n        children: [{\n            find(typereading) {\n                return User.find({ _id: typereading.CreatedBy }, { limit: 1 });\n            }\n        }]\n    };\n});\nMeteor.publish('typereadings.myReadings', function (userId, refresh) {\n    //console.log(userId, this.userId);\n    //if(this.userId !== userId && !Roles.userIsInRole(this.userId, ['admin'], Roles.GLOBAL_GROUP)) { return this.ready(); }\n    if (typeof userId === \"undefined\") {\n        return this.ready();\n    }\n    console.log(\"Publication 'typereadings.myReadings': \", this.userId, userId);\n    let self = this;\n    let user = User.findOne({_id:userId});\n\n    if (!user) {\n        return;\n    }\n    //console.log(self, user);\n    let observe = {\n        added: function(id, fields) {\n            self.added('type_readings', id, fields);\n        },\n        changed: function(id, fields) {\n            self.removed(\"type_readings\", id);\n        },\n        removed: function(id) {\n            self.removed('type_readings', id);\n        }\n    };\n    let userType = user.MyProfile.UserType.Personality;\n    let handle = TypeReading.find({\n        $and : [\n            { $or: [\n                { $or : [ { \"TypeReadingCategories.0\": { $type: 10 } }, { \"TypeReadingCategories.0\" : {$exists: false}} ] },\n                { $and : [\n                    { 'TypeReadingCategories.0.Range.low' : { $lte: userType['IE'].Value }},\n                    { 'TypeReadingCategories.0.Range.high' : { $gte: userType['IE'].Value }}\n                ]}\n            ]},\n            { $or: [\n                { $or : [ { \"TypeReadingCategories.1\": { $type: 10 } }, { \"TypeReadingCategories.1\" : {$exists: false}} ] },\n                { $and : [\n                    { 'TypeReadingCategories.1.Range.low' : { $lte: userType['NS'].Value }},\n                    { 'TypeReadingCategories.1.Range.high' : { $gte: userType['NS'].Value }}\n                ]}\n            ]},\n            { $or: [\n                { $or : [ { \"TypeReadingCategories.2\": { $type: 10 } }, { \"TypeReadingCategories.2\" : {$exists: false}} ] },\n                { $and : [\n                    { 'TypeReadingCategories.2.Range.low' : { $lte: userType['TF'].Value }},\n                    { 'TypeReadingCategories.2.Range.high' : { $gte: userType['TF'].Value }}\n                ]}\n            ]},\n            { $or: [\n                { $or : [ { \"TypeReadingCategories.3\": { $type: 10 } }, { \"TypeReadingCategories.3\" : {$exists: false}} ] },\n                { $and : [\n                    { 'TypeReadingCategories.3.Range.low' : { $lte: userType['JP'].Value }},\n                    { 'TypeReadingCategories.3.Range.high' : { $gte: userType['JP'].Value }}\n                ]}\n            ]},\n            { 'Categories.Categories': { $elemMatch: { $in: user.MyProfile.Categories.Categories } } },\n            { 'Enabled': true }\n        ]\n    },{\n        defaults: true,\n        sort: { 'TypeReadingCategories.MyersBriggsCategory':1, 'TypeReadingCategories.Range.Delta': -1 }\n    }).observeChanges(observe);\n\n    self.ready();\n    self.onStop(function() {\n        handle.stop();\n    });\n});\n","import { Meteor } from 'meteor/meteor';\nimport { TypeReading, ReadingRange, TypeReadingCategory, TypeReadingCategories } from './type_readings.js';\nimport { User, MyersBriggs, Answer, UserType, Profile } from '../users/users.js';\nimport { MyersBriggsCategory } from \"../questions/questions.js\";\n\nMeteor.methods({\n    'typereadings.insert'(header, body) {\n        if(!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        }\n        let newReading = new TypeReading({ Header:header, Body:body, CreatedBy:Meteor.userId() });\n        console.log(header, body, newReading);\n        newReading.validate({\n            cast: true\n        });\n\n        return newReading.save();\n    },\n    'typereadings.addCategoryToReading'(readingId, category, high, low) {\n        if(!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        }\n        let reading = TypeReading.findOne({_id:readingId});\n        let catReading = new TypeReadingCategory();\n        catReading.MyersBriggsCategory = parseInt(category);\n        catReading.Range = new ReadingRange();\n        catReading.Range.high = parseInt(high);\n        catReading.Range.low = parseInt(low);\n        console.log(catReading);\n        reading.addTypeCategory(catReading);\n        reading.save();\n    },\n    'typereadings.delete'(readingId) {\n        if(!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        }\n        let reading = TypeReading.findOne({_id:readingId});\n        reading.remove();\n    },\n    'typereadings.toggle'(readingId) {\n        if(!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        }\n        let reading = TypeReading.findOne({_id:readingId});\n        reading.toggle();\n    },\n});","import { Class } from 'meteor/jagi:astronomy';\nimport { check } from 'meteor/check';\nimport { Mongo } from 'meteor/mongo';\nimport { MyersBriggsCategory } from '../questions/questions.js';\nimport { Category, CategoryManager } from '../categories/categories.js';\n\nconst ReadingRange = Class.create({\n    name: \"ReadingRange\",\n    fields: {\n        high: {\n            type: Number,\n            default: 50\n        },\n        low: {\n            type: Number,\n            default: 0\n        },\n        Delta: {\n            type: Number,\n            default: 50\n        }\n    },\n    helpers: {\n        in(val) {\n            return this.low <= val && val <= this.high;\n        },\n        setDelta() {\n            this.Delta = this.high - this.low;\n            return this;\n        }\n    }\n});\nReadingRange.Create = function(high, low) {\n    let m = new ReadingRange();\n    m.high = high;\n    m.low = low;\n    return m.setDelta();\n}\nReadingRange.FullHigh = function () {\n    return ReadingRange.Create(50, 0);\n}\nReadingRange.FullLow = function () {\n    return ReadingRange.Create(0, -50);\n}\nconst TypeReadingCategory = Class.create({\n    name: \"TypeReadingCategory\",\n    fields: {\n        MyersBriggsCategory: {\n            type: MyersBriggsCategory\n        },\n        Range: {\n            type: ReadingRange,\n            default: function () {\n                return ReadingRange.FullHigh;\n            }\n        }\n    }\n});\nconst TypeReadingCategories = Class.create({\n    name: \"TypeReadingCategories\",\n    fields: {\n        0: {\n            type:TypeReadingCategory,\n            optional: true\n        },\n        1: {\n            type:TypeReadingCategory,\n            optional: true\n        },\n        2: {\n            type:TypeReadingCategory,\n            optional: true\n        },\n        3: {\n            type:TypeReadingCategory,\n            optional: true\n        }\n    }\n});\nconst TypeReading = Class.create({\n    name: \"TypeReading\",\n    collection: new Mongo.Collection('type_readings'),\n    fields: {\n        TypeReadingCategories: {\n            type: TypeReadingCategories,\n            default: {}\n        },\n        Categories: {\n            type: CategoryManager,\n            default: function () {\n                return CategoryManager.OfType(\"TypeReading\");\n            }\n        },\n        Header: {\n            type: String,\n            default: \"\"\n        },\n        Body: {\n            type: String,\n            default: \"\"\n        },\n        CreatedBy: {\n            type: String,\n            default: function() { return Meteor.userId(); }\n        },\n        Enabled: {\n            type: Boolean,\n            default: false\n        }\n    },\n    helpers: {\n        toggle() {\n            this.Enabled = !this.Enabled;\n            this.save();\n        },\n        addTypeCategory(cat) {\n            this.TypeReadingCategories[cat.MyersBriggsCategory] = cat;\n        }\n    },\n    events: {\n        beforeSave(e) {\n            _.forEach(e.target.TypeReadingCategories, (reading) => { \n                if(reading == null) { return; }\n                reading.Range.setDelta();\n            });\n            if(e.target.Categories.length() < 1) {\n                e.target.Categories.addCategory(Category.Default);\n            }\n        }\n    }\n});\n\nexport { TypeReading, ReadingRange, TypeReadingCategory, TypeReadingCategories };","import { Meteor } from 'meteor/meteor';\nimport { UserFeedback } from '../user_feedback.js';\n\nMeteor.publish('feedback.userComments', function() {\n    if (this.userId) {\n        return UserFeedback.find({userId: Meteor.userId()});\n    } else {\n        return [];\n    }\n});\n","import { UserFeedback } from './user_feedback.js';\n\nMeteor.methods({\n    'feedback.createNewFeedback'(newFeedback) {\n        if (!Meteor.userId()) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        }\n\n        newFeedback.userId = Meteor.userId();\n        let f = new UserFeedback(newFeedback);\n        return f.save();\n    }\n})\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { Class, Enum } from 'meteor/jagi:astronomy';\n\nconst UserFeedback = Class.create({\n    name: 'UserFeedback',\n    collection: new Mongo.Collection('user_feedback'),\n    fields: {\n        userId: {\n            type: String,\n            default: ''\n        },\n        source: {\n            type: String,\n            default: ''\n        },\n        context: {\n            type: String,\n            default: ''\n        },\n        comment: {\n            type: String,\n            default: ''\n        },\n        dateCreated: {\n            type: Date,\n            default: function() { return new Date(); }\n        }\n    }\n});\n\nexport { UserFeedback };\n","import { Meteor } from 'meteor/meteor';\nimport { UserNotify } from '../user_notify.js';\n\nMeteor.publish('notificationList', function (userId) {\n    if (this.userId == userId) {\n        let un = UserNotify.find( {userId:this.userId} );\n        return un;\n    } else {\n        return [];\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { Class, Enum } from 'meteor/jagi:astronomy';\nimport { User } from '../users/users.js';\nimport { Email } from 'meteor/email';\n\nlet UserNotify = Class.create({\n    name: \"UserNotify\",\n    collection: new Mongo.Collection('user_notify'),\n    fields: {\n        userId: {\n            type: String,\n            default: ''\n        },\n        isRead: {\n            type: Boolean,\n            default: false\n        },\n        isPushed: {\n            type: Boolean,\n            default: false\n        },\n        isEmailed: {\n            type: Boolean,\n            default: false\n        },\n        title: {\n            type: String,\n            default: ''\n        },\n        body: {\n            type: String,\n            default: ''\n        },\n        action: {\n            type: String,\n            default: ''\n        },\n        createdDate: {\n            type: Date,\n            default: function () { return new Date(); }\n        }\n    },\n    meteorMethods: {\n        markRead() {\n            this.isRead = true;\n            this.save();\n        },\n        markNotified() {\n            this.isPushed = true;\n            this.save();\n        }\n    },\n    helpers: {\n        test() {\n            console.log(\"123\");\n        },\n        pushNotify(opts) {\n            let noteOpts = {\n                body: this.body,\n                icon: '/img/panda.png',\n                data: this._id\n            }\n            let browserNote;\n\n            if (!(\"Notification\" in window)) {\n                alert(\"This browser does not support desktop notification\");\n            }\n\n            // Let's check whether notification permissions have already been granted\n            else if (Notification.permission === \"granted\") {\n                // If it's okay let's create a notification\n                browserNote = new Notification(this.title, noteOpts);\n            }\n\n            // Otherwise, we need to ask the user for permission\n            else if (Notification.permission !== \"denied\") {\n                Notification.requestPermission(function (permission) {\n                    // If the user accepts, let's create a notification\n                    if (permission === \"granted\") {\n                        browserNote = new Notification(this.title, noteOpts);\n                    }\n                });\n            }\n            if (Notification.permission === \"granted\" && typeof opts.onclick !== 'undefined') {\n                browserNote.onclick = opts.onclick;\n            }\n        }\n    },\n    events: {\n        beforeSave(e) {\n            if (Meteor.isServer) {\n                let note = e.currentTarget;\n                if (!note.isEmailed) {\n                    let u = User.findOne( {_id:note.userId} );\n                    if (u) {\n                        let addr = u.emails[0].address;\n                        Email.send({\n                            to: addr,\n                            from: \"wayne@paladinarcher.com\",\n                            subject: \"Developer Level Notification - \"+note.title,\n                            text: note.body\n                        });\n                    }\n                }\n            }\n        }\n    }\n});\n\nif (Meteor.isClient) {\n    //\n}\n\nUserNotify.add = function(opts) {\n    let notify = new UserNotify(opts);\n    notify.save();\n}\n\nexport { UserNotify };\n","import { Meteor } from 'meteor/meteor';\nimport { UserSegment } from '../user_segments.js';\n\nMeteor.publish('segmentList', function () {\n    //if (Meteor.userId()) {\n        return UserSegment.find();\n    //} else {\n    //    this.stop();\n    //    return;\n    //}\n});\n","import { UserSegment } from './user_segments.js';\n\nMeteor.methods({\n    'segment.createNewSegment'(name, dscr) {\n        if (!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        } else {\n            let s = new UserSegment({\n                name: name,\n                description: dscr\n            });\n            return s.save();\n        }\n    }\n});\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { Class, Enum } from 'meteor/jagi:astronomy';\n\nconst UserSegment = Class.create({\n    name: 'UserSegment',\n    collection: new Mongo.Collection('user_segments'),\n    fields: {\n        name: {\n            type: String,\n            default: 'Default user segment'\n        },\n        description: {\n            type: String,\n            default: 'The default user segment for relevant content'\n        }\n    }\n});\n\nexport { UserSegment };\n","// All users-related publications\n\nimport { Meteor } from 'meteor/meteor';\nimport { User } from '../users.js';\n\nMeteor.publish('userData', function () {\n    if(this.userId) {\n        return User.find({ _id: this.userId }, {\n            fields: { roles: 1, MyProfile: 1 }\n        });\n    } else {\n        return this.ready();\n    }\n});\n\nMeteor.publish('userList', function () {\n    if ( Roles.userIsInRole(this.userId, ['admin'], Roles.GLOBAL_GROUP ) ) {\n        return User.find( {} );\n    } else {\n        return User.find( {}, {\n            fields: { roles: 1, username: 1, MyProfile: 1 }\n        } );\n    }\n})\n","Meteor.methods({\n    'user.sendVerificationEmail'() {\n        let userId = Meteor.userId();\n        if (userId) {\n            Accounts.emailTemplates.siteName = \"DeveloperLevel\";\n            Accounts.emailTemplates.from     = \"DeveloperLevel <wayne@paladinarcher.com>\";\n\n            Accounts.emailTemplates.verifyEmail = {\n                subject() {\n                    return \"[DeveloperLevel] Verify your email address\";\n                },\n                text( user, url ) {\n                    let emailAddress   = user.emails[0].address,\n                        urlWithoutHash = url.replace( '#/', '' ),\n                        supportEmail   = \"support@developerlevel.com\",\n                        emailBody      = `To verify your email address (${emailAddress}) visit the following link:\\n\\n${urlWithoutHash}\\n\\n If you did not request this verification, please ignore this email.`;\n\n                    return emailBody;\n                }\n            };\n            return Accounts.sendVerificationEmail(userId);\n        }\n    }\n})\n","import { Class } from 'meteor/jagi:astronomy';\nimport { check } from 'meteor/check';\nimport { MyersBriggsCategory, Question } from '../questions/questions.js';\nimport { Category, CategoryManager } from '../categories/categories.js';\nimport { Defaults } from '../../startup/both/defaults.js';\nimport { Team } from '../teams/teams.js';\nimport { UserSegment } from '../user_segments/user_segments.js';\n\nconst MyersBriggsBit = Class.create({\n    name: 'MyersBriggsBit',\n    fields: {\n        Value: {\n            type: Number,\n            default: 0\n        },\n        Totals: {\n            type: Number,\n            default: 0\n        },\n        QuestionCount: {\n            type: Number,\n            default: 0\n        }\n    },\n    helpers: {\n        addValue(value) {\n            this.Totals += value;\n            this.QuestionCount ++;\n            this.Value = (this.QuestionCount == 0 ? 0 :this.Totals / this.QuestionCount);\n        },\n        removeValue(value) {\n            this.QuestionCount --;\n            if(this.QuestionCount < 0) { this.QuestionCount = 0; }\n            if(this.QuestionCount == 0) { this.Totals = this.Value = 0; return; }\n            this.Totals -= value;\n            this.Value = this.Totals / this.QuestionCount;\n        },\n        reset() {\n            this.Totals = 0;\n            this.QuestionCount = 0;\n            this.Value = 0;\n        }\n    }\n});\nconst MyersBriggs = Class.create({\n    name: 'MyersBriggs',\n    fields: {\n        IE: {\n            type: MyersBriggsBit,\n            default: function () { return new MyersBriggsBit(); }\n        },\n        NS: {\n            type: MyersBriggsBit,\n            default: function () { return new MyersBriggsBit(); }\n        },\n        TF: {\n            type: MyersBriggsBit,\n            default: function () { return new MyersBriggsBit(); }\n        },\n        JP: {\n            type: MyersBriggsBit,\n            default: function () { return new MyersBriggsBit(); }\n        }\n    },\n    helpers: {\n        addByCategory(category, value) {\n            console.log(category, value);\n            let name = this.getIdentifierById(category);\n            this[name].addValue(value);\n        },\n        removeByCategory(category, value) {\n            let name = this.getIdentifierById(category);\n            this[name].removeValue(value);\n        },\n        getIdentifierById(categoryId) {\n            if(categoryId === 0) { return 'IE'; }\n            if(categoryId === 1) { return 'NS'; }\n            if(categoryId === 2) { return 'TF'; }\n            return 'JP';\n        },\n        getFourLetter() {\n            let IEL = (this.IE.Value === 0 ? '_' : (this.IE.Value < 0 ? 'I' : 'E'));\n            let NSL = (this.NS.Value === 0 ? '_' : (this.NS.Value < 0 ? 'N' : 'S'));\n            let TFL = (this.TF.Value === 0 ? '_' : (this.TF.Value < 0 ? 'T' : 'F'));\n            let JPL = (this.JP.Value === 0 ? '_' : (this.JP.Value < 0 ? 'J' : 'P'));\n            return `${IEL}${NSL}${TFL}${JPL}`;\n        },\n        reset() {\n            for(let i = 0; i < 4; i++) {\n                this[this.getIdentifierById(i)].reset();\n            }\n        }\n    }\n});\nconst Answer = Class.create({\n    name: 'Answer',\n    fields: {\n        Category: {\n            type:MyersBriggsCategory,\n            default:0\n        },\n        Categories: {\n            type: [MyersBriggsCategory],\n            default: []\n        },\n        QuestionID: {\n            type: String,\n            default:''\n        },\n        Reversed: {\n            type: Boolean,\n            default:false\n        },\n        Value: {\n            type: Number,\n            default:0\n        },\n        AnsweredAt: {\n            type: Date,\n            default: function () { return new Date(); }\n        }\n    },\n    helpers: {\n        getQuestion() {\n            let q = Question.findOne({_id:this.QuestionID});\n            return q;\n        },\n        unanswer() {\n            this.getQuestion().removeAnswer(this);\n        }\n    }\n});\nconst UserType = Class.create({\n    name: 'UserType',\n    fields: {\n        Personality: {\n            type: MyersBriggs,\n            default: function () { return new MyersBriggs(); }\n        },\n        AnsweredQuestions: {\n            type: [Answer],\n            default: function() { return []; }\n        },\n        TotalQuestions: {\n            type: Number,\n            default:0\n        }\n    },\n    helpers: {\n        getAnsweredQuestionsIDs() {\n            let qids = [];\n            _.each(this.AnsweredQuestions, function (ans) {\n                qids.push(ans.QuestionID);\n            });\n            return qids;\n        },\n        setTotalQuestions(totalQuestions) {\n            //console.log(\"user.js totalQuestions\", totalQuestions);\n            this.TotalQuestions = totalQuestions;\n            //console.log(\"user.js totalQuestions2\", this.TotalQuestions);\n        },\n        getTotalQuestions() {\n          return this.TotalQuestions;\n        },\n        answerQuestion(answer) {\n            this.AnsweredQuestions.push(answer);\n            console.log(this.AnsweredQuestions);\n            console.log(answer.Categories);\n            let contextThis = this;\n            _.each(answer.Categories, function (cat) {\n                contextThis.Personality.addByCategory(cat, answer.Value);\n            });\n            //this.Personality.addByCategory(answer.Category, answer.Value);\n        },\n        unAnswerQuestion(answer, skipSlice) {\n            let index = this.getAnswerIndexForQuestionID(answer.QuestionID);\n            let before = this.AnsweredQuestions.length;\n\n            if(index < 0) { return; }\n            console.log(index);\n            if(!skipSlice) {\n                if(index == 0) {\n                    this.AnsweredQuestions.shift();\n                } else if(index == this.AnsweredQuestions.length - 1) {\n                    this.AnsweredQuestions.pop();\n                } else {\n                    this.AnsweredQuestions = this.AnsweredQuestions.slice(0,index).concat(this.AnsweredQuestions.slice(index+1));\n                }\n            }\n            answer.unanswer();\n            _.each(answer.Categories, function (cat) {\n                this.Personality.removeByCategory(cat, answer.Value);\n            });\n            //this.Personality.removeByCategory(answer.Category, answer.Value);\n            console.log(\"User Answer Count: \"+before+\" => \"+this.AnsweredQuestions.length);\n        },\n        getAnswerIndexForQuestionID(questionId) {\n            for(let i = 0; i < this.AnsweredQuestions.length; i++) {\n                if(this.AnsweredQuestions[i].QuestionID == questionId) { return i; }\n            }\n            return -1;\n        },\n        getAnswerForQuestion(questionId) {\n            return _.find(this.AnsweredQuestions, function (ans, i) {\n                return ans.QuestionID == questionId;\n            });\n        },\n        reset() {\n            let self = this;\n            _.each(this.AnsweredQuestions, function (ans) {\n                self.unAnswerQuestion(ans, true);\n            });\n            this.Personality.reset();\n            this.AnsweredQuestions = [];\n        }\n    }\n});\n\nconst DashboardPane = Class.create({\n    name: 'DashboardPane',\n    fields: {\n        size: {\n            type: Number,\n            default: 4\n        },\n        name: {\n            type: String,\n            default: 'App_home'\n        },\n        title: {\n            type: String,\n            default: 'Personality Questions'\n        },\n        route: {\n            type: String,\n            default: '/'\n        }\n    }\n})\n\nconst Profile = Class.create({\n    name: 'Profile',\n    fields: {\n        firstName: {\n            type: String,\n            validators: [{\n              type: 'minLength',\n              param: 2\n            }]\n        },\n        lastName: {\n            type: String,\n            validators: [{\n              type: 'minLength',\n              param: 2\n            }]\n        },\n        UserType: {\n            type: UserType,\n            default: function () { return new UserType(); }\n        },\n        gender: {\n            type: Boolean,\n            default: false\n        },\n        birthDate: {\n            type: Date,\n            optional: true\n        },\n        Categories: {\n            type: CategoryManager,\n            default: function() {\n                return CategoryManager.OfType(\"User\");\n            }\n        },\n        dashboardPanes: {\n            type: [DashboardPane],\n            default: []\n        },\n        segments: {\n            type: [String],\n            default: []\n        }\n    },\n    helpers: {\n        calculateAge() {\n            if (this.birthDate) {\n                const diff = Date.now() - this.birthDate.getTime();\n                this.age = Math.abs((new Date(diff)).getUTCFullYear() - 1970);\n            }\n        },\n        fullName(param) {\n            var fullName = this.firstName + ' ' + this.lastName;\n            if (param === 'lower') { return fullName.toLowerCase(); }\n            else if (param === 'upper') { return fullName.toUpperCase(); }\n            return fullName;\n        }\n    },\n});\n\nconst User = Class.create({\n    name: 'User',\n    collection: Meteor.users,\n    fields:{\n        createdAt: Date,\n        emails: {\n            type: [Object],\n            default: function() { return []; }\n        },\n        MyProfile: {\n            type: Profile,\n            default: function() { return new Profile(); }\n        },\n        teams: {\n        \ttype: [String],\n        \tdefault: function() { return [ Team.Default.Name ]; }\n        },\n        roles: {\n            type: Object\n        }\n    },\n    resolveError({ nestedName, validator }) {\n        console.log(nestedName, validator);\n    },\n    events: {\n        afterInit(e) {\n            e.target.MyProfile.calculateAge();\n        },\n        beforeSave(e) {\n            if (e.currentTarget.MyProfile.Categories.length() === 0) {\n                e.currentTarget.MyProfile.Categories.addCategory(Category.Default);\n            }\n            if (e.currentTarget.teams.length === 0) {\n            \te.currentTarget.addTeam( Team.Default.Name );\n            }\n        }\n    },\n    meteorMethods: {\n        create() {\n            return this.save();\n        },\n        changeName(firstName, lastName) {\n            check(firstName, String);\n            check(lastName, String);\n            this.MyProfile.firstName = firstName;\n            this.MyProfile.lastName = lastName;\n            return this.save();\n        },\n        fullName(param) {\n            return this.MyProfile.fullName(param);\n        },\n        addTeam(teamName) {\n        \tlet teamDoc = Team.findOne({ \"Name\" : teamName});\n        \tif (typeof teamDoc !== \"undefined\") {\n                teamDoc.addUsers(this._id);\n        \t} else {\n                return false;\n            }\n        },\n        profileUpdate(uprofile) {\n            check(uprofile.firstName, String);\n            check(uprofile.lastName, String);\n            check(uprofile.gender, Boolean);\n\n            this.MyProfile.firstName = uprofile.firstName;\n            this.MyProfile.lastName = uprofile.lastName;\n            this.MyProfile.gender = uprofile.gender;\n            this.MyProfile.segments = uprofile.segments;\n            if (\"\" !== uprofile.birthDate) {\n                this.MyProfile.birthDate = new Date(uprofile.birthDate);\n            }\n            return this.save();\n        }\n    },\n    indexes: {\n    },\n    behaviors: {\n        slug: {\n            fieldName: 'email'\n        },\n        timestamp: {}\n    }\n});\n\nif (Meteor.isServer) {\n  User.extend({\n    fields: {\n      services: Object\n    }\n  });\n}\n\nexport { User, Profile, UserType, MyersBriggs, Answer };\n","import { Class } from 'meteor/jagi:astronomy';\nimport { check } from 'meteor/check';\nconst DefaultCategoryID = \"xhKdwhacaWTcBTGPn\";\nconst TypeStats = Class.create({\n    name: 'TypeStats',\n    fields: {\n        num: {\n            type: Number,\n            default: 0\n        }\n    }\n});\nconst Category = Class.create({\n    name: 'Category',\n    collection: new Mongo.Collection('categories'),\n    fields: {\n        name: {\n            type: String,\n            default: \"the Unnamed Category\"\n        },\n        description: {\n            type: String,\n            default: \"this is the default stuff for a Category\"\n        },\n        stats: {\n            type: Object,\n            default: function () { return {}; }\n        }\n    },\n    helpers: {\n        addByType(type) {\n            if(!this.getStatsByType(type)) { this.stats[type] = new TypeStats(); }\n            this.getStatsByType(type).num++;\n            this.save();\n        },\n        removeByType(type) {\n            if(!this.getStatsByType(type)) { return false; }\n            this.getStatsByType(type).num--;\n            this.save();\n        },\n        getStatsByType(type) {\n            return this.stats[type];\n        }\n    },\n    meteorMethods: {\n        update(name, dscr) {\n            if (Roles.userIsInRole(Meteor.userId(), 'admin', Roles.GLOBAL_GROUP)) {\n                this.name = name;\n                this.description = dscr;\n                console.log(this.save());\n            }\n        }\n    }\n});\nCategory.Default = Category.findOne({_id:DefaultCategoryID});\nif (typeof Category.Default === \"undefined\") {\n    Category.Default = new Category({_id:DefaultCategoryID});\n    if (Meteor.isServer) {\n        Category.Default.save();\n    }\n}\n\nconst CategoryManager = Class.create({\n    name: 'CategoryManager',\n    fields: {\n        Categories: {\n            type: [String],\n            default: function () {\n                return [];\n            }\n        },\n        Type: {\n            type: String,\n            default: \"um... what!?\"\n        }\n    },\n    helpers: {\n        length() {\n            return this.Categories.length;\n        },\n        areIntersected(categoryManager) {\n            for(let i = 0; i < this.Categories.length; i++) {\n                for(let j = 0; j < categoryManager.Categories.length; i++) {\n                    if(this.Categories[i] == categoryManager.Categories[j]) { return true; }\n                }\n            }\n            return false;\n        },\n        addCategory(category, type) {\n            if(!type) { type = this.Type; }\n            this.Categories.push(category._id);\n            category.addByType(type);\n        },\n        hasCategory(category) {\n            if(this.Categories.length == 0) {\n                this.addCategory(Category.Default, this.Type);\n            }\n            return _.find(this.Categories, function (catId) {\n                return category._id == catId;\n            });\n        },\n        removeCategory(category, type, skipSlice) {\n            let index = -1;\n            _.each(this.Categories, function (catId, i) {\n                if(catId == category._id) {\n                    index = i;\n                }\n            });\n            if(index < 0) { return false; }\n            if(!skipSlice) {\n                if(index == 0) {\n                    this.Categories.shift();\n                } else if(index == this.Categories.length - 1) {\n                    this.Categories.pop();\n                } else {\n                    this.Categories = this.Categories.slice(0,index).concat(this.Categories.slice(index+1));\n                }\n            }\n            category.removeByType(type);\n        }\n    }\n});\nCategoryManager.OfType = function (type) {\n    let c = new CategoryManager();\n    c.Type = type;\n    return c;\n}\n\nexport { Category, CategoryManager };\n","import { User } from '/imports/api/users/users.js';\nimport { Team } from '/imports/api/teams/teams.js';\nimport { Defaults } from '/imports/startup/both/defaults.js';\n\nconst myPostLogout = function(){\n    //example redirect after logout\n    FlowRouter.go('/signin');\n};\nconst mySubmitFunc = function(error, state){\n  if (!error) {\n    if (state === \"signIn\") {\n      // Successfully logged in\n      // ...\n    }\n    if (state === \"signUp\") {\n      // Successfully registered\n      // ...\n    }\n  }\n};\nfunction myPreSubmitFunc()  { console.log(\"Pre:  \", arguments); }\n\nfunction myPostSubmitFunc(userId, info) {\n    Accounts.emailTemplates.siteName = \"DeveloperLevel\";\n    Accounts.emailTemplates.from     = \"DeveloperLevel <wayne@paladinarcher.com>\";\n\n    Accounts.emailTemplates.verifyEmail = {\n        subject() {\n            return \"[DeveloperLevel] Verify your email address\";\n        },\n        text( user, url ) {\n            let emailAddress   = user.emails[0].address,\n                urlWithoutHash = url.replace( '#/', '' ),\n                supportEmail   = \"support@developerlevel.com\",\n                emailBody      = `To verify your email address (${emailAddress}) visit the following link:\\n\\n${urlWithoutHash}\\n\\n If you did not request this verification, please ignore this email.`;\n\n            return emailBody;\n        }\n    };\n    Accounts.sendVerificationEmail( userId );\n    console.log(\"Post: \", arguments);\n}\n\nAccountsTemplates.configure({\n    // Behavior\n    confirmPassword: true,\n    enablePasswordChange: true,\n    forbidClientAccountCreation: false,\n    overrideLoginErrors: true,\n    sendVerificationEmail: false,\n    lowercaseUsername: false,\n    focusFirstInput: true,\n\n    // Appearance\n    showAddRemoveServices: false,\n    showForgotPasswordLink: true,\n    showLabels: true,\n    showPlaceholders: true,\n    showResendVerificationEmailLink: false,\n\n    // Client-side Validation\n\n    continuousValidation: false,\n    negativeFeedback: false,\n    negativeValidation: true,\n    positiveValidation: true,\n    positiveFeedback: true,\n    showValidating: true,\n\n\n    // Privacy Policy and Terms of Use\n    privacyUrl: 'privacy',\n    termsUrl: 'terms-of-use',\n\n    // Redirects\n    homeRoutePath: '/',\n    redirectTimeout: 4000,\n\n    // Routing\n\n    defaultTemplate: 'Auth_page',\n    defaultLayout: 'App_body',\n    defaultContentRegion: 'main',\n    defaultLayoutRegions: {},\n\n    // Hooks\n    onLogoutHook: myPostLogout,\n    onSubmitHook: mySubmitFunc,\n    preSignUpHook: myPreSubmitFunc,\n    postSignUpHook: myPostSubmitFunc,\n\n    // Texts\n    texts: {\n      button: {\n          signUp: \"Register Now!\"\n      },\n      socialSignUp: \"Register\",\n      socialIcons: {\n          \"meteor-developer\": \"fa fa-rocket\"\n      },\n      title: {\n          forgotPwd: \"Recover Your Password\"\n      },\n      inputIcons: {\n          isValidating: \"fa fa-spinner fa-spin\",\n          hasSuccess: \"fa fa-check\",\n          hasError: \"fa fa-times\",\n      }\n    },\n});\n\n// Define these routes in a file loaded on both client and server\nAccountsTemplates.configureRoute('signIn', {\n  name: 'signin',\n  path: '/signin'\n});\nAccountsTemplates.configureRoute('signUp', {\n  name: 'join',\n  path: '/join'\n});\nAccountsTemplates.configureRoute('forgotPwd');\nAccountsTemplates.configureRoute('resetPwd', {\n  name: 'resetPwd',\n  path: '/reset-password'\n});\n\nAccountsTemplates.addFields([{\n    _id: \"first_name\",\n    type: \"text\",\n    required: true,\n    displayName: \"First Name\",\n    func: function(value) {\n        //if(Meteor.isClient) {\n            console.log(\"Firstname validation: \", value);\n\n        //}\n        return false;\n    }},{\n    _id: \"last_name\",\n    type: \"text\",\n    required: true,\n    displayName: \"Last Name\",\n    func: function(value) {\n        //if(Meteor.isClient) {\n            console.log(\"Lastname validation: \", value);\n\n        //}\n        return false;\n    }},{\n    _id: \"gender\",\n    type: \"select\",\n    required: true,\n    displayName: \"Gender\",\n    select: [\n        {\n            text: \"Male\",\n            value: \"male\",\n        },\n        {\n            text: \"Female\",\n            value: \"female\",\n        },\n    ],\n}]);\nif(Meteor.isServer) {\n    Accounts.onCreateUser((options, user) => {\n        user.slug = options.email;\n        user.updateAt = user.createdAt;\n        user.MyProfile = {\n            firstName: options.profile.first_name,\n            lastName: options.profile.last_name,\n            gender: (options.profile.gender === \"female\"),\n            UserType: {\n                Personality: {\n                    IE: {},\n                    NS: {},\n                    TF: {},\n                    JP: {}\n                },\n                AnsweredQuestions: []\n            },\n            birthDate: undefined,\n            age: undefined\n        };\n        user.teams = [ Team.Default.Name ];\n        user.roles = {};\n        user.profile = options.profile;\n        if(options.isAdmin && options.username === 'admin') {\n            user.roles[Roles.GLOBAL_GROUP] = ['admin'];\n            Roles.addUsersToRoles(user._id, 'admin', Roles.GLOBAL_GROUP);\n        } else {\n            let t = Team.findOne( {Name: Team.Default.Name} );\n            user.roles[Team.Default.Name] = ['member', Defaults.role.name];\n            t.addUsers( user._id );\n\t\t}\n        return user;\n    });\n    Accounts.validateNewUser(function (user) {\n        var loggedInUser;\n        try { loggedInUser = Meteor.user(); }\n        catch(ex) {\n            console.log(ex);\n        }\n\n        if (!loggedInUser || Roles.userIsInRole(loggedInUser, ['admin','manage-users'], Roles.GLOBAL_GROUP)) {\n          // NOTE: This example assumes the user is not using groups.\n          return true;\n        }\n\n        throw new Meteor.Error(403, \"Not authorized to create new users\");\n    });\n}\n","const Defaults = {\n\t'user': {\n\t\t'username': 'admin',\n\t\t'email': 'admin@mydomain.com',\n\t\t'isAdmin': true,\n\t\t'profile': {\n\t\t\t'first_name': 'Admin',\n\t\t\t'last_name': 'Admin',\n\t\t\t'gender': 'female'\n\t\t}\n\t},\n\t'team': {\n\t\t'Name': \"No Team\",\n\t\t'Public': true,\n\t\t'Members': [],\n\t\t'Active': true,\n\t},\n\t'role': {\n\t\t'name': 'No-Permissions'\n\t}\n}\n\nexport { Defaults };","// Import modules used by both client and server through a single index entry point\n// e.g. useraccounts configuration file.\nif(Meteor.isClient) { Session.setDefault('refreshQuestions', Math.random()); }\nimport './at_config.js';","const SrvDefaults = {\n    'user': {\n        'password': 'admin'\n    },\n    'uploadPath': '/uploads/'\n}\n\nexport { SrvDefaults };\n","// Fill the DB with example data on startup\n\nimport { Meteor } from 'meteor/meteor';\nimport { Question, MyersBriggsCategory } from '../../api/questions/questions.js';\nimport { User } from '../../api/users/users.js';\nimport { Team } from '../../api/teams/teams.js';\nimport { Mongo } from 'meteor/mongo';\nimport { Defaults } from '../both/defaults.js';\nimport { SrvDefaults } from './defaults.js';\nimport { TypeReading, ReadingRange, TypeReadingCategory } from '../../api/type_readings/type_readings.js';\n\nMeteor.startup(() => {\n    var defaultUserId;\n    if(Meteor.users.find().count() < 1) {\n        defaultUserId = Accounts.createUser({\n            username: Defaults.user.username,\n            email: Defaults.user.email,\n            password: SrvDefaults.user.password,\n            isAdmin: Defaults.user.isAdmin,\n            profile: Defaults.user.profile,\n            teams: [Team.Default.Name]\n        });\n        let t = Team.findOne( {Name: Team.Default.Name} );\n        t.CreatedBy = userId;\n        t.save();\n    }\n\n    //add all existing members to the default team\n    let teamUserIdList = [];\n    User.find( {} ).forEach( (u) => {\n        teamUserIdList.push(u._id);\n        Roles.addUsersToRoles(u._id, 'member', Team.Default.Name);\n        if (Roles.userIsInRole(u._id, 'admin', Roles.GLOBAL_GROUP)) {\n            Roles.addUsersToRoles(u._id, 'admin', Team.Default.Name);\n        } else {\n            Roles.addUsersToRoles(u._id, Defaults.role.name, Team.Default.Name);\n        }\n    });\n    //Team.Default.Members = Team.Default.Members.concat(teamUserIdList);\n    Team.Default.Members = teamUserIdList;\n    Team.Default.save();\n\n    let existingRoleNames = [];\n    Roles.getAllRoles().forEach(function (r) {\n        existingRoleNames.push(r.name);\n    });\n    let possibleRoles = [\"admin\",\"view-goals\",\"view-members\",\"member\",\"mentor\",\"assigned\",\"manage-users\",\"learn-share-host\",\"developer\"];\n    for (let i in possibleRoles) {\n        if (existingRoleNames.indexOf(possibleRoles[i]) === -1) {\n            Roles.createRole(possibleRoles[i]);\n        }\n    }\n\n    // Adding this so that it will auto fix type readings inserted the wrong way. We can remove this once no one has them.\n    const RawReadings = TypeReading.getCollection();\n    var wrongReadings = RawReadings.find({ \"MyersBriggsCategory\" : { $exists : true } });\n    wrongReadings.forEach((reading) => {\n        var newType = new TypeReadingCategory({ MyersBriggsCategory: reading.MyersBriggsCategory, Range: reading.Range });\n        delete reading.MyersBriggsCategory;\n        delete reading.Range;\n        delete reading.TypeReadingCategories;\n        RawReadings.update({ _id: reading._id }, { $unset: { MyersBriggsCategory: \"\", Range: \"\" } });\n        var newReading = new TypeReading(reading);\n        newReading._isNew = false;\n        newReading.addTypeCategory(newType);\n        console.log(newReading);\n        newReading.getModified();\n        newReading.save();\n    });\n\n    //convert questions with single category to array of categories\n    let qs = Question.find( {Categories: {$exists: false}} );\n    if (qs) {\n        qs.forEach(function (q) {\n            q.Categories = [q.Category];\n            q.save();\n        });\n    }\n\n    var fs = Npm.require('fs');\n    var uploadPath = SrvDefaults.uploadPath;\n    try {\n        if (!fs.existsSync(uploadPath)) {\n            fs.mkdirSync(uploadPath);\n        }\n    } catch (e) {\n        console.log(e);\n    }\n\tWebApp.connectHandlers.use('/learnShareRecording', (req, res, next) => {\n\t\tlet fileName = req.url.split('/')[1];\n\n        if (fs.existsSync(uploadPath+fileName)) {\n    \t\tres.writeHead(200, { 'Content-Type': 'video/mp4' });\n\n            fs.readFile(uploadPath+fileName, (err, data) => {\n                if (err) {\n                    console.log(err);\n                } else {\n                    res.write(data);\n                    res.end();\n                }\n            });\n\n        } else {\n            console.log(\"file does not exist\");\n            res.writeHead(404);\n            res.write('404 not found');\n            res.end();\n        }\n\t});\n});\n","// Import server startup through a single index entry point\n\nimport '../both/defaults.js';\nimport './defaults.js';\nimport './fixtures.js';\nimport './register-api.js';\n","// Register your apis here\n\nimport '../../api/questions/methods.js';\nimport '../../api/questions/server/publications.js';\nimport '../../api/users/methods.js';\nimport '../../api/users/server/publications.js';\nimport '../../api/type_readings/methods.js';\nimport '../../api/type_readings/server/publications.js';\nimport '../../api/teams/methods.js';\nimport '../../api/teams/server/publications.js';\nimport '../../api/team_goals/server/publications.js';\nimport '../../api/team_goals/methods.js';\nimport '../../api/individual_goals/server/publications.js';\nimport '../../api/individual_goals/methods.js';\nimport '../../api/learn_share/server/publications.js';\nimport '../../api/learn_share/methods.js';\nimport '../../api/roles/server/publications.js';\nimport '../../api/user_segments/server/publications.js';\nimport '../../api/user_segments/methods.js';\nimport '../../api/user_feedback/server/publications.js';\nimport '../../api/user_feedback/methods.js';\nimport '../../api/user_notify/server/publications.js';\n","// Server entry point, imports all server code\n\nimport '/imports/startup/both';\nimport '/imports/startup/server';\n"]}}]