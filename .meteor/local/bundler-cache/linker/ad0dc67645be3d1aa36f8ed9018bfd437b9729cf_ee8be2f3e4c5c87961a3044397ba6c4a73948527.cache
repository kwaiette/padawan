[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar DDP = Package['ddp-client'].DDP;\nvar Mongo = Package.mongo.Mongo;\nvar check = Package.check.check;\nvar Match = Package.check.Match;\nvar LocalCollection = Package.minimongo.LocalCollection;\nvar Minimongo = Package.minimongo.Minimongo;\nvar EJSON = Package.ejson.EJSON;\nvar ValidationError = Package['mdg:validation-error'].ValidationError;\nvar meteorInstall = Package.modules.meteorInstall;\nvar meteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nvar Promise = Package.promise.Promise;\nvar Symbol = Package['ecmascript-runtime-client'].Symbol;\nvar Map = Package['ecmascript-runtime-client'].Map;\nvar Set = Package['ecmascript-runtime-client'].Set;\n\nvar require = meteorInstall({\"node_modules\":{\"meteor\":{\"jagi:astronomy\":{\"lib\":{\"main.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/main.js                                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar module1 = module;\nmodule1.export({\n  Astro: function () {\n    return Astro;\n  },\n  Module: function () {\n    return Module;\n  },\n  Class: function () {\n    return Class;\n  },\n  Enum: function () {\n    return Enum;\n  },\n  Union: function () {\n    return Union;\n  },\n  Type: function () {\n    return Type;\n  },\n  Field: function () {\n    return Field;\n  },\n  ScalarField: function () {\n    return ScalarField;\n  },\n  ObjectField: function () {\n    return ObjectField;\n  },\n  ListField: function () {\n    return ListField;\n  },\n  Behavior: function () {\n    return Behavior;\n  },\n  Validator: function () {\n    return Validator;\n  },\n  Validators: function () {\n    return Validators;\n  },\n  ValidationError: function () {\n    return ValidationError;\n  },\n  Event: function () {\n    return Event;\n  },\n  reservedKeywords: function () {\n    return reservedKeywords;\n  }\n});\nmodule1.watch(require(\"./core/ejson.js\"));\nmodule1.watch(require(\"./modules/core/module.js\"));\nmodule1.watch(require(\"./modules/storage/module.js\"));\nmodule1.watch(require(\"./modules/behaviors/module.js\"));\nmodule1.watch(require(\"./modules/events/module.js\"));\nmodule1.watch(require(\"./modules/methods/module.js\"));\nmodule1.watch(require(\"./modules/helpers/module.js\"));\nmodule1.watch(require(\"./modules/fields/module.js\"));\nmodule1.watch(require(\"./modules/indexes/module.js\"));\nmodule1.watch(require(\"./modules/validators/module.js\"));\nvar Config;\nmodule1.watch(require(\"./core/config.js\"), {\n  \"default\": function (v) {\n    Config = v;\n  }\n}, 0);\nvar Module;\nmodule1.watch(require(\"./core/module.js\"), {\n  \"default\": function (v) {\n    Module = v;\n  }\n}, 1);\nvar Class;\nmodule1.watch(require(\"./core/class.js\"), {\n  \"default\": function (v) {\n    Class = v;\n  }\n}, 2);\nvar reservedKeywords;\nmodule1.watch(require(\"./core/reserved_keywords.js\"), {\n  \"default\": function (v) {\n    reservedKeywords = v;\n  }\n}, 3);\nvar Enum;\nmodule1.watch(require(\"./modules/fields/Enum.js\"), {\n  \"default\": function (v) {\n    Enum = v;\n  }\n}, 4);\nvar Union;\nmodule1.watch(require(\"./modules/fields/Union.js\"), {\n  \"default\": function (v) {\n    Union = v;\n  }\n}, 5);\nvar Type;\nmodule1.watch(require(\"./modules/fields/type.js\"), {\n  \"default\": function (v) {\n    Type = v;\n  }\n}, 6);\nvar Field;\nmodule1.watch(require(\"./modules/fields/Field\"), {\n  \"default\": function (v) {\n    Field = v;\n  }\n}, 7);\nvar ScalarField;\nmodule1.watch(require(\"./modules/fields/ScalarField\"), {\n  \"default\": function (v) {\n    ScalarField = v;\n  }\n}, 8);\nvar ObjectField;\nmodule1.watch(require(\"./modules/fields/ObjectField\"), {\n  \"default\": function (v) {\n    ObjectField = v;\n  }\n}, 9);\nvar ListField;\nmodule1.watch(require(\"./modules/fields/ListField\"), {\n  \"default\": function (v) {\n    ListField = v;\n  }\n}, 10);\nvar Behavior;\nmodule1.watch(require(\"./modules/behaviors/behavior.js\"), {\n  \"default\": function (v) {\n    Behavior = v;\n  }\n}, 11);\nvar Validator;\nmodule1.watch(require(\"./modules/validators/validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 12);\nvar Validators;\nmodule1.watch(require(\"./modules/validators/validators.js\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 13);\nvar ValidationError;\nmodule1.watch(require(\"meteor/mdg:validation-error\"), {\n  ValidationError: function (v) {\n    ValidationError = v;\n  }\n}, 14);\nvar Event;\nmodule1.watch(require(\"./modules/events/event.js\"), {\n  \"default\": function (v) {\n    Event = v;\n  }\n}, 15);\nvar Astro = {\n  config: Config,\n  Config: Config,\n  Module: Module,\n  Class: Class,\n  Enum: Enum,\n  Union: Union,\n  Type: Type,\n  Field: Field,\n  ScalarField: ScalarField,\n  ObjectField: ObjectField,\n  ListField: ListField,\n  Behavior: Behavior,\n  Validator: Validator,\n  Validators: Validators,\n  ValidationError: ValidationError,\n  Event: Event,\n  reservedKeywords: reservedKeywords\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"core\":{\"class.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/core/class.js                                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar module1 = module;\n\nvar _concat;\n\nmodule1.watch(require(\"lodash/concat\"), {\n  \"default\": function (v) {\n    _concat = v;\n  }\n}, 0);\n\nvar _defaults;\n\nmodule1.watch(require(\"lodash/defaults\"), {\n  \"default\": function (v) {\n    _defaults = v;\n  }\n}, 1);\n\nvar _each;\n\nmodule1.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 2);\n\nvar _has;\n\nmodule1.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 3);\n\nvar _includes;\n\nmodule1.watch(require(\"lodash/includes\"), {\n  \"default\": function (v) {\n    _includes = v;\n  }\n}, 4);\n\nvar _intersection;\n\nmodule1.watch(require(\"lodash/intersection\"), {\n  \"default\": function (v) {\n    _intersection = v;\n  }\n}, 5);\n\nvar _isNumber;\n\nmodule1.watch(require(\"lodash/isNumber\"), {\n  \"default\": function (v) {\n    _isNumber = v;\n  }\n}, 6);\nvar EJSON;\nmodule1.watch(require(\"meteor/ejson\"), {\n  EJSON: function (v) {\n    EJSON = v;\n  }\n}, 7);\nvar config;\nmodule1.watch(require(\"./config\"), {\n  \"default\": function (v) {\n    config = v;\n  }\n}, 8);\nvar throwParseError;\nmodule1.watch(require(\"../modules/core/utils/throw_parse_error\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 9);\nvar cloneDefinition;\nmodule1.watch(require(\"../modules/core/utils/cloneDefinition\"), {\n  \"default\": function (v) {\n    cloneDefinition = v;\n  }\n}, 10);\nvar castNested;\nmodule1.watch(require(\"../modules/fields/utils/castNested\"), {\n  \"default\": function (v) {\n    castNested = v;\n  }\n}, 11);\nvar Module;\nmodule1.watch(require(\"./module\"), {\n  \"default\": function (v) {\n    Module = v;\n  }\n}, 12);\nvar Event;\nmodule1.watch(require(\"../modules/events/event\"), {\n  \"default\": function (v) {\n    Event = v;\n  }\n}, 13);\nvar Type;\nmodule1.watch(require(\"../modules/fields/type\"), {\n  \"default\": function (v) {\n    Type = v;\n  }\n}, 14);\nvar Validators;\nmodule1.watch(require(\"../modules/validators/validators\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 15);\nvar warn;\nmodule1.watch(require(\"../modules/core/utils/warn\"), {\n  \"default\": function (v) {\n    warn = v;\n  }\n}, 16);\n\nvar initClass = function (Class) {\n  // Create and store the schema \"definition\" object in the class constructor.\n  // It's a combination of all parent definitions and a definition that\n  // created this class. It's used to create child classes.\n  Class.definition = {}; // Create and store the \"schema\" object in the class constructor. It's an\n  // object that contains all the data related with a given class. The\n  // \"schema\" object contains \"computed\" data of the schema \"definition\".\n  // Thanks to that, Astronomy does not need to compute data on the fly and\n  // everything works faster.\n\n  Class.schema = {}; // Create empty array for storing child classes.\n\n  Class.children = []; // Init the class schema and schema definition.\n\n  Module.forEach(function (module) {\n    module.onInitSchema(Class.schema, Class.getName());\n    module.onInitDefinition(Class.definition, Class.getName());\n  }); // We have to call the \"onInitClass\" hooks in the separate loop after\n  // initiation of the schema and schema definition, because some\n  // \"onInitClass\" hooks can execute the \"Class.extend\" method which requires\n  // schema and schama definition to be initalized.\n\n  Module.forEach(function (module) {\n    module.onInitClass(Class, Class.getName());\n  });\n};\n\nvar Class =\n/*#__PURE__*/\nfunction () {\n  function Class() {\n    var rawDoc = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    // Set default options.\n    _defaults(options, {\n      // From version 2.3.0, we can turn off setting default values on fetching\n      // so it will not populate fields that were excluded on find.\n      defaults: config.defaults,\n      // We clone values on document construction, but this option is overridden\n      // in the \"find\" method and set to false, so it does not unnecessary clone\n      // clone raw values.\n      clone: true,\n      cast: false\n    });\n\n    var doc = this;\n    var _Class = doc.constructor;\n\n    if (!_Class.getName()) {\n      throw new Error('Can not create instance of the \"Class\" class');\n    } // If there is the \"_isNew\" property passed to the class constructor, the\n    // we use it to determine if a document is stored in collection. Otherwise\n    // document is a new one.\n\n\n    if (_Class.getCollection()) {\n      doc._isNew = _has(rawDoc, \"_isNew\") ? rawDoc._isNew : true;\n    } // Trigger the \"beforeInit\" event handlers.\n\n\n    doc.dispatchEvent(new Event(\"beforeInit\")); // Set values in a document.\n\n    _each(_Class.getFieldsNames(), function (fieldName) {\n      doc.set(fieldName, rawDoc[fieldName], options);\n    }); // Trigger the \"afterInit\" event handlers.\n\n\n    doc.dispatchEvent(new Event(\"afterInit\"));\n  } // Method needed for EJSONification.\n\n\n  var _proto = Class.prototype;\n\n  _proto.typeName = function () {\n    function typeName() {\n      return \"Astronomy\";\n    }\n\n    return typeName;\n  }();\n\n  _proto.toJSONValue = function () {\n    function toJSONValue(args) {\n      var doc = this;\n      var Class = doc.constructor;\n      var json = {\n        \"class\": Class.getName()\n      }; // Trigger the \"toJSONValue\" event handlers.\n\n      doc.dispatchEvent(new Event(\"toJSONValue\", {\n        json: json\n      }));\n      return json;\n    }\n\n    return toJSONValue;\n  }();\n\n  Class.getName = function () {\n    function getName() {\n      return this.className;\n    }\n\n    return getName;\n  }();\n\n  Class.getParent = function () {\n    function getParent() {\n      if (this.parentClassName) {\n        return this.get(this.parentClassName);\n      }\n    }\n\n    return getParent;\n  }();\n  /**\n   * @param {(Number|Boolean)} depth - The depth to which look for children, or \"true\" to get all children.\n   */\n\n\n  Class.getChildren = function () {\n    function getChildren() {\n      var depth = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      var classes = [];\n\n      if (!depth) {\n        return classes;\n      }\n\n      classes.push.apply(classes, (0, _toConsumableArray2.default)(this.children));\n\n      if (_isNumber(depth)) {\n        depth--;\n      }\n\n      _each(this.children, function (Child) {\n        classes.push.apply(classes, (0, _toConsumableArray2.default)(Child.getChildren(depth)));\n      });\n\n      return classes;\n    }\n\n    return getChildren;\n  }();\n\n  Class.create = function () {\n    function create(definition) {\n      // Get class name.\n      var className = definition.name; // Warn about class duplicate.\n\n      if (_has(this.classes, className)) {\n        warn(\"Duplicate of the \\\"\" + className + \"\\\" class\");\n      } // Extend the Class class.\n\n\n      var Class = this.classes[className] =\n      /*#__PURE__*/\n      function (_this) {\n        (0, _inheritsLoose2.default)(Class, _this);\n\n        function Class() {\n          return _this.apply(this, arguments) || this;\n        }\n\n        return Class;\n      }(this); // Store the class name in the constructor.\n\n\n      Class.className = className; // Initialize class.\n\n      initClass(Class); // Extend class with a definition.\n\n      Class.extend(definition); // Register a new type.\n\n      Type.create({\n        name: className,\n        \"class\": Class,\n        validate: function (args) {\n          // Add current class as a param of validator.\n          args.param = Class;\n          Validators.class(args);\n        }\n      });\n      return Class;\n    }\n\n    return create;\n  }();\n\n  Class.inherit = function () {\n    function inherit(definition) {\n      var Parent = this;\n      var className = definition.name; // Warn about class duplicate.\n\n      if (_has(this.classes, className)) {\n        warn(\"Duplicate of the \\\"\" + className + \"\\\" class\");\n      } // Extend the parent class.\n\n\n      var Class = this.classes[className] =\n      /*#__PURE__*/\n      function (_Parent) {\n        (0, _inheritsLoose2.default)(Class, _Parent);\n\n        function Class() {\n          return _Parent.apply(this, arguments) || this;\n        }\n\n        return Class;\n      }(Parent); // Store the class name in the constructor.\n\n\n      Class.className = className; // Store the parent class name in the constructor.\n\n      Class.parentClassName = Parent.getName(); // Initialize class.\n\n      initClass(Class); // Store child class in the parent class.\n\n      Parent.children.push(Class); // Extend class with the parent class definition.\n\n      Class.extend(Parent.definition); // Extend class with the definition.\n\n      Class.extend(definition); // Register a new type.\n\n      Type.create({\n        name: className,\n        \"class\": Class,\n        validate: function (args) {\n          // Add current class as a param of validator.\n          args.param = Class;\n          Validators.class(args);\n        }\n      });\n      return Class;\n    }\n\n    return inherit;\n  }();\n\n  Class.extend = function () {\n    function extend(extendDefinition) {\n      var _this2 = this;\n\n      var onlyModules = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n      if (typeof onlyModules === \"string\") {\n        onlyModules = [onlyModules];\n      }\n\n      if (!Match.test(onlyModules, [String])) {\n        throwParseError([{\n          \"class\": this.getName()\n        }, {\n          method: \"extend\"\n        }, \"The second argument has to be a string or an array of strings\"]);\n      } // Clone definition to not modify the original one.\n\n\n      extendDefinition = cloneDefinition(extendDefinition);\n      Module.forEach(function (module) {\n        // If the second argument was passed, then we only run module hooks for\n        // modules that were listed in the second argument.\n        if (onlyModules.length > 0 && !_includes(onlyModules, module.name) && _intersection(onlyModules, module.aliases).length === 0) {\n          return;\n        } // Initialize parsed definition.\n\n\n        var parsedDefinition = {};\n        module.onInitDefinition(parsedDefinition, Class.getName()); // Parse the extending definition and put parsed properties in the parsed\n        // definition.\n\n        module.onParseDefinition(parsedDefinition, extendDefinition, _this2.getName()); // Apply parsed definition.\n\n        module.onApplyDefinition(_this2, parsedDefinition, _this2.getName()); // Merge parsed definition with a class definition.\n\n        module.onMergeDefinitions(_this2.definition, parsedDefinition, _this2.getName()); // Finalize class creation.\n\n        module.onFinalizeClass(_this2, _this2.getName());\n      }); // Extend children.\n\n      var children = this.getChildren();\n\n      _each(children, function (ChildClass) {\n        ChildClass.extend(extendDefinition, onlyModules);\n      });\n    }\n\n    return extend;\n  }();\n\n  Class.get = function () {\n    function get(className) {\n      return this.classes[className];\n    }\n\n    return get;\n  }();\n\n  Class.has = function () {\n    function has(className) {\n      return _has(this.classes, className);\n    }\n\n    return has;\n  }();\n\n  Class.includes = function () {\n    function includes(Class) {\n      return _includes(this.classes, Class);\n    }\n\n    return includes;\n  }();\n\n  Class.isParentOf = function () {\n    function isParentOf(Class) {\n      if (!Class || !Class.prototype) {\n        return false;\n      }\n\n      return this.prototype.isPrototypeOf(Class.prototype);\n    }\n\n    return isParentOf;\n  }();\n\n  Class.isChildOf = function () {\n    function isChildOf(Class) {\n      if (!Class || !Class.prototype) {\n        return false;\n      }\n\n      return Class.prototype.isPrototypeOf(this.prototype);\n    }\n\n    return isChildOf;\n  }();\n\n  Class.isNew = function () {\n    function isNew(doc, _isNew) {\n      if (arguments.length === 2) {\n        doc._isNew = _isNew;\n      } else {\n        return doc._isNew;\n      }\n    }\n\n    return isNew;\n  }();\n\n  return Class;\n}();\n\nClass.classes = {};\nmodule1.exportDefault(Class);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"config.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/core/config.js                                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Config = {\n  verbose: true,\n  resolving: true,\n  defaults: true\n};\nmodule.exportDefault(Config);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ejson.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/core/ejson.js                                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar AstroClass;\nmodule.watch(require(\"./class.js\"), {\n  \"default\": function (v) {\n    AstroClass = v;\n  }\n}, 0);\nvar Event;\nmodule.watch(require(\"../modules/events/event.js\"), {\n  \"default\": function (v) {\n    Event = v;\n  }\n}, 1);\nEJSON.addType('Astronomy', function (json) {\n  var Class = AstroClass.get(json.class);\n  var doc = new Class(); // Trigger the \"fromJSONValue\" event handlers.\n\n  doc.dispatchEvent(new Event('fromJSONValue', {\n    json: json\n  }));\n  return doc;\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"module.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/core/module.js                                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar module1 = module;\n\nvar _each;\n\nmodule1.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\nvar throwParseError;\nmodule1.watch(require(\"../modules/core/utils/throw_parse_error.js\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 1);\n\nvar Module =\n/*#__PURE__*/\nfunction () {\n  function Module(definition) {\n    var _this = this;\n\n    if (!Match.test(definition, Object)) {\n      throwParseError(['Module definition has to be an object']);\n    } // Set module name.\n\n\n    if (!Match.test(definition.name, String)) {\n      throwParseError(['Module name has to be a string']);\n    }\n\n    this.name = definition.name; // Set module aliases.\n\n    if (!Match.test(definition.aliases, Match.Maybe([String]))) {\n      throwParseError([\"Module aliases has to be an array of strings in the \\\"\" + this.name + \"\\\" module\"]);\n    }\n\n    this.aliases = definition.aliases; // Set module hooks.\n\n    _each(['onInitSchema', 'onInitDefinition', 'onInitClass', 'onParseDefinition', 'onApplyDefinition', 'onMergeDefinitions', 'onFinalizeClass'], function (hookName) {\n      if (definition[hookName] === undefined) {\n        return;\n      }\n\n      if (!Match.test(definition[hookName], Function)) {\n        throwParseError([{\n          'module': _this.name\n        }, {\n          'property': hookName\n        }, \"The \\\"\" + hookName + \"\\\" hook has to be a function\"]);\n      }\n\n      _this[hookName] = definition[hookName];\n    }); // Set module utils.\n\n\n    if (definition.utils) {\n      if (!Match.test(definition.utils, Object)) {\n        throwParseError([{\n          'module': this.name\n        }, {\n          'property': 'utils'\n        }, 'Utilities definition has to be an object']);\n      }\n\n      this.utils = {};\n\n      _each(definition.utils, function (method, methodName) {\n        if (!Match.test(method, Function)) {\n          throwParseError([{\n            'module': _this.name\n          }, {\n            'property': 'utils'\n          }, {\n            'method': methodName\n          }, 'Utility has to be a function']);\n        }\n\n        _this.utils[methodName] = method;\n      });\n    }\n  }\n\n  var _proto = Module.prototype;\n\n  _proto.onInitSchema = function () {\n    function onInitSchema(schema, className) {}\n\n    return onInitSchema;\n  }();\n\n  _proto.onInitDefinition = function () {\n    function onInitDefinition(definition, className) {}\n\n    return onInitDefinition;\n  }();\n\n  _proto.onInitClass = function () {\n    function onInitClass(Class, className) {}\n\n    return onInitClass;\n  }();\n\n  _proto.onParseDefinition = function () {\n    function onParseDefinition(parsedDefinition, definition, className) {}\n\n    return onParseDefinition;\n  }();\n\n  _proto.onApplyDefinition = function () {\n    function onApplyDefinition(Class, definition, className) {}\n\n    return onApplyDefinition;\n  }();\n\n  _proto.onMergeDefinitions = function () {\n    function onMergeDefinitions(targetDefinition, sourceDefinition, className) {}\n\n    return onMergeDefinitions;\n  }();\n\n  _proto.onFinalizeClass = function () {\n    function onFinalizeClass(Class, className) {}\n\n    return onFinalizeClass;\n  }();\n\n  Module.create = function () {\n    function create(definition) {\n      var module = new this(definition);\n      this.modules[module.name] = module;\n      this.modulesOrder.push(module.name);\n      return module;\n    }\n\n    return create;\n  }();\n\n  Module.get = function () {\n    function get(moduleName) {\n      return this.modules[moduleName];\n    }\n\n    return get;\n  }();\n\n  Module.forEach = function () {\n    function forEach(iteratee) {\n      var _this2 = this;\n\n      if (!Match.test(iteratee, Function)) {\n        throwParseError(['The first argument of the \"Module.forEach\" method has to be a function']);\n      }\n\n      _each(this.modulesOrder, function (moduleName) {\n        iteratee(_this2.modules[moduleName]);\n      });\n    }\n\n    return forEach;\n  }();\n\n  return Module;\n}();\n\n;\nModule.modules = {};\nModule.modulesOrder = [];\nmodule1.exportDefault(Module);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reserved_keywords.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/core/reserved_keywords.js                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar reservedNames = ['_isNew', 'copy', 'dispatchEvent', 'get', 'getModified', 'getModifiedValues', 'getModifier', 'isModified', 'raw', 'reload', 'remove', 'save', 'set', 'toJSONValue', 'typeName', 'validate', 'validateAll'];\nmodule.exportDefault(reservedNames);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"modules\":{\"behaviors\":{\"behavior.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/behaviors/behavior.js                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 0);\n\nvar _extend;\n\nmodule.watch(require(\"lodash/extend\"), {\n  \"default\": function (v) {\n    _extend = v;\n  }\n}, 1);\nvar throwParseError;\nmodule.watch(require(\"../core/utils/throw_parse_error.js\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 2);\n\nvar checkDefinition = function (definition) {\n  // Check parameters validity.\n  if (!Match.test(definition, Object)) {\n    throwParseError(['Behavior definition has to be an object']);\n  } // Check if behavior name is provided and is a string.\n\n\n  if (!Match.test(definition.name, String)) {\n    throwParseError(['Behavior has to be named']);\n  } // Check if behavior with a given name already exists.\n\n\n  if (_has(Behavior.behaviors, definition.name)) {\n    throwParseError([{\n      'behavior': definition.name\n    }, 'Behavior already exists']);\n  }\n};\n\nvar Behavior =\n/*#__PURE__*/\nfunction () {\n  function Behavior(options) {\n    this.options = _extend({}, this.options, options);\n  }\n\n  var _proto = Behavior.prototype;\n\n  _proto.createClassDefinition = function () {\n    function createClassDefinition() {}\n\n    return createClassDefinition;\n  }();\n\n  _proto.apply = function () {\n    function apply(Class) {\n      var definition = this.createClassDefinition();\n\n      if (definition) {\n        Class.extend(definition);\n      }\n    }\n\n    return apply;\n  }();\n\n  Behavior.create = function () {\n    function create(definition) {\n      checkDefinition(definition); // Get behavior name.\n\n      var behaviorName = definition.name; // Extend the Behavior class.\n\n      var Behavior = this.behaviors[behaviorName] =\n      /*#__PURE__*/\n      function (_this) {\n        (0, _inheritsLoose2.default)(Behavior, _this);\n\n        function Behavior() {\n          return _this.apply(this, arguments) || this;\n        }\n\n        return Behavior;\n      }(this); // Store definition in behavior class.\n\n\n      Behavior.definition = definition; // Extend prototype with a definition.\n\n      _extend(Behavior.prototype, definition);\n\n      return Behavior;\n    }\n\n    return create;\n  }();\n\n  Behavior.get = function () {\n    function get(behaviorName) {\n      return this.behaviors[behaviorName];\n    }\n\n    return get;\n  }();\n\n  Behavior.has = function () {\n    function has(behaviorName) {\n      return _has(this.behaviors, behaviorName);\n    }\n\n    return has;\n  }();\n\n  return Behavior;\n}();\n\n;\nBehavior.behaviors = {};\nmodule.exportDefault(Behavior);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"module.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/behaviors/module.js                                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar module1 = module;\nvar Module;\nmodule1.watch(require(\"../../core/module.js\"), {\n  \"default\": function (v) {\n    Module = v;\n  }\n}, 0);\nvar onInitSchema;\nmodule1.watch(require(\"./hooks/init_schema.js\"), {\n  \"default\": function (v) {\n    onInitSchema = v;\n  }\n}, 1);\nvar onInitDefinition;\nmodule1.watch(require(\"./hooks/init_definition.js\"), {\n  \"default\": function (v) {\n    onInitDefinition = v;\n  }\n}, 2);\nvar onParseDefinition;\nmodule1.watch(require(\"./hooks/parse_definition.js\"), {\n  \"default\": function (v) {\n    onParseDefinition = v;\n  }\n}, 3);\nvar onMergeDefinitions;\nmodule1.watch(require(\"./hooks/merge_definitions.js\"), {\n  \"default\": function (v) {\n    onMergeDefinitions = v;\n  }\n}, 4);\nvar onApplyDefinition;\nmodule1.watch(require(\"./hooks/apply_definition.js\"), {\n  \"default\": function (v) {\n    onApplyDefinition = v;\n  }\n}, 5);\nvar onInitClass;\nmodule1.watch(require(\"./hooks/init_class.js\"), {\n  \"default\": function (v) {\n    onInitClass = v;\n  }\n}, 6);\nModule.create({\n  name: 'behaviors',\n  onInitSchema: onInitSchema,\n  onInitDefinition: onInitDefinition,\n  onParseDefinition: onParseDefinition,\n  onMergeDefinitions: onMergeDefinitions,\n  onApplyDefinition: onApplyDefinition,\n  onInitClass: onInitClass\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"class_static_methods\":{\"get_behavior.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/behaviors/class_static_methods/get_behavior.js                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction getBehavior(behaviorName) {\n  return this.schema.behaviors[behaviorName];\n}\n\n;\nmodule.exportDefault(getBehavior);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"get_behaviors.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/behaviors/class_static_methods/get_behaviors.js                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction getBehaviors() {\n  return this.schema.behaviors;\n}\n\n;\nmodule.exportDefault(getBehaviors);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"has_behavior.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/behaviors/class_static_methods/has_behavior.js                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 0);\n\nfunction hasBehavior(behaviorName) {\n  return _has(this.schema.behaviors, behaviorName);\n}\n\n;\nmodule.exportDefault(hasBehavior);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"hooks\":{\"apply_definition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/behaviors/hooks/apply_definition.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\nvar Behavior;\nmodule.watch(require(\"../behavior.js\"), {\n  \"default\": function (v) {\n    Behavior = v;\n  }\n}, 1);\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n  var schema = Class.schema; // Add behaviors to the class.\n\n  _each(parsedDefinition.behaviors, function (behaviorsOptions, behaviorName) {\n    // Get the behavior class.\n    var BehaviorClass = Behavior.get(behaviorName);\n\n    _each(behaviorsOptions, function (behaviorOptions) {\n      // Create the behavior instance passing behavior options.\n      var behavior = new BehaviorClass(behaviorOptions); // Add behavior to the schema.\n\n      schema.behaviors[behaviorName] = schema.behaviors[behaviorName] || [];\n      schema.behaviors[behaviorName].push(behavior); // Apply behavior to the class.\n\n      behavior.apply(Class);\n    });\n  });\n}\n\n;\nmodule.exportDefault(onApplyDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"init_class.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/behaviors/hooks/init_class.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getBehavior;\nmodule.watch(require(\"../class_static_methods/get_behavior.js\"), {\n  \"default\": function (v) {\n    getBehavior = v;\n  }\n}, 0);\nvar getBehaviors;\nmodule.watch(require(\"../class_static_methods/get_behaviors.js\"), {\n  \"default\": function (v) {\n    getBehaviors = v;\n  }\n}, 1);\nvar hasBehavior;\nmodule.watch(require(\"../class_static_methods/has_behavior.js\"), {\n  \"default\": function (v) {\n    hasBehavior = v;\n  }\n}, 2);\n\nfunction onInitClass(Class, className) {\n  Class.getBehavior = getBehavior;\n  Class.getBehaviors = getBehaviors;\n  Class.hasBehavior = hasBehavior;\n}\n\n;\nmodule.exportDefault(onInitClass);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"init_definition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/behaviors/hooks/init_definition.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction onInitDefinition(definition, className) {\n  definition.behaviors = {};\n}\n\n;\nmodule.exportDefault(onInitDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"init_schema.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/behaviors/hooks/init_schema.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction onInitSchema(schema, className) {\n  schema.behaviors = {};\n}\n\n;\nmodule.exportDefault(onInitSchema);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"merge_definitions.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/behaviors/hooks/merge_definitions.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nfunction onMergeDefinitions(targetDefinition, sourceDefinition, ClassName) {\n  _each(sourceDefinition.behaviors, function (behaviors, behaviorName) {\n    var _targetDefinition$beh;\n\n    targetDefinition.behaviors[behaviorName] = targetDefinition.behaviors[behaviorName] || [];\n\n    (_targetDefinition$beh = targetDefinition.behaviors[behaviorName]).push.apply(_targetDefinition$beh, (0, _toConsumableArray2.default)(behaviors));\n  });\n}\n\n;\nmodule.exportDefault(onMergeDefinitions);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"parse_definition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/behaviors/hooks/parse_definition.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\nvar throwParseError;\nmodule.watch(require(\"../../core/utils/throw_parse_error.js\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 1);\nvar Behavior;\nmodule.watch(require(\"../behavior.js\"), {\n  \"default\": function (v) {\n    Behavior = v;\n  }\n}, 2);\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  // Check existence of the \"behaviors\" property.\n  if (definition.behaviors !== undefined) {\n    if (!Match.test(definition.behaviors, Match.OneOf([String], Object))) {\n      throwParseError([{\n        'class': className\n      }, {\n        'property': 'behaviors'\n      }, \"Behaviors definition has to be an array of behaviors' names or an \" + \"object with behaviors' options\"]);\n    }\n\n    _each(definition.behaviors, function (behaviorOptions, behaviorName) {\n      // If we deal with an array of behaviors' names, then behavior options is\n      // an empty object.\n      if (typeof behaviorOptions === 'string') {\n        behaviorName = behaviorOptions;\n        behaviorOptions = [{}];\n      } // Check if behavior with a given name exists.\n\n\n      if (!Behavior.has(behaviorName)) {\n        throwParseError([{\n          'class': className\n        }, {\n          'behavior': behaviorName\n        }, 'Behavior does not exist']);\n      } // Behavior options has to be an object or an array of objects, when we\n      // are adding multiple behaviors of the same type.\n\n\n      if (!Match.test(behaviorOptions, Match.OneOf(Object, [Object]))) {\n        throwParseError([{\n          'class': className\n        }, {\n          'behavior': behaviorName\n        }, 'Behavior options have to be an object or an array of objects']);\n      } // Make sure that behavior options is an array of objects.\n\n\n      if (!Match.test(behaviorOptions, Array)) {\n        behaviorOptions = [behaviorOptions];\n      }\n\n      parsedDefinition.behaviors[behaviorName] = behaviorOptions;\n    });\n  }\n}\n\n;\nmodule.exportDefault(onParseDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"core\":{\"module.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/core/module.js                                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar module1 = module;\nvar Module;\nmodule1.watch(require(\"../../core/module.js\"), {\n  \"default\": function (v) {\n    Module = v;\n  }\n}, 0);\nvar cloneDefinition;\nmodule1.watch(require(\"./utils/cloneDefinition\"), {\n  \"default\": function (v) {\n    cloneDefinition = v;\n  }\n}, 1);\nvar deprecated;\nmodule1.watch(require(\"./utils/deprecated.js\"), {\n  \"default\": function (v) {\n    deprecated = v;\n  }\n}, 2);\nvar overrideMethod;\nmodule1.watch(require(\"./utils/override_method.js\"), {\n  \"default\": function (v) {\n    overrideMethod = v;\n  }\n}, 3);\nvar throwParseError;\nmodule1.watch(require(\"./utils/throw_parse_error.js\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 4);\nvar warn;\nmodule1.watch(require(\"./utils/warn.js\"), {\n  \"default\": function (v) {\n    warn = v;\n  }\n}, 5);\nModule.create({\n  name: 'core',\n  utils: {\n    cloneDefinition: cloneDefinition,\n    deprecated: deprecated,\n    overrideMethod: overrideMethod,\n    throwParseError: throwParseError,\n    warn: warn\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"utils\":{\"cloneDefinition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/core/utils/cloneDefinition.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _cloneDeepWith;\n\nmodule.watch(require(\"lodash/cloneDeepWith\"), {\n  \"default\": function (v) {\n    _cloneDeepWith = v;\n  }\n}, 0);\n\nvar _isPlainObject;\n\nmodule.watch(require(\"lodash/isPlainObject\"), {\n  \"default\": function (v) {\n    _isPlainObject = v;\n  }\n}, 1);\n\nvar _isArray;\n\nmodule.watch(require(\"lodash/isArray\"), {\n  \"default\": function (v) {\n    _isArray = v;\n  }\n}, 2);\n\nfunction cloneDefinition(definition) {\n  return _cloneDeepWith(definition, function (value) {\n    if (!_isPlainObject(value) && !_isArray(value)) {\n      return value;\n    }\n  });\n}\n\nmodule.exportDefault(cloneDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"deprecated.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/core/utils/deprecated.js                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar config;\nmodule.watch(require(\"../../../core/config\"), {\n  \"default\": function (v) {\n    config = v;\n  }\n}, 0);\nvar warn;\nmodule.watch(require(\"./warn\"), {\n  \"default\": function (v) {\n    warn = v;\n  }\n}, 1);\n\nfunction deprecated(message) {\n  // Be silent and do not log any warnings.\n  if (!config.verbose) {\n    return;\n  } // Print message to the console.\n\n\n  warn(\"Deprecation warning: \" + message);\n}\n\nmodule.exportDefault(deprecated);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"override_method.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/core/utils/override_method.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _toArray;\n\nmodule.watch(require(\"lodash/toArray\"), {\n  \"default\": function (v) {\n    _toArray = v;\n  }\n}, 0);\n\nfunction overrideMethod(object, methodName, overridingMethod, param) {\n  // Get original method.\n  var originalMethod = object[methodName]; // Override original method.\n\n  object[methodName] = function () {\n    // Convert arguments to array.\n    var args = _toArray(arguments); // Execute overriding method passing arguments, original method and extra\n    // parameters.\n\n\n    return overridingMethod.call(this, args, originalMethod, param);\n  };\n}\n\n;\nmodule.exportDefault(overrideMethod);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"throw_parse_error.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/core/utils/throw_parse_error.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nvar _isObject;\n\nmodule.watch(require(\"lodash/isObject\"), {\n  \"default\": function (v) {\n    _isObject = v;\n  }\n}, 1);\n\nfunction throwParseError(details) {\n  var message = '';\n\n  _each(details, function (detail) {\n    if (_isObject(detail)) {\n      _each(detail, function (value, key) {\n        message += '[\"' + value + '\" ' + key + ']';\n      });\n    } else if (typeof detail === 'string') {\n      message += ' ' + detail;\n    }\n  });\n\n  throw new TypeError(message);\n}\n\n;\nmodule.exportDefault(throwParseError);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"warn.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/core/utils/warn.js                                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar config;\nmodule.watch(require(\"../../../core/config.js\"), {\n  \"default\": function (v) {\n    config = v;\n  }\n}, 0);\n\nfunction warn(warning) {\n  // Be silent and do not log any warnings.\n  if (!config.verbose) {\n    return;\n  }\n\n  try {\n    console.warn(warning);\n  } catch (error) {}\n}\n\nmodule.exportDefault(warn);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"events\":{\"event.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/events/event.js                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _extend;\n\nmodule.watch(require(\"lodash/extend\"), {\n  \"default\": function (v) {\n    _extend = v;\n  }\n}, 0);\n\nvar Event =\n/*#__PURE__*/\nfunction () {\n  function Event(type, data) {\n    this.cancelable = false;\n    this.propagates = false;\n\n    _extend(this, data);\n\n    this.type = type.toLowerCase();\n    this.timeStamp = Date.now();\n    this.target = null;\n    this.currentTarget = null;\n    this.defaultPrevented = false;\n    this.propagationStopped = false;\n    this.immediatePropagationStopped = false;\n  }\n\n  var _proto = Event.prototype;\n\n  _proto.preventDefault = function () {\n    function preventDefault() {\n      this.defaultPrevented = true;\n    }\n\n    return preventDefault;\n  }();\n\n  _proto.stopPropagation = function () {\n    function stopPropagation() {\n      this.propagationStopped = true;\n    }\n\n    return stopPropagation;\n  }();\n\n  _proto.stopImmediatePropagation = function () {\n    function stopImmediatePropagation() {\n      this.immediatePropagationStopped = true;\n      this.stopPropagation();\n    }\n\n    return stopImmediatePropagation;\n  }();\n\n  return Event;\n}();\n\n;\nmodule.exportDefault(Event);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"module.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/events/module.js                                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar module1 = module;\nvar Module;\nmodule1.watch(require(\"../../core/module.js\"), {\n  \"default\": function (v) {\n    Module = v;\n  }\n}, 0);\nvar onInitSchema;\nmodule1.watch(require(\"./hooks/init_schema.js\"), {\n  \"default\": function (v) {\n    onInitSchema = v;\n  }\n}, 1);\nvar onInitDefinition;\nmodule1.watch(require(\"./hooks/init_definition.js\"), {\n  \"default\": function (v) {\n    onInitDefinition = v;\n  }\n}, 2);\nvar onParseDefinition;\nmodule1.watch(require(\"./hooks/parse_definition.js\"), {\n  \"default\": function (v) {\n    onParseDefinition = v;\n  }\n}, 3);\nvar onMergeDefinitions;\nmodule1.watch(require(\"./hooks/merge_definitions.js\"), {\n  \"default\": function (v) {\n    onMergeDefinitions = v;\n  }\n}, 4);\nvar onApplyDefinition;\nmodule1.watch(require(\"./hooks/apply_definition.js\"), {\n  \"default\": function (v) {\n    onApplyDefinition = v;\n  }\n}, 5);\nvar onInitClass;\nmodule1.watch(require(\"./hooks/init_class.js\"), {\n  \"default\": function (v) {\n    onInitClass = v;\n  }\n}, 6);\nModule.create({\n  name: 'events',\n  onInitSchema: onInitSchema,\n  onInitDefinition: onInitDefinition,\n  onParseDefinition: onParseDefinition,\n  onMergeDefinitions: onMergeDefinitions,\n  onApplyDefinition: onApplyDefinition,\n  onInitClass: onInitClass\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"class_prototype_methods\":{\"dispatch_event.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/events/class_prototype_methods/dispatch_event.js                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nvar _every;\n\nmodule.watch(require(\"lodash/every\"), {\n  \"default\": function (v) {\n    _every = v;\n  }\n}, 1);\n\nvar _isArray;\n\nmodule.watch(require(\"lodash/isArray\"), {\n  \"default\": function (v) {\n    _isArray = v;\n  }\n}, 2);\nvar Event;\nmodule.watch(require(\"../event.js\"), {\n  \"default\": function (v) {\n    Event = v;\n  }\n}, 3);\nvar throwParseError;\nmodule.watch(require(\"../../core/utils/throw_parse_error.js\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 4);\nvar AstroClass;\nmodule.watch(require(\"../../../core/class.js\"), {\n  \"default\": function (v) {\n    AstroClass = v;\n  }\n}, 5);\n\nfunction returnFromDispatchEvent(event) {\n  // If an event is cancelable and it had been canceled with the\n  // \"preventDefault\" method call, then we return false.\n  if (event.cancelable) {\n    return !event.defaultPrevented;\n  }\n\n  return true;\n}\n\nfunction dispatchEvent(event) {\n  var doc = this;\n  var Class = doc.constructor;\n\n  if (!Match.test(event, Event)) {\n    throwParseError([{\n      'class': Class.getName()\n    }, {\n      'method': 'dispatchEvent'\n    }, 'The first argument has to be an event object']);\n  } // Attach a document to the event as a target.\n\n\n  if (event.target === null) {\n    event.target = doc;\n  }\n\n  if (event.currentTarget === null) {\n    event.currentTarget = doc;\n  } // Get all event handlers of a given type.\n\n\n  var eventHandlers = Class.getEvents(event.type);\n\n  _every(eventHandlers, function (eventHandler) {\n    eventHandler(event); // Stop execution of the following event handlers, if a flag is set.\n\n    return !event.immediatePropagationStopped;\n  }); // If propagation was stopped or bubbling is turned off, then we don't go\n  // deeper into nested fields.\n\n\n  if (event.propagationStopped || !event.propagates) {\n    return returnFromDispatchEvent(event);\n  } // Object fields.\n\n\n  _each(Class.getObjectFields(), function (field) {\n    var value = doc[field.name];\n\n    if (value instanceof AstroClass) {\n      event.currentTarget = value;\n      value.dispatchEvent(event);\n    }\n  }); // List fields.\n\n\n  _each(Class.getListFields(), function (field) {\n    var value = doc[field.name];\n\n    if (field.isClass && _isArray(value)) {\n      _each(value, function (element) {\n        if (element instanceof AstroClass) {\n          event.currentTarget = element;\n          element.dispatchEvent(event);\n        }\n      });\n    }\n  });\n\n  return returnFromDispatchEvent(event);\n}\n\nmodule.exportDefault(dispatchEvent);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"class_static_methods\":{\"dispatch_event.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/events/class_static_methods/dispatch_event.js                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _every;\n\nmodule.watch(require(\"lodash/every\"), {\n  \"default\": function (v) {\n    _every = v;\n  }\n}, 0);\nvar Event;\nmodule.watch(require(\"../event\"), {\n  \"default\": function (v) {\n    Event = v;\n  }\n}, 1);\nvar throwParseError;\nmodule.watch(require(\"../../core/utils/throw_parse_error\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 2);\n\nfunction returnFromDispatchEvent(event) {\n  // If an event is cancelable and it had been canceled with the\n  // \"preventDefault\" method call, then we return false.\n  if (event.cancelable) {\n    return !event.defaultPrevented;\n  }\n\n  return true;\n}\n\nfunction dispatchEvent(event) {\n  var Class = this; // Get all event handlers of a given type.\n\n  var eventHandlers = Class.getEvents(event.type); // If there are no event of a fiven type, then just return true.\n\n  if (eventHandlers.length === 0) {\n    return true;\n  } // Attach a document to the event as a target.\n\n\n  if (event.target === null) {\n    event.target = Class;\n  }\n\n  if (event.currentTarget === null) {\n    event.currentTarget = Class;\n  }\n\n  _every(eventHandlers, function (eventHandler) {\n    eventHandler(event); // Stop execution of the following event handlers, if a flag is set.\n\n    return !event.immediatePropagationStopped;\n  });\n\n  return returnFromDispatchEvent(event);\n}\n\nmodule.exportDefault(dispatchEvent);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"get_events.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/events/class_static_methods/get_events.js                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction getEvents(eventName) {\n  var Class = this;\n\n  if (eventName) {\n    eventName = eventName.toLowerCase();\n    return Class.schema.events[eventName] || [];\n  }\n\n  return Class.schema.events;\n}\n\nmodule.exportDefault(getEvents);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hasEvent.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/events/class_static_methods/hasEvent.js                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _get;\n\nmodule.watch(require(\"lodash/get\"), {\n  \"default\": function (v) {\n    _get = v;\n  }\n}, 0);\n\nvar _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 1);\n\nvar _includes;\n\nmodule.watch(require(\"lodash/includes\"), {\n  \"default\": function (v) {\n    _includes = v;\n  }\n}, 2);\n\nfunction hasEvent(eventName, eventHandler) {\n  var Class = this;\n  eventName = eventName.toLowerCase();\n\n  if (arguments.length === 2) {\n    return _includes(_get(Class.schema.events, eventName), eventHandler);\n  } else if (arguments.length === 1) {\n    return _has(Class.schema.events, eventName);\n  }\n}\n\nmodule.exportDefault(hasEvent);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"hooks\":{\"apply_definition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/events/hooks/apply_definition.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defaults;\n\nmodule.watch(require(\"lodash/defaults\"), {\n  \"default\": function (v) {\n    _defaults = v;\n  }\n}, 0);\n\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 1);\n\nvar _uniq;\n\nmodule.watch(require(\"lodash/uniq\"), {\n  \"default\": function (v) {\n    _uniq = v;\n  }\n}, 2);\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n  var schema = Class.schema; // Add events to the event manager.\n\n  _each(parsedDefinition.events, function (eventHandlers, eventName) {\n    var _defaults2, _schema$events$eventN;\n\n    eventName = eventName.toLowerCase(); // By default events list should be an empty array.\n\n    _defaults(schema.events, (_defaults2 = {}, _defaults2[eventName] = [], _defaults2)); // Add all events to the list.\n\n\n    (_schema$events$eventN = schema.events[eventName]).push.apply(_schema$events$eventN, (0, _toConsumableArray2.default)(eventHandlers)); // Make sure that there are no duplicates.\n\n\n    schema.events[eventName] = _uniq(schema.events[eventName]);\n  });\n}\n\n;\nmodule.exportDefault(onApplyDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"init_class.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/events/hooks/init_class.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar dispatchEvent;\nmodule.watch(require(\"../class_static_methods/dispatch_event.js\"), {\n  \"default\": function (v) {\n    dispatchEvent = v;\n  }\n}, 0);\nvar getEvents;\nmodule.watch(require(\"../class_static_methods/get_events.js\"), {\n  \"default\": function (v) {\n    getEvents = v;\n  }\n}, 1);\nvar hasEvent;\nmodule.watch(require(\"../class_static_methods/hasEvent\"), {\n  \"default\": function (v) {\n    hasEvent = v;\n  }\n}, 2);\nvar dispatchEventProto;\nmodule.watch(require(\"../class_prototype_methods/dispatch_event.js\"), {\n  \"default\": function (v) {\n    dispatchEventProto = v;\n  }\n}, 3);\n\nfunction onInitClass(Class, className) {\n  // Class static methods.\n  Class.dispatchEvent = dispatchEvent;\n  Class.getEvents = getEvents;\n  Class.hasEvent = hasEvent; // Class prototype methods.\n\n  Class.prototype.dispatchEvent = dispatchEventProto;\n}\n\nmodule.exportDefault(onInitClass);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"init_definition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/events/hooks/init_definition.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction onInitDefinition(definition, className) {\n  definition.events = {};\n}\n\n;\nmodule.exportDefault(onInitDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"init_schema.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/events/hooks/init_schema.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction onInitSchema(schema, className) {\n  schema.events = {};\n}\n\n;\nmodule.exportDefault(onInitSchema);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"merge_definitions.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/events/hooks/merge_definitions.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\n\nvar _defaults;\n\nmodule.watch(require(\"lodash/defaults\"), {\n  \"default\": function (v) {\n    _defaults = v;\n  }\n}, 0);\n\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 1);\n\nvar _uniq;\n\nmodule.watch(require(\"lodash/uniq\"), {\n  \"default\": function (v) {\n    _uniq = v;\n  }\n}, 2);\n\nfunction onMergeDefinitions(trgDefinition, srcDefinition, ClassName) {\n  _each(srcDefinition.events, function (eventHandlers, eventName) {\n    var _defaults2, _trgDefinition$events;\n\n    eventName = eventName.toLowerCase(); // By default events list should be an empty array.\n\n    _defaults(trgDefinition.events, (_defaults2 = {}, _defaults2[eventName] = [], _defaults2)); // Add all events to the list.\n\n\n    (_trgDefinition$events = trgDefinition.events[eventName]).push.apply(_trgDefinition$events, (0, _toConsumableArray2.default)(eventHandlers)); // Make sure that there are no duplicates.\n\n\n    trgDefinition.events[eventName] = _uniq(trgDefinition.events[eventName]);\n  });\n}\n\n;\nmodule.exportDefault(onMergeDefinitions);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"parse_definition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/events/hooks/parse_definition.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\nvar throwParseError;\nmodule.watch(require(\"../../core/utils/throw_parse_error.js\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 1);\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  // Check existence and validity of the \"events\" property.\n  if (definition.events !== undefined) {\n    _each(definition.events, function (eventHandlers, eventName) {\n      eventName = eventName.toLowerCase(); // Check if the event definition is an array of functions.\n\n      if (!Match.test(eventHandlers, Match.OneOf(Function, [Function]))) {\n        throwParseError([{\n          'class': className\n        }, {\n          'event': eventName\n        }, 'Event handler has to be a function or an array of functions']);\n      } // Convert function to array of functions.\n\n\n      if (Match.test(eventHandlers, Function)) {\n        eventHandlers = [eventHandlers];\n      }\n\n      parsedDefinition.events[eventName] = eventHandlers;\n    });\n  }\n}\n\n;\nmodule.exportDefault(onParseDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"fields\":{\"Enum.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/Enum.js                                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _zipObject;\n\nmodule.watch(require(\"lodash/zipObject\"), {\n  \"default\": function (v) {\n    _zipObject = v;\n  }\n}, 0);\n\nvar _range;\n\nmodule.watch(require(\"lodash/range\"), {\n  \"default\": function (v) {\n    _range = v;\n  }\n}, 1);\n\nvar _forOwn;\n\nmodule.watch(require(\"lodash/forOwn\"), {\n  \"default\": function (v) {\n    _forOwn = v;\n  }\n}, 2);\n\nvar _isNil;\n\nmodule.watch(require(\"lodash/isNil\"), {\n  \"default\": function (v) {\n    _isNil = v;\n  }\n}, 3);\n\nvar _isNumber;\n\nmodule.watch(require(\"lodash/isNumber\"), {\n  \"default\": function (v) {\n    _isNumber = v;\n  }\n}, 4);\n\nvar _values;\n\nmodule.watch(require(\"lodash/values\"), {\n  \"default\": function (v) {\n    _values = v;\n  }\n}, 5);\n\nvar _keys;\n\nmodule.watch(require(\"lodash/keys\"), {\n  \"default\": function (v) {\n    _keys = v;\n  }\n}, 6);\n\nvar _indexOf;\n\nmodule.watch(require(\"lodash/indexOf\"), {\n  \"default\": function (v) {\n    _indexOf = v;\n  }\n}, 7);\n\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 8);\nvar Type;\nmodule.watch(require(\"./type.js\"), {\n  \"default\": function (v) {\n    Type = v;\n  }\n}, 9);\nvar Validators;\nmodule.watch(require(\"../validators/validators.js\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 10);\nvar check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check: function (v) {\n    check = v;\n  },\n  Match: function (v) {\n    Match = v;\n  }\n}, 11);\nvar enumDefinitionPattern = {\n  name: String,\n  identifiers: Match.OneOf(Array, Object)\n};\nvar Enum = {\n  create: function (definition) {\n    check(definition, enumDefinitionPattern); // Get identifiers and values.\n\n    var identifiers;\n\n    if (Match.test(definition.identifiers, Array)) {\n      identifiers = _zipObject(definition.identifiers, _range(definition.identifiers.length));\n    } else if (Match.test(definition.identifiers, Object)) {\n      identifiers = definition.identifiers;\n      var i = 0;\n\n      _forOwn(identifiers, function (value, key) {\n        if (_isNil(value)) {\n          identifiers[key] = i;\n          i++;\n        } else if (_isNumber(value)) {\n          i = value + 1;\n        }\n      });\n    }\n\n    var values = _values(identifiers);\n\n    var keys = _keys(identifiers); // Create a new Enum constructor.\n\n\n    var Enum = function () {\n      function Enum(identifier) {\n        return Enum[identifier];\n      }\n\n      return Enum;\n    }();\n\n    Enum.getValues = function () {\n      return values;\n    };\n\n    Enum.getIdentifiers = function () {\n      return keys;\n    };\n\n    Enum.getIdentifier = function (value) {\n      var index = _indexOf(values, value);\n\n      return keys[index];\n    }; // Set identifiers properties in the class.\n\n\n    _each(identifiers, function (value, name) {\n      if (Object.defineProperty) {\n        Object.defineProperty(Enum, name, {\n          writable: false,\n          enumerable: true,\n          value: value\n        });\n      } else {\n        Enum[name] = value;\n      }\n    }); // Create type definition for the given enum.\n\n\n    Type.create({\n      name: definition.name,\n      \"class\": Enum,\n      validate: function (args) {\n        args.param = values;\n        Validators.choice(args);\n      }\n    }); // Store enum in the enums list.\n\n    this.enums[definition.name] = Enum;\n    return Enum;\n  },\n  enums: {}\n};\nmodule.exportDefault(Enum);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Field.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/Field.js                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _defaults;\n\nmodule.watch(require(\"lodash/defaults\"), {\n  \"default\": function (v) {\n    _defaults = v;\n  }\n}, 0);\n\nvar _extend;\n\nmodule.watch(require(\"lodash/extend\"), {\n  \"default\": function (v) {\n    _extend = v;\n  }\n}, 1);\n\nvar _isNil;\n\nmodule.watch(require(\"lodash/isNil\"), {\n  \"default\": function (v) {\n    _isNil = v;\n  }\n}, 2);\nvar Validators;\nmodule.watch(require(\"../validators/validators.js\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 3);\n\nvar Field =\n/*#__PURE__*/\nfunction () {\n  function Field() {\n    var definition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _defaults(definition, {\n      optional: false,\n      immutable: false,\n      \"transient\": false\n    });\n\n    _extend(this, definition);\n  }\n\n  var _proto = Field.prototype;\n\n  _proto.getDefault = function () {\n    function getDefault(doc) {\n      var value = typeof this.default === 'function' ? this.default(doc) : this.default;\n      return this.castValue(value, {\n        cast: true\n      });\n    }\n\n    return getDefault;\n  }();\n\n  _proto.getOptional = function () {\n    function getOptional(doc) {\n      if (typeof this.optional === 'function') {\n        return this.optional(doc);\n      }\n\n      return this.optional;\n    }\n\n    return getOptional;\n  }();\n\n  _proto.validate = function () {\n    function validate(args) {\n      // If a field is not optional (required) then it has to have value.\n      if (!this.getOptional(args.doc)) {\n        Validators.required(args);\n      }\n    }\n\n    return validate;\n  }();\n\n  _proto.castValue = function () {\n    function castValue(value, options) {\n      if (!_isNil(value)) {\n        return this.cast(value, options);\n      }\n\n      return value;\n    }\n\n    return castValue;\n  }();\n\n  _proto.resolveValue = function () {\n    function resolveValue(rawDoc) {\n      if (!rawDoc) {\n        return;\n      }\n\n      if (typeof this.resolve === 'function') {\n        return this.resolve(rawDoc);\n      }\n\n      return rawDoc[this.name];\n    }\n\n    return resolveValue;\n  }();\n\n  return Field;\n}();\n\n;\nmodule.exportDefault(Field);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ListField.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/ListField.js                                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nvar _isArray;\n\nmodule.watch(require(\"lodash/isArray\"), {\n  \"default\": function (v) {\n    _isArray = v;\n  }\n}, 1);\n\nvar _isNil;\n\nmodule.watch(require(\"lodash/isNil\"), {\n  \"default\": function (v) {\n    _isNil = v;\n  }\n}, 2);\n\nvar _isPlainObject;\n\nmodule.watch(require(\"lodash/isPlainObject\"), {\n  \"default\": function (v) {\n    _isPlainObject = v;\n  }\n}, 3);\n\nvar _map;\n\nmodule.watch(require(\"lodash/map\"), {\n  \"default\": function (v) {\n    _map = v;\n  }\n}, 4);\nvar Field;\nmodule.watch(require(\"./Field\"), {\n  \"default\": function (v) {\n    Field = v;\n  }\n}, 5);\nvar AstroClass;\nmodule.watch(require(\"../../core/class\"), {\n  \"default\": function (v) {\n    AstroClass = v;\n  }\n}, 6);\nvar Validators;\nmodule.watch(require(\"../validators/validators\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 7);\nvar castToClass;\nmodule.watch(require(\"./utils/castToClass\"), {\n  \"default\": function (v) {\n    castToClass = v;\n  }\n}, 8);\nvar resolveValues;\nmodule.watch(require(\"./utils/resolveValues\"), {\n  \"default\": function (v) {\n    resolveValues = v;\n  }\n}, 9);\n\nvar ListField =\n/*#__PURE__*/\nfunction (_Field) {\n  (0, _inheritsLoose2.default)(ListField, _Field);\n\n  function ListField() {\n    var _this;\n\n    var definition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _this = _Field.call(this, definition) || this;\n    _this.isClass = AstroClass.isParentOf(_this.type.class);\n    return _this;\n  }\n\n  var _proto = ListField.prototype;\n\n  _proto.validate = function () {\n    function validate(args) {\n      var _this2 = this;\n\n      _Field.prototype.validate.call(this, args);\n\n      var doc = args.doc,\n          name = args.name,\n          value = args.value; // If a value is not empty.\n\n      if (!_isNil(value)) {\n        Validators.array(args);\n\n        _each(value, function (element, index) {\n          _this2.type.validate({\n            doc: doc,\n            name: name + '.' + index,\n            value: element\n          });\n        });\n      }\n    }\n\n    return validate;\n  }();\n\n  _proto.cast = function () {\n    function cast(value, options) {\n      var _this3 = this;\n\n      if (options.element) {\n        return this.type.cast(value, options);\n      }\n\n      if (value === '' && this.optional) {\n        return null;\n      } else if (_isArray(value)) {\n        return _map(value, function (element) {\n          // Class type.\n          if (_this3.isClass) {\n            // We only cast if a value is a plain object.\n            if (_isPlainObject(element)) {\n              // Cast value to an instance of the class.\n              return castToClass({\n                Class: _this3.type.class,\n                rawDoc: element,\n                options: options\n              });\n            }\n\n            return element;\n          } // Scalar type.\n          else {\n              // The \"cast\" option is only passed to the ObjectFields and ListFields.\n              // Here we have to check if it's set, so we don't cast if user don't\n              // want to.\n              if (options.cast) {\n                return _this3.type.cast.call(_this3, element);\n              }\n\n              return element;\n            }\n        });\n      }\n\n      return value;\n    }\n\n    return cast;\n  }();\n\n  _proto.resolveValue = function () {\n    function resolveValue(rawDoc) {\n      var _this4 = this;\n\n      var resolvedValues = _Field.prototype.resolveValue.call(this, rawDoc);\n\n      if (!this.isClass) {\n        return resolvedValues;\n      }\n\n      return _map(resolvedValues, function (nestedRawDoc) {\n        return resolveValues({\n          Class: _this4.type.class,\n          rawDoc: nestedRawDoc\n        });\n      });\n    }\n\n    return resolveValue;\n  }();\n\n  return ListField;\n}(Field);\n\n;\nmodule.exportDefault(ListField);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ObjectField.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/ObjectField.js                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _isPlainObject;\n\nmodule.watch(require(\"lodash/isPlainObject\"), {\n  \"default\": function (v) {\n    _isPlainObject = v;\n  }\n}, 0);\nvar Field;\nmodule.watch(require(\"./Field\"), {\n  \"default\": function (v) {\n    Field = v;\n  }\n}, 1);\nvar castToClass;\nmodule.watch(require(\"./utils/castToClass\"), {\n  \"default\": function (v) {\n    castToClass = v;\n  }\n}, 2);\nvar resolveValues;\nmodule.watch(require(\"./utils/resolveValues\"), {\n  \"default\": function (v) {\n    resolveValues = v;\n  }\n}, 3);\n\nvar ObjectField =\n/*#__PURE__*/\nfunction (_Field) {\n  (0, _inheritsLoose2.default)(ObjectField, _Field);\n\n  function ObjectField() {\n    return _Field.apply(this, arguments) || this;\n  }\n\n  var _proto = ObjectField.prototype;\n\n  _proto.validate = function () {\n    function validate(args) {\n      _Field.prototype.validate.call(this, args);\n\n      this.type.validate(args);\n    }\n\n    return validate;\n  }();\n\n  _proto.cast = function () {\n    function cast(value, options) {\n      if (value === '' && this.optional) {\n        return null;\n      } // We only cast if a value is a plain object.\n      else if (_isPlainObject(value)) {\n          // Cast value to an instance of the class.\n          return castToClass({\n            Class: this.type.class,\n            rawDoc: value,\n            options: options\n          });\n        }\n\n      return value;\n    }\n\n    return cast;\n  }();\n\n  _proto.resolveValue = function () {\n    function resolveValue(rawDoc) {\n      return resolveValues({\n        Class: this.type.class,\n        rawDoc: _Field.prototype.resolveValue.call(this, rawDoc)\n      });\n    }\n\n    return resolveValue;\n  }();\n\n  return ObjectField;\n}(Field);\n\n;\nmodule.exportDefault(ObjectField);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"ScalarField.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/ScalarField.js                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _isNil;\n\nmodule.watch(require(\"lodash/isNil\"), {\n  \"default\": function (v) {\n    _isNil = v;\n  }\n}, 0);\nvar Field;\nmodule.watch(require(\"./Field\"), {\n  \"default\": function (v) {\n    Field = v;\n  }\n}, 1);\n\nvar ScalarField =\n/*#__PURE__*/\nfunction (_Field) {\n  (0, _inheritsLoose2.default)(ScalarField, _Field);\n\n  function ScalarField() {\n    return _Field.apply(this, arguments) || this;\n  }\n\n  var _proto = ScalarField.prototype;\n\n  _proto.cast = function () {\n    function cast(value) {\n      return this.type.cast.call(this, value);\n    }\n\n    return cast;\n  }();\n\n  _proto.validate = function () {\n    function validate(args) {\n      _Field.prototype.validate.call(this, args);\n\n      var value = args.value;\n\n      if (!_isNil(value)) {\n        return this.type.validate(args);\n      }\n    }\n\n    return validate;\n  }();\n\n  return ScalarField;\n}(Field);\n\n;\nmodule.exportDefault(ScalarField);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"Union.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/Union.js                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _clone;\n\nmodule.watch(require(\"lodash/clone\"), {\n  \"default\": function (v) {\n    _clone = v;\n  }\n}, 0);\n\nvar _some;\n\nmodule.watch(require(\"lodash/some\"), {\n  \"default\": function (v) {\n    _some = v;\n  }\n}, 1);\nvar Type;\nmodule.watch(require(\"./type.js\"), {\n  \"default\": function (v) {\n    Type = v;\n  }\n}, 2);\nvar Validators;\nmodule.watch(require(\"../validators/validators.js\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 3);\nvar check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check: function (v) {\n    check = v;\n  },\n  Match: function (v) {\n    Match = v;\n  }\n}, 4);\nvar unionDefinitionPattern = {\n  name: String,\n  types: [Function],\n  cast: Match.Optional(Function)\n};\nvar Union = {\n  create: function (definition) {\n    check(definition, unionDefinitionPattern); // Create a new Union constructor.\n\n    var Union = function () {\n      function Union(identifier) {\n        return Union[identifier];\n      }\n\n      return Union;\n    }(); // Copy list of types to the union constructor.\n\n\n    Union.types = _clone(definition.types); // Copy casting function to the union constructor if defined.\n\n    if (typeof definition.cast === 'function') {\n      Union.cast = definition.cast;\n    } // Create type definition for the given enum.\n\n\n    Type.create({\n      name: definition.name,\n      \"class\": Union,\n      cast: function (value) {\n        return Union.cast ? Union.cast(value) : value;\n      },\n      validate: function (args) {\n        var caughtErrors = []; // Check if a value will pass validation executed by any of the union\n        // types.\n\n        if (!_some(Union.types, function (TypeClass) {\n          var AstroType = Type.find(TypeClass);\n\n          try {\n            AstroType.validate(args);\n            return true;\n          } catch (err) {\n            caughtErrors.push(err);\n            return false;\n          }\n        })) {\n          throw caughtErrors[0];\n        }\n      }\n    }); // Store enum in the unions list.\n\n    this.unions[definition.name] = Union;\n    return Union;\n  },\n  unions: {}\n};\nmodule.exportDefault(Union);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"module.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/module.js                                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar module1 = module;\nvar Module;\nmodule1.watch(require(\"../../core/module.js\"), {\n  \"default\": function (v) {\n    Module = v;\n  }\n}, 0);\nmodule1.watch(require(\"./types/boolean.js\"));\nmodule1.watch(require(\"./types/date.js\"));\nmodule1.watch(require(\"./types/mongo_object_id.js\"));\nmodule1.watch(require(\"./types/number.js\"));\nmodule1.watch(require(\"./types/object.js\"));\nmodule1.watch(require(\"./types/string.js\"));\nvar castNested;\nmodule1.watch(require(\"./utils/castNested\"), {\n  \"default\": function (v) {\n    castNested = v;\n  }\n}, 1);\nvar getAll;\nmodule1.watch(require(\"./utils/getAll\"), {\n  \"default\": function (v) {\n    getAll = v;\n  }\n}, 2);\nvar getMany;\nmodule1.watch(require(\"./utils/getMany\"), {\n  \"default\": function (v) {\n    getMany = v;\n  }\n}, 3);\nvar getOne;\nmodule1.watch(require(\"./utils/getOne\"), {\n  \"default\": function (v) {\n    getOne = v;\n  }\n}, 4);\nvar isNestedFieldName;\nmodule1.watch(require(\"./utils/isNestedFieldName\"), {\n  \"default\": function (v) {\n    isNestedFieldName = v;\n  }\n}, 5);\nvar rawAll;\nmodule1.watch(require(\"./utils/rawAll\"), {\n  \"default\": function (v) {\n    rawAll = v;\n  }\n}, 6);\nvar rawMany;\nmodule1.watch(require(\"./utils/rawMany\"), {\n  \"default\": function (v) {\n    rawMany = v;\n  }\n}, 7);\nvar rawOne;\nmodule1.watch(require(\"./utils/rawOne\"), {\n  \"default\": function (v) {\n    rawOne = v;\n  }\n}, 8);\nvar setAll;\nmodule1.watch(require(\"./utils/set_all.js\"), {\n  \"default\": function (v) {\n    setAll = v;\n  }\n}, 9);\nvar setMany;\nmodule1.watch(require(\"./utils/set_many.js\"), {\n  \"default\": function (v) {\n    setMany = v;\n  }\n}, 10);\nvar setOne;\nmodule1.watch(require(\"./utils/set_one.js\"), {\n  \"default\": function (v) {\n    setOne = v;\n  }\n}, 11);\nvar traverse;\nmodule1.watch(require(\"./utils/traverse.js\"), {\n  \"default\": function (v) {\n    traverse = v;\n  }\n}, 12);\nvar onInitSchema;\nmodule1.watch(require(\"./hooks/init_schema.js\"), {\n  \"default\": function (v) {\n    onInitSchema = v;\n  }\n}, 13);\nvar onInitDefinition;\nmodule1.watch(require(\"./hooks/init_definition.js\"), {\n  \"default\": function (v) {\n    onInitDefinition = v;\n  }\n}, 14);\nvar onParseDefinition;\nmodule1.watch(require(\"./hooks/parse_definition.js\"), {\n  \"default\": function (v) {\n    onParseDefinition = v;\n  }\n}, 15);\nvar onMergeDefinitions;\nmodule1.watch(require(\"./hooks/merge_definitions.js\"), {\n  \"default\": function (v) {\n    onMergeDefinitions = v;\n  }\n}, 16);\nvar onApplyDefinition;\nmodule1.watch(require(\"./hooks/apply_definition.js\"), {\n  \"default\": function (v) {\n    onApplyDefinition = v;\n  }\n}, 17);\nvar onInitClass;\nmodule1.watch(require(\"./hooks/init_class.js\"), {\n  \"default\": function (v) {\n    onInitClass = v;\n  }\n}, 18);\nModule.create({\n  name: 'fields',\n  onInitSchema: onInitSchema,\n  onInitDefinition: onInitDefinition,\n  onParseDefinition: onParseDefinition,\n  onMergeDefinitions: onMergeDefinitions,\n  onApplyDefinition: onApplyDefinition,\n  onInitClass: onInitClass,\n  utils: {\n    castNested: castNested,\n    getAll: getAll,\n    getMany: getMany,\n    getOne: getOne,\n    isNestedFieldName: isNestedFieldName,\n    rawAll: rawAll,\n    rawMany: rawMany,\n    rawOne: rawOne,\n    setAll: setAll,\n    setMany: setMany,\n    setOne: setOne,\n    traverse: traverse\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"type.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/type.js                                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _find;\n\nmodule.watch(require(\"lodash/find\"), {\n  \"default\": function (v) {\n    _find = v;\n  }\n}, 0);\n\nvar _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 1);\nvar Validators;\nmodule.watch(require(\"../validators/validators.js\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 2);\nvar warn;\nmodule.watch(require(\"../core/utils/warn\"), {\n  \"default\": function (v) {\n    warn = v;\n  }\n}, 3);\nvar typeDefinitionPattern = {\n  name: String,\n  \"class\": Match.Any,\n  cast: Match.Optional(Function),\n  validate: Match.Optional(Function)\n};\nvar enumDefinitionPattern = {\n  name: String,\n  options: Object\n};\n\nvar Type =\n/*#__PURE__*/\nfunction () {\n  function Type(definition) {\n    check(definition, typeDefinitionPattern);\n    this.name = definition.name;\n    this.class = definition.class;\n\n    if (typeof definition.validate === \"function\") {\n      this.validate = definition.validate;\n    }\n\n    if (typeof definition.cast === \"function\") {\n      this.cast = definition.cast;\n    }\n  }\n\n  var _proto = Type.prototype;\n\n  _proto.cast = function () {\n    function cast(value) {\n      return value;\n    }\n\n    return cast;\n  }();\n\n  _proto.validate = function () {\n    function validate(doc, fieldName) {\n      return true;\n    }\n\n    return validate;\n  }();\n\n  Type.create = function () {\n    function create(definition) {\n      var type = new Type(definition); // Warn about class duplicate.\n\n      if (_has(this.types, type.name)) {\n        warn(\"Duplicate of the \\\"\" + type.name + \"\\\" type\");\n      }\n\n      this.types[type.name] = type;\n    }\n\n    return create;\n  }();\n\n  Type.get = function () {\n    function get(name) {\n      return this.types[name];\n    }\n\n    return get;\n  }();\n\n  Type.has = function () {\n    function has(name) {\n      return _has(this.types, name);\n    }\n\n    return has;\n  }();\n\n  Type.find = function () {\n    function find(Class) {\n      return _find(this.types, function (type) {\n        return type.class.prototype === Class.prototype;\n      });\n    }\n\n    return find;\n  }();\n\n  return Type;\n}();\n\nType.types = {};\nmodule.exportDefault(Type);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"class_events\":{\"from_json_value.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/class_events/from_json_value.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction fromJSONValue(e) {\n  var doc = e.currentTarget;\n  doc.set(EJSON.parse(e.json.values), {\n    defaults: false,\n    clone: false,\n    cast: false\n  });\n}\n\nmodule.exportDefault(fromJSONValue);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"to_json_value.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/class_events/to_json_value.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getAll;\nmodule.watch(require(\"../utils/getAll\"), {\n  \"default\": function (v) {\n    getAll = v;\n  }\n}, 0);\n\nfunction toJSONValue(e) {\n  var doc = e.currentTarget;\n  e.json.values = EJSON.stringify(getAll(doc));\n}\n\n;\nmodule.exportDefault(toJSONValue);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"class_prototype_methods\":{\"get.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/class_prototype_methods/get.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _isArray;\n\nmodule.watch(require(\"lodash/isArray\"), {\n  \"default\": function (v) {\n    _isArray = v;\n  }\n}, 0);\n\nvar _isPlainObject;\n\nmodule.watch(require(\"lodash/isPlainObject\"), {\n  \"default\": function (v) {\n    _isPlainObject = v;\n  }\n}, 1);\nvar getAll;\nmodule.watch(require(\"../utils/getAll\"), {\n  \"default\": function (v) {\n    getAll = v;\n  }\n}, 2);\nvar getMany;\nmodule.watch(require(\"../utils/getMany\"), {\n  \"default\": function (v) {\n    getMany = v;\n  }\n}, 3);\nvar getOne;\nmodule.watch(require(\"../utils/getOne\"), {\n  \"default\": function (v) {\n    getOne = v;\n  }\n}, 4);\n\nfunction get() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args.length === 0) {\n    return getAll(this);\n  } else if (args.length >= 1) {\n    if (typeof args[0] === 'string') {\n      return getOne.apply(void 0, [this].concat(args));\n    } else if (_isArray(args[0])) {\n      return getMany.apply(void 0, [this].concat(args));\n    } else if (_isPlainObject(args[0])) {\n      return getAll.apply(void 0, [this].concat(args));\n    }\n  }\n}\n\n;\nmodule.exportDefault(get);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"raw.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/class_prototype_methods/raw.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _isArray;\n\nmodule.watch(require(\"lodash/isArray\"), {\n  \"default\": function (v) {\n    _isArray = v;\n  }\n}, 0);\n\nvar _isPlainObject;\n\nmodule.watch(require(\"lodash/isPlainObject\"), {\n  \"default\": function (v) {\n    _isPlainObject = v;\n  }\n}, 1);\nvar rawAll;\nmodule.watch(require(\"../utils/rawAll\"), {\n  \"default\": function (v) {\n    rawAll = v;\n  }\n}, 2);\nvar rawMany;\nmodule.watch(require(\"../utils/rawMany\"), {\n  \"default\": function (v) {\n    rawMany = v;\n  }\n}, 3);\nvar rawOne;\nmodule.watch(require(\"../utils/rawOne\"), {\n  \"default\": function (v) {\n    rawOne = v;\n  }\n}, 4);\n\nfunction raw() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (args.length === 0) {\n    return rawAll(this);\n  } else if (args.length >= 1) {\n    if (typeof args[0] === 'string') {\n      return rawOne.apply(void 0, [this].concat(args));\n    } else if (_isArray(args[0])) {\n      return rawMany.apply(void 0, [this].concat(args));\n    } else if (_isPlainObject(args[0])) {\n      return rawAll.apply(void 0, [this].concat(args));\n    }\n  }\n}\n\n;\nmodule.exportDefault(raw);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"set.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/class_prototype_methods/set.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nvar _extend;\n\nmodule.watch(require(\"lodash/extend\"), {\n  \"default\": function (v) {\n    _extend = v;\n  }\n}, 1);\n\nvar _isArray;\n\nmodule.watch(require(\"lodash/isArray\"), {\n  \"default\": function (v) {\n    _isArray = v;\n  }\n}, 2);\n\nvar _isPlainObject;\n\nmodule.watch(require(\"lodash/isPlainObject\"), {\n  \"default\": function (v) {\n    _isPlainObject = v;\n  }\n}, 3);\nvar config;\nmodule.watch(require(\"../../../core/config\"), {\n  \"default\": function (v) {\n    config = v;\n  }\n}, 4);\nvar setMany;\nmodule.watch(require(\"../utils/set_many\"), {\n  \"default\": function (v) {\n    setMany = v;\n  }\n}, 5);\nvar setOne;\nmodule.watch(require(\"../utils/set_one\"), {\n  \"default\": function (v) {\n    setOne = v;\n  }\n}, 6);\nvar castNested;\nmodule.watch(require(\"../utils/castNested\"), {\n  \"default\": function (v) {\n    castNested = v;\n  }\n}, 7);\n\nfunction merge(doc) {\n  var result = {};\n\n  _each(doc, function (fieldValue, fieldName) {\n    // If a field value is an object then we prefix each nested field name with\n    // a field name of the parent object. However, we can not do it for arrays\n    // as it's not obvious how we would like to merge arrays - concat/replace?\n    if (_isPlainObject(fieldValue) && !_isArray(fieldValue)) {\n      _each(merge(fieldValue), function (nestedFieldValue, nestedFieldName) {\n        result[fieldName + \".\" + nestedFieldName] = nestedFieldValue;\n      });\n    } else {\n      result[fieldName] = fieldValue;\n    }\n  });\n\n  return result;\n}\n\nfunction set() {\n  var doc = this; // Default options.\n\n  var options = {\n    defaults: config.defaults,\n    clone: true,\n    cast: false,\n    merge: false\n  }; // Setting single field.\n\n  if (typeof (arguments.length <= 0 ? undefined : arguments[0]) === 'string' && arguments.length >= 2) {\n    // The last argument is an options object.\n    if (_isPlainObject(arguments.length <= 2 ? undefined : arguments[2])) {\n      _extend(options, arguments.length <= 2 ? undefined : arguments[2]);\n    } // Do not override values if the \"merge\" option is set and instead merge\n    // nested objects.\n\n\n    if (options.merge && _isPlainObject(arguments.length <= 1 ? undefined : arguments[1])) {\n      var _merge;\n\n      setMany(doc, merge((_merge = {}, _merge[arguments.length <= 0 ? undefined : arguments[0]] = arguments.length <= 1 ? undefined : arguments[1], _merge)), options);\n    } else {\n      setOne(doc, arguments.length <= 0 ? undefined : arguments[0], arguments.length <= 1 ? undefined : arguments[1], options);\n    }\n  } // Setting multiple fields at once.\n  else if (_isPlainObject(arguments.length <= 0 ? undefined : arguments[0]) && arguments.length >= 1) {\n      // The last argument is an options object.\n      if (_isPlainObject(arguments.length <= 1 ? undefined : arguments[1])) {\n        _extend(options, arguments.length <= 1 ? undefined : arguments[1]);\n      } // Do not override values if the \"merge\" option is set and instead merge\n      // nested objects.\n\n\n      if (options.merge) {\n        setMany(doc, merge(arguments.length <= 0 ? undefined : arguments[0]), options);\n      } else {\n        setMany(doc, arguments.length <= 0 ? undefined : arguments[0], options);\n      }\n    }\n}\n\n;\nmodule.exportDefault(set);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"class_static_methods\":{\"get_field.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/class_static_methods/get_field.js                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction getField(fieldName) {\n  return this.schema.fields[fieldName];\n}\n\nmodule.exportDefault(getField);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"get_fields.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/class_static_methods/get_fields.js                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _values;\n\nmodule.watch(require(\"lodash/values\"), {\n  \"default\": function (v) {\n    _values = v;\n  }\n}, 0);\n\nfunction getFields() {\n  return _values(this.schema.fields);\n}\n\n;\nmodule.exportDefault(getFields);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"get_fields_names.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/class_static_methods/get_fields_names.js                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _defaults;\n\nmodule.watch(require(\"lodash/defaults\"), {\n  \"default\": function (v) {\n    _defaults = v;\n  }\n}, 0);\n\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 1);\n\nfunction getFieldsNames() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  // Prepare options.\n  _defaults(options, {\n    \"transient\": true,\n    immutable: true\n  });\n\n  var fieldsNames = [];\n\n  _each(this.schema.fields, function (field, name) {\n    // Don't get a transient field.\n    if (!options.transient && field.transient) {\n      return;\n    } // Don't get an immutable field.\n\n\n    if (!options.immutable && field.immutable) {\n      return;\n    }\n\n    fieldsNames.push(name);\n  });\n\n  return fieldsNames;\n}\n\n;\nmodule.exportDefault(getFieldsNames);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"get_list_fields.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/class_static_methods/get_list_fields.js                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _filter;\n\nmodule.watch(require(\"lodash/filter\"), {\n  \"default\": function (v) {\n    _filter = v;\n  }\n}, 0);\nvar ListField;\nmodule.watch(require(\"../ListField\"), {\n  \"default\": function (v) {\n    ListField = v;\n  }\n}, 1);\n\nfunction getListFields() {\n  var classOnly = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n  return _filter(this.getFields(), function (field) {\n    if (classOnly) {\n      return field instanceof ListField && field.isClass;\n    }\n\n    return field instanceof ListField;\n  });\n}\n\n;\nmodule.exportDefault(getListFields);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"get_object_fields.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/class_static_methods/get_object_fields.js                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _filter;\n\nmodule.watch(require(\"lodash/filter\"), {\n  \"default\": function (v) {\n    _filter = v;\n  }\n}, 0);\nvar ObjectField;\nmodule.watch(require(\"../ObjectField\"), {\n  \"default\": function (v) {\n    ObjectField = v;\n  }\n}, 1);\n\nfunction getObjectFields() {\n  return _filter(this.getFields(), function (field) {\n    return field instanceof ObjectField;\n  });\n}\n\n;\nmodule.exportDefault(getObjectFields);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"get_scalar_fields.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/class_static_methods/get_scalar_fields.js                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _filter;\n\nmodule.watch(require(\"lodash/filter\"), {\n  \"default\": function (v) {\n    _filter = v;\n  }\n}, 0);\nvar ScalarField;\nmodule.watch(require(\"../ScalarField\"), {\n  \"default\": function (v) {\n    ScalarField = v;\n  }\n}, 1);\n\nfunction getScalarFields() {\n  return _filter(this.getFields(), function (field) {\n    return field instanceof ScalarField;\n  });\n}\n\n;\nmodule.exportDefault(getScalarFields);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"has_field.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/class_static_methods/has_field.js                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 0);\n\nfunction hasField(fieldName) {\n  return _has(this.schema.fields, fieldName);\n}\n\n;\nmodule.exportDefault(hasField);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"hooks\":{\"apply_definition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/hooks/apply_definition.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nvar _extend;\n\nmodule.watch(require(\"lodash/extend\"), {\n  \"default\": function (v) {\n    _extend = v;\n  }\n}, 1);\nvar throwParseError;\nmodule.watch(require(\"../../core/utils/throw_parse_error.js\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 2);\nvar Type;\nmodule.watch(require(\"../type.js\"), {\n  \"default\": function (v) {\n    Type = v;\n  }\n}, 3);\nvar AstroClass;\nmodule.watch(require(\"../../../core/class.js\"), {\n  \"default\": function (v) {\n    AstroClass = v;\n  }\n}, 4);\nvar ScalarField;\nmodule.watch(require(\"../ScalarField\"), {\n  \"default\": function (v) {\n    ScalarField = v;\n  }\n}, 5);\nvar ObjectField;\nmodule.watch(require(\"../ObjectField\"), {\n  \"default\": function (v) {\n    ObjectField = v;\n  }\n}, 6);\nvar ListField;\nmodule.watch(require(\"../ListField\"), {\n  \"default\": function (v) {\n    ListField = v;\n  }\n}, 7);\n\nfunction checkTypeExistence(type, className, fieldName) {\n  if (!type) {\n    throwParseError([{\n      'class': className\n    }, {\n      'property': 'fields'\n    }, {\n      'field': fieldName\n    }, 'Type does not exist']);\n  }\n}\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n  _each(parsedDefinition.fields, function (fieldDefinition, fieldName) {\n    // Prepare field variable.\n    var field; // List field.\n\n    if (Match.test(fieldDefinition.type, Array)) {\n      var type = Type.find(fieldDefinition.type[0]);\n      checkTypeExistence(type, className, fieldDefinition.name);\n\n      if (AstroClass.isParentOf(type.class)) {\n        field = new ListField(_extend({}, fieldDefinition, {\n          type: type\n        }));\n      } else {\n        field = new ListField(_extend({}, fieldDefinition, {\n          type: type\n        }));\n      }\n    } // Scalar or object field.\n    else {\n        var _type = Type.find(fieldDefinition.type);\n\n        checkTypeExistence(_type, className, fieldDefinition.name);\n\n        if (AstroClass.isParentOf(_type.class)) {\n          field = new ObjectField(_extend({}, fieldDefinition, {\n            type: _type\n          }));\n        } else {\n          field = new ScalarField(_extend({}, fieldDefinition, {\n            type: _type\n          }));\n        }\n      } // Add a field object to the fields list.\n\n\n    Class.schema.fields[fieldName] = field;\n    Class.schema.fieldsNames.push(fieldName);\n  });\n}\n\nmodule.exportDefault(onApplyDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"init_class.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/hooks/init_class.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getField;\nmodule.watch(require(\"../class_static_methods/get_field.js\"), {\n  \"default\": function (v) {\n    getField = v;\n  }\n}, 0);\nvar getFieldsNames;\nmodule.watch(require(\"../class_static_methods/get_fields_names.js\"), {\n  \"default\": function (v) {\n    getFieldsNames = v;\n  }\n}, 1);\nvar getFields;\nmodule.watch(require(\"../class_static_methods/get_fields.js\"), {\n  \"default\": function (v) {\n    getFields = v;\n  }\n}, 2);\nvar getObjectFields;\nmodule.watch(require(\"../class_static_methods/get_object_fields.js\"), {\n  \"default\": function (v) {\n    getObjectFields = v;\n  }\n}, 3);\nvar getListFields;\nmodule.watch(require(\"../class_static_methods/get_list_fields.js\"), {\n  \"default\": function (v) {\n    getListFields = v;\n  }\n}, 4);\nvar getScalarFields;\nmodule.watch(require(\"../class_static_methods/get_scalar_fields.js\"), {\n  \"default\": function (v) {\n    getScalarFields = v;\n  }\n}, 5);\nvar hasField;\nmodule.watch(require(\"../class_static_methods/has_field.js\"), {\n  \"default\": function (v) {\n    hasField = v;\n  }\n}, 6);\nvar get;\nmodule.watch(require(\"../class_prototype_methods/get.js\"), {\n  \"default\": function (v) {\n    get = v;\n  }\n}, 7);\nvar raw;\nmodule.watch(require(\"../class_prototype_methods/raw.js\"), {\n  \"default\": function (v) {\n    raw = v;\n  }\n}, 8);\nvar set;\nmodule.watch(require(\"../class_prototype_methods/set.js\"), {\n  \"default\": function (v) {\n    set = v;\n  }\n}, 9);\nvar fromJSONValue;\nmodule.watch(require(\"../class_events/from_json_value.js\"), {\n  \"default\": function (v) {\n    fromJSONValue = v;\n  }\n}, 10);\nvar toJSONValue;\nmodule.watch(require(\"../class_events/to_json_value.js\"), {\n  \"default\": function (v) {\n    toJSONValue = v;\n  }\n}, 11);\n\nfunction onInitClass(Class, className) {\n  // Class static methods.\n  Class.getField = getField;\n  Class.getFieldsNames = getFieldsNames;\n  Class.getFields = getFields;\n  Class.getObjectFields = getObjectFields;\n  Class.getListFields = getListFields;\n  Class.getScalarFields = getScalarFields;\n  Class.hasField = hasField; // Class prototype methods.\n\n  Class.prototype.get = get;\n  Class.prototype.raw = raw;\n  Class.prototype.set = set; // Class events.\n\n  Class.extend({\n    events: {\n      fromJSONValue: fromJSONValue,\n      toJSONValue: toJSONValue\n    }\n  }, ['events']);\n}\n\n;\nmodule.exportDefault(onInitClass);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"init_definition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/hooks/init_definition.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction onInitDefinition(definition, className) {\n  definition.fields = {};\n}\n\n;\nmodule.exportDefault(onInitDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"init_schema.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/hooks/init_schema.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction onInitSchema(schema, className) {\n  schema.fields = {};\n  schema.fieldsNames = [];\n}\n\n;\nmodule.exportDefault(onInitSchema);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"merge_definitions.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/hooks/merge_definitions.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nfunction onMergeDefinitions(targetDefinition, sourceDefinition, className) {\n  _each(sourceDefinition.fields, function (fieldDefinition, fieldName) {\n    targetDefinition.fields[fieldName] = fieldDefinition;\n  });\n}\n\n;\nmodule.exportDefault(onMergeDefinitions);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"parse_definition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/hooks/parse_definition.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nvar _extend;\n\nmodule.watch(require(\"lodash/extend\"), {\n  \"default\": function (v) {\n    _extend = v;\n  }\n}, 1);\n\nvar _includes;\n\nmodule.watch(require(\"lodash/includes\"), {\n  \"default\": function (v) {\n    _includes = v;\n  }\n}, 2);\nvar throwParseError;\nmodule.watch(require(\"../../core/utils/throw_parse_error.js\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 3);\nvar Class;\nmodule.watch(require(\"../../../core/class.js\"), {\n  \"default\": function (v) {\n    Class = v;\n  }\n}, 4);\nvar Type;\nmodule.watch(require(\"../type.js\"), {\n  \"default\": function (v) {\n    Type = v;\n  }\n}, 5);\nvar reservedKeywords;\nmodule.watch(require(\"../../../core/reserved_keywords.js\"), {\n  \"default\": function (v) {\n    reservedKeywords = v;\n  }\n}, 6);\nvar typePattern = Match.OneOf(Function, [Function]);\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  if (definition.fields === undefined) {\n    return;\n  } // Fields definition has to be an object.\n\n\n  if (!Match.test(definition.fields, Object)) {\n    throwParseError([{\n      'class': className\n    }, {\n      'property': 'fields'\n    }, 'Fields definition has to be an object']);\n  }\n\n  _each(definition.fields, function (fieldDefinition, fieldName) {\n    if (Match.test(fieldDefinition, typePattern)) {\n      fieldDefinition = {\n        name: fieldName,\n        type: fieldDefinition\n      };\n    } else if (Match.test(fieldDefinition, Object)) {\n      fieldDefinition = _extend(fieldDefinition, {\n        name: fieldName\n      });\n    } else {\n      throwParseError([{\n        'class': className\n      }, {\n        'property': 'fields'\n      }, {\n        'field': fieldName\n      }, 'Field definition has to be an object or type']);\n    } // Check if a field name is not reserved keyword.\n\n\n    if (_includes(reservedKeywords, fieldName)) {\n      throwParseError([{\n        'class': className\n      }, {\n        'method': fieldName\n      }, 'Reserved keyword']);\n    }\n\n    parsedDefinition.fields[fieldDefinition.name] = fieldDefinition;\n  });\n}\n\n;\nmodule.exportDefault(onParseDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"types\":{\"boolean.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/types/boolean.js                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _isObject;\n\nmodule.watch(require(\"lodash/isObject\"), {\n  \"default\": function (v) {\n    _isObject = v;\n  }\n}, 0);\nvar Type;\nmodule.watch(require(\"../type.js\"), {\n  \"default\": function (v) {\n    Type = v;\n  }\n}, 1);\nvar Validators;\nmodule.watch(require(\"../../validators/validators.js\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 2);\nType.create({\n  name: 'Boolean',\n  \"class\": Boolean,\n  cast: function (value) {\n    if (typeof value === 'boolean' && _isObject(value)) {\n      return value;\n    } else if (typeof value === 'string') {\n      if (value === '') {\n        // The \"this\" context is a field.\n        if (this.optional) {\n          return null;\n        } else {\n          return false;\n        }\n      } else if (value.toLowerCase() === 'false' || value === '0') {\n        return false;\n      }\n    }\n\n    return Boolean(value);\n  },\n  validate: function (args) {\n    Validators.boolean(args);\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"date.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/types/date.js                                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _isNaN;\n\nmodule.watch(require(\"lodash/isNaN\"), {\n  \"default\": function (v) {\n    _isNaN = v;\n  }\n}, 0);\n\nvar _isNumber;\n\nmodule.watch(require(\"lodash/isNumber\"), {\n  \"default\": function (v) {\n    _isNumber = v;\n  }\n}, 1);\nvar Type;\nmodule.watch(require(\"../type.js\"), {\n  \"default\": function (v) {\n    Type = v;\n  }\n}, 2);\nvar Validators;\nmodule.watch(require(\"../../validators/validators.js\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 3);\nType.create({\n  name: 'Date',\n  \"class\": Date,\n  cast: function (value) {\n    if (_isNumber(value)) {\n      return new Date(value);\n    } else if (typeof value === 'string') {\n      if (value === '') {\n        // The \"this\" context is a field.\n        if (this.optional) {\n          return null;\n        }\n      } else if (/^[0-9]+$/.test(value)) {\n        return new Date(parseInt(value, 10));\n      } else {\n        var time = Date.parse(value);\n\n        if (!_isNaN(time)) {\n          return new Date(time);\n        }\n      }\n    }\n\n    return value;\n  },\n  validate: function (args) {\n    Validators.date(args);\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"mongo_object_id.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/types/mongo_object_id.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Type;\nmodule.watch(require(\"../type.js\"), {\n  \"default\": function (v) {\n    Type = v;\n  }\n}, 0);\nvar Validators;\nmodule.watch(require(\"../../validators/validators.js\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 1);\nvar Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 2);\nType.create({\n  name: 'MongoObjectID',\n  \"class\": Mongo.ObjectID,\n  validate: function (args) {\n    Validators.mongoObjectID(args);\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"number.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/types/number.js                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _isNaN;\n\nmodule.watch(require(\"lodash/isNaN\"), {\n  \"default\": function (v) {\n    _isNaN = v;\n  }\n}, 0);\n\nvar _isNumber;\n\nmodule.watch(require(\"lodash/isNumber\"), {\n  \"default\": function (v) {\n    _isNumber = v;\n  }\n}, 1);\n\nvar _isObject;\n\nmodule.watch(require(\"lodash/isObject\"), {\n  \"default\": function (v) {\n    _isObject = v;\n  }\n}, 2);\nvar Type;\nmodule.watch(require(\"../type.js\"), {\n  \"default\": function (v) {\n    Type = v;\n  }\n}, 3);\nvar Validators;\nmodule.watch(require(\"../../validators/validators.js\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 4);\nType.create({\n  name: 'Number',\n  \"class\": Number,\n  cast: function (value) {\n    if (typeof value === 'string') {\n      if (value === '') {\n        // The \"this\" context is a field.\n        if (this.optional) {\n          return null;\n        } else {\n          return 0;\n        }\n      }\n    } else if (_isObject(value)) {\n      return value;\n    } else if (!_isNaN(value) && _isNumber(value)) {\n      return value;\n    }\n\n    var number = Number(value);\n    return !_isNaN(number) ? number : value;\n  },\n  validate: function (args) {\n    Validators.number(args);\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"object.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/types/object.js                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Type;\nmodule.watch(require(\"../type.js\"), {\n  \"default\": function (v) {\n    Type = v;\n  }\n}, 0);\nvar Validators;\nmodule.watch(require(\"../../validators/validators.js\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 1);\nType.create({\n  name: 'Object',\n  \"class\": Object,\n  validate: function (args) {\n    Validators.object(args);\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"string.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/types/string.js                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _isObject;\n\nmodule.watch(require(\"lodash/isObject\"), {\n  \"default\": function (v) {\n    _isObject = v;\n  }\n}, 0);\nvar Type;\nmodule.watch(require(\"../type.js\"), {\n  \"default\": function (v) {\n    Type = v;\n  }\n}, 1);\nvar Validators;\nmodule.watch(require(\"../../validators/validators.js\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 2);\nType.create({\n  name: 'String',\n  \"class\": String,\n  cast: function (value) {\n    if (typeof value === 'string' || _isObject(value)) {\n      return value;\n    }\n\n    return String(value);\n  },\n  validate: function (args) {\n    Validators.string(args);\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"utils\":{\"castNested.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/utils/castNested.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\nvar ObjectField;\nmodule.watch(require(\"../ObjectField\"), {\n  \"default\": function (v) {\n    ObjectField = v;\n  }\n}, 1);\nvar ListField;\nmodule.watch(require(\"../ListField\"), {\n  \"default\": function (v) {\n    ListField = v;\n  }\n}, 2);\n\nfunction castNested() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var doc = args.doc,\n      options = args.options;\n  var Class = doc.constructor;\n\n  _each(Class.getFields(), function (field) {\n    if (field instanceof ObjectField || field instanceof ListField && field.isClass) {\n      doc[field.name] = field.castValue(doc[field.name], options);\n    }\n  });\n}\n\n;\nmodule.exportDefault(castNested);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"castToClass.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/utils/castToClass.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getChildClass;\nmodule.watch(require(\"./getChildClass\"), {\n  \"default\": function (v) {\n    getChildClass = v;\n  }\n}, 0);\n\nfunction castToClass() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var Class = args.Class,\n      rawDoc = args.rawDoc,\n      options = args.options; // If the class has a type field, then we have to check if we are\n  // casting to some of the nested classes.\n\n  var ChildClass = getChildClass({\n    Class: Class,\n    rawDoc: rawDoc\n  }); // Create instance of an original class or some of its childs.\n\n  return new ChildClass(rawDoc, options);\n}\n\nmodule.exportDefault(castToClass);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"getAll.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/utils/getAll.js                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _defaults;\n\nmodule.watch(require(\"lodash/defaults\"), {\n  \"default\": function (v) {\n    _defaults = v;\n  }\n}, 0);\nvar getMany;\nmodule.watch(require(\"./getMany\"), {\n  \"default\": function (v) {\n    getMany = v;\n  }\n}, 1);\n\nfunction getAll(doc) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  // Prepare default options values.\n  _defaults(options, {\n    \"transient\": true,\n    immutable: true,\n    undefined: true\n  });\n\n  var Class = doc.constructor; // Get list of fields and their values.\n\n  return getMany(doc, Class.getFieldsNames(options), options);\n}\n\n;\nmodule.exportDefault(getAll);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"getChildClass.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/utils/getChildClass.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar config;\nmodule.watch(require(\"../../../core/config\"), {\n  \"default\": function (v) {\n    config = v;\n  }\n}, 0);\n\nfunction getChildClass() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var Class = args.Class,\n      rawDoc = args.rawDoc;\n  var typeField = Class.getTypeField(); // If a class does not have a type field, then we just return an original\n  // class.\n\n  if (!typeField) {\n    return Class;\n  } // If a class has a type field, then we have to check if a raw document\n  // contains information about child class type.\n\n\n  var ChildClass = Class.get(rawDoc[typeField]); // Return a child class if it exists and in fact it's a child of an original\n  // class.\n\n  if (ChildClass && ChildClass.isChildOf(Class)) {\n    return ChildClass;\n  } // Otherwise just return original class.\n\n\n  return Class;\n}\n\nmodule.exportDefault(getChildClass);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"getMany.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/utils/getMany.js                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _defaults;\n\nmodule.watch(require(\"lodash/defaults\"), {\n  \"default\": function (v) {\n    _defaults = v;\n  }\n}, 0);\n\nvar _map;\n\nmodule.watch(require(\"lodash/map\"), {\n  \"default\": function (v) {\n    _map = v;\n  }\n}, 1);\n\nvar _omitBy;\n\nmodule.watch(require(\"lodash/omitBy\"), {\n  \"default\": function (v) {\n    _omitBy = v;\n  }\n}, 2);\n\nvar _zipObject;\n\nmodule.watch(require(\"lodash/zipObject\"), {\n  \"default\": function (v) {\n    _zipObject = v;\n  }\n}, 3);\nvar getOne;\nmodule.watch(require(\"./getOne\"), {\n  \"default\": function (v) {\n    getOne = v;\n  }\n}, 4);\n\nfunction getMany(doc, fieldsNames) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  // Prepare default options values.\n  _defaults(options, {\n    \"transient\": true,\n    immutable: true,\n    undefined: true\n  });\n\n  var values = _zipObject(fieldsNames, _map(fieldsNames, function (fieldName) {\n    return getOne(doc, fieldName, options);\n  }));\n\n  if (options.undefined) {\n    return values;\n  } else {\n    return _omitBy(values, function (value) {\n      return value === undefined;\n    });\n  }\n}\n\n;\nmodule.exportDefault(getMany);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"getOne.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/utils/getOne.js                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _defaults;\n\nmodule.watch(require(\"lodash/defaults\"), {\n  \"default\": function (v) {\n    _defaults = v;\n  }\n}, 0);\nvar traverse;\nmodule.watch(require(\"./traverse.js\"), {\n  \"default\": function (v) {\n    traverse = v;\n  }\n}, 1);\n\nfunction getOne(doc, fieldName) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  // Prepare default options values.\n  _defaults(options, {\n    \"transient\": true,\n    immutable: true\n  });\n\n  return traverse(doc, fieldName, function (nestedDoc, nestedFieldName, field) {\n    // If a field does not exist than we don't return anything.\n    if (!field) {\n      return;\n    } // Don't get a transient field.\n\n\n    if (!options.transient && field.transient) {\n      return;\n    } // Don't get an immutable field.\n\n\n    if (!options.immutable && field.immutable) {\n      return;\n    } // Just return value.\n\n\n    return nestedDoc[nestedFieldName];\n  });\n}\n\n;\nmodule.exportDefault(getOne);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isNestedFieldName.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/utils/isNestedFieldName.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction isNestedFieldName(fieldPattern) {\n  return fieldPattern.indexOf('.') !== -1;\n}\n\n;\nmodule.exportDefault(isNestedFieldName);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"rawAll.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/utils/rawAll.js                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _defaults;\n\nmodule.watch(require(\"lodash/defaults\"), {\n  \"default\": function (v) {\n    _defaults = v;\n  }\n}, 0);\nvar rawMany;\nmodule.watch(require(\"./rawMany\"), {\n  \"default\": function (v) {\n    rawMany = v;\n  }\n}, 1);\n\nfunction rawAll(doc) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  // Prepare default options values.\n  _defaults(options, {\n    \"transient\": true,\n    immutable: true,\n    undefined: true\n  });\n\n  var Class = doc.constructor; // Get list of fields and their values.\n\n  return rawMany(doc, Class.getFieldsNames(options), options);\n}\n\n;\nmodule.exportDefault(rawAll);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"rawMany.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/utils/rawMany.js                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _defaults;\n\nmodule.watch(require(\"lodash/defaults\"), {\n  \"default\": function (v) {\n    _defaults = v;\n  }\n}, 0);\n\nvar _map;\n\nmodule.watch(require(\"lodash/map\"), {\n  \"default\": function (v) {\n    _map = v;\n  }\n}, 1);\n\nvar _omitBy;\n\nmodule.watch(require(\"lodash/omitBy\"), {\n  \"default\": function (v) {\n    _omitBy = v;\n  }\n}, 2);\n\nvar _zipObject;\n\nmodule.watch(require(\"lodash/zipObject\"), {\n  \"default\": function (v) {\n    _zipObject = v;\n  }\n}, 3);\nvar rawOne;\nmodule.watch(require(\"./rawOne\"), {\n  \"default\": function (v) {\n    rawOne = v;\n  }\n}, 4);\n\nfunction rawMany(doc, fieldsNames) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  // Prepare default options values.\n  _defaults(options, {\n    \"transient\": true,\n    immutable: true,\n    undefined: true\n  });\n\n  var values = _zipObject(fieldsNames, _map(fieldsNames, function (fieldName) {\n    return rawOne(doc, fieldName, options);\n  }));\n\n  if (options.undefined) {\n    return values;\n  } else {\n    return _omitBy(values, function (value) {\n      return value === undefined;\n    });\n  }\n}\n\n;\nmodule.exportDefault(rawMany);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"rawOne.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/utils/rawOne.js                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _defaults;\n\nmodule.watch(require(\"lodash/defaults\"), {\n  \"default\": function (v) {\n    _defaults = v;\n  }\n}, 0);\n\nvar _isArray;\n\nmodule.watch(require(\"lodash/isArray\"), {\n  \"default\": function (v) {\n    _isArray = v;\n  }\n}, 1);\n\nvar _map;\n\nmodule.watch(require(\"lodash/map\"), {\n  \"default\": function (v) {\n    _map = v;\n  }\n}, 2);\nvar AstroClass;\nmodule.watch(require(\"../../../core/class.js\"), {\n  \"default\": function (v) {\n    AstroClass = v;\n  }\n}, 3);\nvar traverse;\nmodule.watch(require(\"./traverse.js\"), {\n  \"default\": function (v) {\n    traverse = v;\n  }\n}, 4);\nvar rawAll;\nmodule.watch(require(\"./rawAll\"), {\n  \"default\": function (v) {\n    rawAll = v;\n  }\n}, 5);\n\nfunction rawOne(doc, fieldName) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  // Prepare default options values.\n  _defaults(options, {\n    \"transient\": true,\n    immutable: true,\n    // We still need the \"undefined\" options in the \"rawOne\" util, because we\n    // might want to get nested document that may have undefined fields.\n    undefined: true\n  });\n\n  return traverse(doc, fieldName, function (nestedDoc, nestedFieldName, field) {\n    // If a field does not exist than we don't return anything.\n    if (!field) {\n      return;\n    } // Don't get a transient field.\n\n\n    if (!options.transient && field.transient) {\n      return;\n    } // Don't get an immutable field.\n\n\n    if (!options.immutable && field.immutable) {\n      return;\n    } // Get field's value.\n\n\n    var fieldValue = nestedDoc[nestedFieldName];\n\n    if (fieldValue instanceof AstroClass) {\n      return rawAll(fieldValue, options);\n    } else if (_isArray(fieldValue)) {\n      return _map(fieldValue, function (element) {\n        if (element instanceof AstroClass) {\n          return rawAll(element, options);\n        } else {\n          return element;\n        }\n      });\n    } else {\n      return fieldValue;\n    }\n  });\n}\n\n;\nmodule.exportDefault(rawOne);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"resolveValues.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/utils/resolveValues.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _fromPairs;\n\nmodule.watch(require(\"lodash/fromPairs\"), {\n  \"default\": function (v) {\n    _fromPairs = v;\n  }\n}, 0);\n\nvar _map;\n\nmodule.watch(require(\"lodash/map\"), {\n  \"default\": function (v) {\n    _map = v;\n  }\n}, 1);\nvar config;\nmodule.watch(require(\"../../../core/config.js\"), {\n  \"default\": function (v) {\n    config = v;\n  }\n}, 2);\nvar getChildClass;\nmodule.watch(require(\"./getChildClass\"), {\n  \"default\": function (v) {\n    getChildClass = v;\n  }\n}, 3);\n\nfunction resolveValues() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var Class = args.Class,\n      rawDoc = args.rawDoc; // We can not resolve when dealing with non object value or the \"resolving\"\n  // config param is turned off.\n\n  if (!rawDoc || !config.resolving) {\n    return rawDoc;\n  } // When resolving values, we need to get resolve method for a child class\n  // if a given document is actually an instance of child class.\n\n\n  var ChildClass = getChildClass({\n    Class: Class,\n    rawDoc: rawDoc\n  }); // Construct resolved document from key-value pairs.\n\n  return _fromPairs(_map(ChildClass.getFields(), function (field) {\n    return [field.name, field.resolveValue(rawDoc)];\n  }));\n}\n\nmodule.exportDefault(resolveValues);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"set_all.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/utils/set_all.js                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _difference;\n\nmodule.watch(require(\"lodash/difference\"), {\n  \"default\": function (v) {\n    _difference = v;\n  }\n}, 0);\n\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 1);\n\nvar _forOwn;\n\nmodule.watch(require(\"lodash/forOwn\"), {\n  \"default\": function (v) {\n    _forOwn = v;\n  }\n}, 2);\n\nvar _keys;\n\nmodule.watch(require(\"lodash/keys\"), {\n  \"default\": function (v) {\n    _keys = v;\n  }\n}, 3);\nvar setOne;\nmodule.watch(require(\"./set_one.js\"), {\n  \"default\": function (v) {\n    setOne = v;\n  }\n}, 4);\n\nfunction setAll(doc, fieldsValues, options) {\n  var Class = doc.constructor; // Get names of the fields that are not present in the fieldsValues variable.\n\n  var fieldsNames = _difference(Class.getFieldsNames(), _keys(fieldsValues));\n\n  _each(fieldsNames, function (fieldName) {\n    setOne(doc, fieldName, undefined, options);\n  });\n\n  _forOwn(fieldsValues, function (fieldValue, fieldName) {\n    setOne(doc, fieldName, fieldValue, options);\n  });\n}\n\n;\nmodule.exportDefault(setAll);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"set_many.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/utils/set_many.js                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _forOwn;\n\nmodule.watch(require(\"lodash/forOwn\"), {\n  \"default\": function (v) {\n    _forOwn = v;\n  }\n}, 0);\nvar setOne;\nmodule.watch(require(\"./set_one.js\"), {\n  \"default\": function (v) {\n    setOne = v;\n  }\n}, 1);\n\nfunction setMany(doc, fieldsValues, options) {\n  // Set multiple fields.\n  _forOwn(fieldsValues, function (setValue, fieldName) {\n    setOne(doc, fieldName, setValue, options);\n  });\n}\n\n;\nmodule.exportDefault(setMany);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"set_one.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/utils/set_one.js                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _isObject;\n\nmodule.watch(require(\"lodash/isObject\"), {\n  \"default\": function (v) {\n    _isObject = v;\n  }\n}, 0);\nvar EJSON;\nmodule.watch(require(\"meteor/ejson\"), {\n  EJSON: function (v) {\n    EJSON = v;\n  }\n}, 1);\nvar traverse;\nmodule.watch(require(\"../utils/traverse\"), {\n  \"default\": function (v) {\n    traverse = v;\n  }\n}, 2);\nvar warn;\nmodule.watch(require(\"../../core/utils/warn\"), {\n  \"default\": function (v) {\n    warn = v;\n  }\n}, 3);\nvar ObjectField;\nmodule.watch(require(\"../ObjectField\"), {\n  \"default\": function (v) {\n    ObjectField = v;\n  }\n}, 4);\nvar ListField;\nmodule.watch(require(\"../ListField\"), {\n  \"default\": function (v) {\n    ListField = v;\n  }\n}, 5);\n\nfunction setOne(doc, fieldPattern, fieldValue, options) {\n  // If the \"clone\" option was set and the value being set is an object,\n  // then we clone value using the \"EJSON.clone\" function.\n  if (options.clone && _isObject(fieldValue)) {\n    fieldValue = EJSON.clone(fieldValue);\n  }\n\n  return traverse(doc, fieldPattern, function (nestedDoc, nestedFieldName, field) {\n    // If a field does not exist than we don't return anything.\n    if (!field) {\n      var Class = doc.constructor;\n      var className = Class.getName();\n      warn(\"[\\\"\" + className + \"\\\" class][\\\"\" + fieldPattern + \"\\\" field] \" + 'Trying to set a value of the field that does not exist in the class');\n      return;\n    } // Cast value if the \"cast\" option was set or if a field is instance of\n    // ObjectField or ListField.\n\n\n    if (options.cast || field instanceof ObjectField || field instanceof ListField && field.isClass) {\n      // If the \"cast\" option is set and we're casting array's element.\n      if (options.cast && field instanceof ListField && /\\d+/.test(nestedFieldName)) {\n        options.element = true;\n      }\n\n      fieldValue = field.castValue(fieldValue, options);\n    } // Set default value if the \"defualts\" option was set.\n\n\n    if (fieldValue === undefined && options.defaults) {\n      fieldValue = field.getDefault(nestedDoc);\n    } // Finally set casted/cloned/untouched value.\n\n\n    nestedDoc[nestedFieldName] = fieldValue;\n  });\n}\n\nmodule.exportDefault(setOne);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"traverse.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/fields/utils/traverse.js                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _isObject;\n\nmodule.watch(require(\"lodash/isObject\"), {\n  \"default\": function (v) {\n    _isObject = v;\n  }\n}, 0);\nvar isNestedFieldName;\nmodule.watch(require(\"./isNestedFieldName\"), {\n  \"default\": function (v) {\n    isNestedFieldName = v;\n  }\n}, 1);\nvar AstroClass;\nmodule.watch(require(\"../../../core/class\"), {\n  \"default\": function (v) {\n    AstroClass = v;\n  }\n}, 2);\n\nfunction traverse(doc, name, callback) {\n  if (!doc) {\n    return;\n  }\n\n  var Class;\n  var field; // Check whether the given field name is a nested field name.\n\n  if (!isNestedFieldName(name)) {\n    // Get a class.\n    var _Class = doc.constructor; // Get a field definition.\n\n    var _field = _Class.getField(name); // Execute the callback function passing the last nested document, the last\n    // segment name and a field object.\n\n\n    return callback(doc, name, _field);\n  } // Split the nested field pattern name by the \".\" character.\n\n\n  var segments = name.split('.'); // Get the last and one before the last index.\n\n  var lastIndex = segments.length - 1; // Traverse nested fields until reaching the last one from the pattern.\n\n  var next = function (nestedDoc, segmentIndex) {\n    segmentIndex = segmentIndex || 0; // Get a nested field name under the given index.\n\n    var segment = segments[segmentIndex]; // Check if a nested document is an instance of the Astronomy class and get\n    // a field object for a given field name;\n\n    if (nestedDoc instanceof AstroClass) {\n      // Get a class for of a nested document.\n      Class = nestedDoc.constructor; // Get a field object from the nested class.\n\n      field = Class.getField(segment);\n    }\n\n    if (segmentIndex === lastIndex) {\n      // Execute the callback function, if we reached the last nested document.\n      return callback(nestedDoc, segment, field);\n    } else if (_isObject(nestedDoc[segment])) {\n      // Go deeper if a value of the current nested document is an object.\n      return next(nestedDoc[segment], segmentIndex + 1);\n    }\n  }; // Start traversing nested fields.\n\n\n  return next(doc);\n}\n\n;\nmodule.exportDefault(traverse);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"helpers\":{\"module.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/helpers/module.js                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar module1 = module;\nvar Module;\nmodule1.watch(require(\"../../core/module.js\"), {\n  \"default\": function (v) {\n    Module = v;\n  }\n}, 0);\nvar onInitSchema;\nmodule1.watch(require(\"./hooks/onInitSchema.js\"), {\n  \"default\": function (v) {\n    onInitSchema = v;\n  }\n}, 1);\nvar onInitDefinition;\nmodule1.watch(require(\"./hooks/onInitDefinition.js\"), {\n  \"default\": function (v) {\n    onInitDefinition = v;\n  }\n}, 2);\nvar onParseDefinition;\nmodule1.watch(require(\"./hooks/onParseDefinition.js\"), {\n  \"default\": function (v) {\n    onParseDefinition = v;\n  }\n}, 3);\nvar onMergeDefinitions;\nmodule1.watch(require(\"./hooks/onMergeDefinitions.js\"), {\n  \"default\": function (v) {\n    onMergeDefinitions = v;\n  }\n}, 4);\nvar onApplyDefinition;\nmodule1.watch(require(\"./hooks/onApplyDefinition.js\"), {\n  \"default\": function (v) {\n    onApplyDefinition = v;\n  }\n}, 5);\nvar onInitClass;\nmodule1.watch(require(\"./hooks/onInitClass.js\"), {\n  \"default\": function (v) {\n    onInitClass = v;\n  }\n}, 6);\nModule.create({\n  name: 'methods',\n  aliases: ['helpers'],\n  onInitSchema: onInitSchema,\n  onInitDefinition: onInitDefinition,\n  onParseDefinition: onParseDefinition,\n  onMergeDefinitions: onMergeDefinitions,\n  onApplyDefinition: onApplyDefinition,\n  onInitClass: onInitClass\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"class_static_methods\":{\"getHelper.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/helpers/class_static_methods/getHelper.js                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction getHelper(helperName) {\n  return this.schema.helpers[helperName];\n}\n\n;\nmodule.exportDefault(getHelper);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"getHelpers.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/helpers/class_static_methods/getHelpers.js                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction getHelpers() {\n  return this.schema.helpers;\n}\n\n;\nmodule.exportDefault(getHelpers);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hasHelper.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/helpers/class_static_methods/hasHelper.js                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 0);\n\nfunction hasHelper(helperName) {\n  return _has(this.schema.helpers, helperName);\n}\n\n;\nmodule.exportDefault(hasHelper);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"hooks\":{\"onApplyDefinition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/helpers/hooks/onApplyDefinition.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n  var schema = Class.schema; // Add helpers to the class.\n\n  _each(parsedDefinition.helpers, function (helper, helperName) {\n    schema.helpers[helperName] = helper;\n    Class.prototype[helperName] = helper;\n  });\n}\n\n;\nmodule.exportDefault(onApplyDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"onInitClass.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/helpers/hooks/onInitClass.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar deprecated;\nmodule.watch(require(\"../../core/utils/deprecated\"), {\n  \"default\": function (v) {\n    deprecated = v;\n  }\n}, 0);\nvar getHelper;\nmodule.watch(require(\"../class_static_methods/getHelper.js\"), {\n  \"default\": function (v) {\n    getHelper = v;\n  }\n}, 1);\nvar getHelpers;\nmodule.watch(require(\"../class_static_methods/getHelpers.js\"), {\n  \"default\": function (v) {\n    getHelpers = v;\n  }\n}, 2);\nvar hasHelper;\nmodule.watch(require(\"../class_static_methods/hasHelper.js\"), {\n  \"default\": function (v) {\n    hasHelper = v;\n  }\n}, 3);\n\nfunction onInitClass(Class, className) {\n  Class.getHelper = getHelper;\n  Class.getHelpers = getHelpers;\n  Class.hasHelper = hasHelper; // Class static helpers.\n\n  Class.getMethod = function () {\n    deprecated(\"Methods have been renamed to helpers. Please use the \" + (\"\\\"\" + className + \".getHelper\\\" function.\"));\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return this.getHelper.apply(this, args);\n  };\n\n  Class.getMethods = function () {\n    deprecated(\"Methods have been renamed to helpers. Please use the \" + (\"\\\"\" + className + \".getHelpers\\\" function.\"));\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return this.getHelpers.apply(this, args);\n  };\n\n  Class.hasMethod = function () {\n    deprecated(\"Methods have been renamed to helpers. Please use the \" + (\"\\\"\" + className + \".hasHelper\\\" function.\"));\n\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return this.hasHelper.apply(this, args);\n  };\n}\n\n;\nmodule.exportDefault(onInitClass);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"onInitDefinition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/helpers/hooks/onInitDefinition.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction onInitDefinition(definition, className) {\n  definition.helpers = {};\n}\n\n;\nmodule.exportDefault(onInitDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"onInitSchema.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/helpers/hooks/onInitSchema.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction onInitSchema(schema, className) {\n  schema.helpers = {};\n}\n\n;\nmodule.exportDefault(onInitSchema);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"onMergeDefinitions.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/helpers/hooks/onMergeDefinitions.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nfunction onMergeDefinitions(targetDefinition, sourceDefinition, ClassName) {\n  _each(sourceDefinition.helpers, function (helper, helperName) {\n    targetDefinition.helpers[helperName] = helper;\n  });\n}\n\n;\nmodule.exportDefault(onMergeDefinitions);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"onParseDefinition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/helpers/hooks/onParseDefinition.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 0);\n\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 1);\n\nvar _includes;\n\nmodule.watch(require(\"lodash/includes\"), {\n  \"default\": function (v) {\n    _includes = v;\n  }\n}, 2);\nvar deprecated;\nmodule.watch(require(\"../../core/utils/deprecated\"), {\n  \"default\": function (v) {\n    deprecated = v;\n  }\n}, 3);\nvar throwParseError;\nmodule.watch(require(\"../../core/utils/throw_parse_error.js\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 4);\nvar reservedKeywords;\nmodule.watch(require(\"../../../core/reserved_keywords.js\"), {\n  \"default\": function (v) {\n    reservedKeywords = v;\n  }\n}, 5);\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  if (definition.methods) {\n    definition.helpers = definition.helpers || {};\n    deprecated(\"Methods have been renamed to helpers. Please use the \\\"helpers\\\" \" + (\"section in the \\\"\" + className + \"\\\" class definition.\"));\n\n    _each(definition.methods, function (method, methodName) {\n      if (_has(definition.helpers, methodName)) {\n        deprecated(\"Methods have been renamed to helpers. Please move the \" + (\"\\\"\" + methodName + \"\\\" method to the \\\"helpers\\\" section in the \") + (\"\\\"\" + className + \"\\\" class definition.\"));\n      } else {\n        definition.helpers[methodName] = method;\n      }\n    });\n  } // Check existence and validity of the \"helpers\" property.\n\n\n  if (definition.helpers !== undefined) {\n    if (!Match.test(definition.helpers, Object)) {\n      throwParseError([{\n        'class': className\n      }, {\n        'property': 'helpers'\n      }, 'Helpers definition has to be an object']);\n    }\n\n    _each(definition.helpers, function (helper, helperName) {\n      if (!Match.test(helper, Function)) {\n        throwParseError([{\n          'class': className\n        }, {\n          'helper': helperName\n        }, 'Helper has to be a function']);\n      }\n\n      if (_includes(reservedKeywords, helperName)) {\n        throwParseError([{\n          'class': className\n        }, {\n          'helper': helperName\n        }, 'Reserved keyword']);\n      }\n\n      parsedDefinition.helpers[helperName] = helper;\n    });\n  }\n}\n\n;\nmodule.exportDefault(onParseDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"indexes\":{\"module.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/indexes/module.js                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar module1 = module;\nvar Module;\nmodule1.watch(require(\"../../core/module.js\"), {\n  \"default\": function (v) {\n    Module = v;\n  }\n}, 0);\nvar onInitSchema;\nmodule1.watch(require(\"./hooks/init_schema.js\"), {\n  \"default\": function (v) {\n    onInitSchema = v;\n  }\n}, 1);\nvar onInitDefinition;\nmodule1.watch(require(\"./hooks/init_definition.js\"), {\n  \"default\": function (v) {\n    onInitDefinition = v;\n  }\n}, 2);\nvar onParseDefinition;\nmodule1.watch(require(\"./hooks/parse_definition.js\"), {\n  \"default\": function (v) {\n    onParseDefinition = v;\n  }\n}, 3);\nvar onMergeDefinitions;\nmodule1.watch(require(\"./hooks/merge_definitions.js\"), {\n  \"default\": function (v) {\n    onMergeDefinitions = v;\n  }\n}, 4);\nvar onApplyDefinition;\nmodule1.watch(require(\"./hooks/apply_definition.js\"), {\n  \"default\": function (v) {\n    onApplyDefinition = v;\n  }\n}, 5);\nvar onInitClass;\nmodule1.watch(require(\"./hooks/init_class.js\"), {\n  \"default\": function (v) {\n    onInitClass = v;\n  }\n}, 6);\nModule.create({\n  name: 'indexes',\n  onInitSchema: onInitSchema,\n  onInitDefinition: onInitDefinition,\n  onParseDefinition: onParseDefinition,\n  onMergeDefinitions: onMergeDefinitions,\n  onApplyDefinition: onApplyDefinition,\n  onInitClass: onInitClass\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"class_static_methods\":{\"get_index.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/indexes/class_static_methods/get_index.js                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction getIndex(indexName) {\n  return this.schema.indexes[indexName];\n}\n\n;\nmodule.exportDefault(getIndex);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"get_indexes.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/indexes/class_static_methods/get_indexes.js                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction getIndexes() {\n  return this.schema.indexes;\n}\n\n;\nmodule.exportDefault(getIndexes);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"has_index.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/indexes/class_static_methods/has_index.js                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 0);\n\nfunction hasIndex(indexName) {\n  return _has(this.schema.indexes, indexName);\n}\n\n;\nmodule.exportDefault(hasIndex);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"hooks\":{\"apply_definition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/indexes/hooks/apply_definition.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _concat;\n\nmodule.watch(require(\"lodash/concat\"), {\n  \"default\": function (v) {\n    _concat = v;\n  }\n}, 0);\n\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 1);\n\nvar _extend;\n\nmodule.watch(require(\"lodash/extend\"), {\n  \"default\": function (v) {\n    _extend = v;\n  }\n}, 2);\n\nvar _includes;\n\nmodule.watch(require(\"lodash/includes\"), {\n  \"default\": function (v) {\n    _includes = v;\n  }\n}, 3);\n\nvar _mapKeys;\n\nmodule.watch(require(\"lodash/mapKeys\"), {\n  \"default\": function (v) {\n    _mapKeys = v;\n  }\n}, 4);\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n  var Collection = Class.getCollection();\n\n  if (!Meteor.isServer || !Collection || Collection && !Collection._connection) {\n    return;\n  }\n\n  var schema = Class.schema;\n\n  function prefixIndexes(indexes, fieldName) {\n    // Prefix the fields property.\n    _each(indexes, function (index, indexName) {\n      index.fields = _mapKeys(index.fields, function (value, key) {\n        return fieldName + \".\" + key;\n      });\n\n      _extend(index.options, {\n        name: fieldName + \".\" + indexName\n      });\n    }); // Prefix object keys.\n\n\n    indexes = _mapKeys(indexes, function (index, indexName) {\n      return fieldName + \".\" + indexName;\n    });\n    return indexes;\n  } // Add indexes to the collection from nested classes.\n\n\n  var checkedClasses = [];\n\n  function collectNestedIndexes(Class) {\n    // Stop checking if a given class was already checked.\n    if (_includes(checkedClasses, Class)) {\n      return;\n    }\n\n    checkedClasses.push(Class);\n    var indexes = {};\n\n    var fields = _concat(Class.getObjectFields(), Class.getListFields(true));\n\n    _each(fields, function (field) {\n      _extend(indexes, prefixIndexes(field.type.class.definition.indexes, field.name), prefixIndexes(collectNestedIndexes(field.type.class), field.name));\n    });\n\n    return indexes;\n  }\n\n  var indexes = _extend({}, parsedDefinition.indexes, collectNestedIndexes(Class));\n\n  _each(indexes, function (index, indexName) {\n    schema.indexes[indexName] = index;\n\n    Collection._ensureIndex(index.fields, index.options);\n  });\n}\n\n;\nmodule.exportDefault(onApplyDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"init_class.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/indexes/hooks/init_class.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getIndex;\nmodule.watch(require(\"../class_static_methods/get_index.js\"), {\n  \"default\": function (v) {\n    getIndex = v;\n  }\n}, 0);\nvar getIndexes;\nmodule.watch(require(\"../class_static_methods/get_indexes.js\"), {\n  \"default\": function (v) {\n    getIndexes = v;\n  }\n}, 1);\nvar hasIndex;\nmodule.watch(require(\"../class_static_methods/has_index.js\"), {\n  \"default\": function (v) {\n    hasIndex = v;\n  }\n}, 2);\n\nfunction onInitClass(Class, className) {\n  // Class static methods.\n  Class.getIndex = getIndex;\n  Class.getIndexes = getIndexes;\n  Class.hasIndex = hasIndex;\n}\n\n;\nmodule.exportDefault(onInitClass);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"init_definition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/indexes/hooks/init_definition.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction onInitDefinition(definition, className) {\n  definition.indexes = {};\n}\n\n;\nmodule.exportDefault(onInitDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"init_schema.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/indexes/hooks/init_schema.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction onInitSchema(schema, className) {\n  schema.indexes = {};\n}\n\n;\nmodule.exportDefault(onInitSchema);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"merge_definitions.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/indexes/hooks/merge_definitions.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nfunction onMergeDefinitions(targetDefinition, sourceDefinition, ClassName) {\n  _each(sourceDefinition.indexes, function (index, indexName) {\n    targetDefinition.indexes[indexName] = index;\n  });\n}\n\n;\nmodule.exportDefault(onMergeDefinitions);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"parse_definition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/indexes/hooks/parse_definition.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\nvar throwParseError;\nmodule.watch(require(\"../../core/utils/throw_parse_error.js\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 1);\nvar fieldDefinitionPattern = Match.ObjectIncluding({\n  index: Match.OneOf(1, -1, String)\n});\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  // Check existence and validity of the \"indexes\" property.\n  if (definition.indexes !== undefined) {\n    _each(definition.indexes, function (index, indexName) {\n      if (!Match.test(index, Object)) {\n        throwParseError([{\n          'class': className\n        }, {\n          'index': indexName\n        }, 'Indexes definition has to be an object']);\n      }\n\n      index = {\n        fields: index.fields,\n        options: index.options || {}\n      };\n      index.options.name = index.options.name || indexName;\n      parsedDefinition.indexes[indexName] = index;\n    });\n  }\n\n  if (definition.fields !== undefined) {\n    _each(definition.fields, function (fieldDefinition, fieldName) {\n      // Stop if a field definition does not contain index information.\n      if (!Match.test(fieldDefinition, fieldDefinitionPattern)) {\n        return;\n      } // Prepare an index definition.\n\n\n      var indexDefinition = {\n        fields: {},\n        options: {\n          name: fieldName\n        }\n      };\n      indexDefinition.fields[fieldName] = fieldDefinition.index;\n      parsedDefinition.indexes[fieldName] = indexDefinition;\n    });\n  }\n}\n\n;\nmodule.exportDefault(onParseDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"methods\":{\"module.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/methods/module.js                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar module1 = module;\nvar Module;\nmodule1.watch(require(\"../../core/module.js\"), {\n  \"default\": function (v) {\n    Module = v;\n  }\n}, 0);\nvar onInitSchema;\nmodule1.watch(require(\"./hooks/onInitSchema.js\"), {\n  \"default\": function (v) {\n    onInitSchema = v;\n  }\n}, 1);\nvar onInitDefinition;\nmodule1.watch(require(\"./hooks/onInitDefinition.js\"), {\n  \"default\": function (v) {\n    onInitDefinition = v;\n  }\n}, 2);\nvar onParseDefinition;\nmodule1.watch(require(\"./hooks/onParseDefinition.js\"), {\n  \"default\": function (v) {\n    onParseDefinition = v;\n  }\n}, 3);\nvar onMergeDefinitions;\nmodule1.watch(require(\"./hooks/onMergeDefinitions.js\"), {\n  \"default\": function (v) {\n    onMergeDefinitions = v;\n  }\n}, 4);\nvar onApplyDefinition;\nmodule1.watch(require(\"./hooks/onApplyDefinition.js\"), {\n  \"default\": function (v) {\n    onApplyDefinition = v;\n  }\n}, 5);\nvar onInitClass;\nmodule1.watch(require(\"./hooks/onInitClass.js\"), {\n  \"default\": function (v) {\n    onInitClass = v;\n  }\n}, 6);\nvar onFinalizeClass;\nmodule1.watch(require(\"./hooks/onFinalizeClass.js\"), {\n  \"default\": function (v) {\n    onFinalizeClass = v;\n  }\n}, 7);\nModule.create({\n  name: 'meteorMethods',\n  onInitSchema: onInitSchema,\n  onInitDefinition: onInitDefinition,\n  onParseDefinition: onParseDefinition,\n  onMergeDefinitions: onMergeDefinitions,\n  onApplyDefinition: onApplyDefinition,\n  onInitClass: onInitClass,\n  onFinalizeClass: onFinalizeClass\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"class_prototype_methods\":{\"applyMethod.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/methods/class_prototype_methods/applyMethod.js                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar callMeteorMethod;\nmodule.watch(require(\"../../storage/utils/call_meteor_method\"), {\n  \"default\": function (v) {\n    callMeteorMethod = v;\n  }\n}, 0);\nvar rawAll;\nmodule.watch(require(\"../../fields/utils/rawAll\"), {\n  \"default\": function (v) {\n    rawAll = v;\n  }\n}, 1);\n\nfunction applyMethod(methodName, methodArgs, callback) {\n  var doc = this;\n  var Class = doc.constructor; // Prepare arguments to be sent to the \"/Astronomy/execute\" method.\n\n  var meteorMethodArgs = {\n    className: Class.getName(),\n    methodName: methodName,\n    methodArgs: methodArgs,\n    rawDoc: rawAll(doc, {\n      \"transient\": false\n    })\n  };\n\n  try {\n    return callMeteorMethod(Class, \"/Astronomy/execute\", [meteorMethodArgs], callback);\n  } catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n\n    throw err;\n  }\n}\n\nmodule.exportDefault(applyMethod);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"callMethod.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/methods/class_prototype_methods/callMethod.js                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _last;\n\nmodule.watch(require(\"lodash/last\"), {\n  \"default\": function (v) {\n    _last = v;\n  }\n}, 0);\nvar applyMethod;\nmodule.watch(require(\"./applyMethod\"), {\n  \"default\": function (v) {\n    applyMethod = v;\n  }\n}, 1);\n\nfunction callMethod(methodName) {\n  for (var _len = arguments.length, methodArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    methodArgs[_key - 1] = arguments[_key];\n  }\n\n  // Get the last argument.\n  var callback = _last(methodArgs); // If the last argument is a callback function, then remove the last\n  // argument.\n\n\n  if (typeof callback === 'function') {\n    methodArgs.pop();\n  } // If the last argument is not a callback function, then clear the\n  // \"callback\" variable.\n  else {\n      callback = undefined;\n    }\n\n  return applyMethod.call(this, methodName, methodArgs, callback);\n}\n\n;\nmodule.exportDefault(callMethod);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"class_static_methods\":{\"getMeteorMethod.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/methods/class_static_methods/getMeteorMethod.js                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction getMethod(methodName) {\n  return this.schema.methods[methodName];\n}\n\n;\nmodule.exportDefault(getMethod);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"getMeteorMethods.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/methods/class_static_methods/getMeteorMethods.js                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction getMethods() {\n  return this.schema.methods;\n}\n\n;\nmodule.exportDefault(getMethods);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hasMeteorMethod.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/methods/class_static_methods/hasMeteorMethod.js                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 0);\n\nfunction hasMethod(methodName) {\n  return _has(this.schema.methods, methodName);\n}\n\n;\nmodule.exportDefault(hasMethod);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"hooks\":{\"onApplyDefinition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/methods/hooks/onApplyDefinition.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n  var schema = Class.schema; // Add Meteor methods to the class schema.\n\n  _each(parsedDefinition.meteorMethods, function (method, methodName) {\n    schema.methods[methodName] = method;\n  });\n}\n\n;\nmodule.exportDefault(onApplyDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"onFinalizeClass.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/methods/hooks/onFinalizeClass.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _zipObject;\n\nmodule.watch(require(\"lodash/zipObject\"), {\n  \"default\": function (v) {\n    _zipObject = v;\n  }\n}, 0);\n\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 1);\nvar wrapMethod;\nmodule.watch(require(\"../utils/wrapMethod\"), {\n  \"default\": function (v) {\n    wrapMethod = v;\n  }\n}, 2);\nvar hasMeteorMethod;\nmodule.watch(require(\"../../storage/utils/has_meteor_method\"), {\n  \"default\": function (v) {\n    hasMeteorMethod = v;\n  }\n}, 3);\nvar astronomyExecute;\nmodule.watch(require(\"../meteor_methods/astronomyExecute\"), {\n  \"default\": function (v) {\n    astronomyExecute = v;\n  }\n}, 4);\nvar applyMethod;\nmodule.watch(require(\"../class_prototype_methods/applyMethod\"), {\n  \"default\": function (v) {\n    applyMethod = v;\n  }\n}, 5);\nvar callMethod;\nmodule.watch(require(\"../class_prototype_methods/callMethod\"), {\n  \"default\": function (v) {\n    callMethod = v;\n  }\n}, 6);\n\nfunction onFinalizeClass(Class, className) {\n  var schema = Class.schema;\n\n  if (schema.collection) {\n    var Collection = schema.collection;\n    var connection = Collection._connection || Meteor.connection || Meteor.server;\n\n    if (connection) {\n      if (!hasMeteorMethod(connection, \"/Astronomy/execute\")) {\n        // Add Meteor method.\n        connection.methods({\n          \"/Astronomy/execute\": astronomyExecute\n        });\n      }\n    } // Add Meteor methods to the class.\n\n\n    _each(schema.methods, function (method, methodName) {\n      Class.prototype[methodName] = wrapMethod(methodName);\n    }); // Add universal \"applyMethod\" and \"callMethod\" methods that can invoke any\n    // method even if only defined on the server.\n\n\n    Class.prototype.applyMethod = applyMethod;\n    Class.prototype.callMethod = callMethod;\n  }\n}\n\nmodule.exportDefault(onFinalizeClass);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"onInitClass.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/methods/hooks/onInitClass.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getMeteorMethod;\nmodule.watch(require(\"../class_static_methods/getMeteorMethod.js\"), {\n  \"default\": function (v) {\n    getMeteorMethod = v;\n  }\n}, 0);\nvar getMeteorMethods;\nmodule.watch(require(\"../class_static_methods/getMeteorMethods.js\"), {\n  \"default\": function (v) {\n    getMeteorMethods = v;\n  }\n}, 1);\nvar hasMeteorMethod;\nmodule.watch(require(\"../class_static_methods/hasMeteorMethod.js\"), {\n  \"default\": function (v) {\n    hasMeteorMethod = v;\n  }\n}, 2);\n\nfunction onInitClass(Class, className) {\n  // Class static methods.\n  Class.getMeteorMethod = getMeteorMethod;\n  Class.getMeteorMethods = getMeteorMethods;\n  Class.hasMeteorMethod = hasMeteorMethod;\n}\n\n;\nmodule.exportDefault(onInitClass);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"onInitDefinition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/methods/hooks/onInitDefinition.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction onInitDefinition(definition, className) {\n  definition.meteorMethods = {};\n}\n\n;\nmodule.exportDefault(onInitDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"onInitSchema.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/methods/hooks/onInitSchema.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction onInitSchema(schema, className) {\n  schema.methods = {};\n}\n\n;\nmodule.exportDefault(onInitSchema);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"onMergeDefinitions.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/methods/hooks/onMergeDefinitions.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nfunction onMergeDefinitions(targetDefinition, sourceDefinition, className) {\n  _each(sourceDefinition.meteorMethods, function (method, methodName) {\n    targetDefinition.meteorMethods[methodName] = method;\n  });\n}\n\n;\nmodule.exportDefault(onMergeDefinitions);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"onParseDefinition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/methods/hooks/onParseDefinition.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nvar _includes;\n\nmodule.watch(require(\"lodash/includes\"), {\n  \"default\": function (v) {\n    _includes = v;\n  }\n}, 1);\nvar throwParseError;\nmodule.watch(require(\"../../core/utils/throw_parse_error.js\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 2);\nvar reservedKeywords;\nmodule.watch(require(\"../../../core/reserved_keywords.js\"), {\n  \"default\": function (v) {\n    reservedKeywords = v;\n  }\n}, 3);\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  // Check existence and validity of the \"meteorMethods\" property.\n  if (definition.meteorMethods !== undefined) {\n    if (!Match.test(definition.meteorMethods, Object)) {\n      throwParseError([{\n        'class': className\n      }, {\n        'property': 'meteorMethods'\n      }, 'meteorMethods definition has to be an object']);\n    }\n\n    _each(definition.meteorMethods, function (meteorMethod, meteorMethodName) {\n      if (!Match.test(meteorMethod, Function)) {\n        throwParseError([{\n          'class': className\n        }, {\n          'meteorMethod': meteorMethodName\n        }, 'Meteor method has to be a function']);\n      }\n\n      if (_includes(reservedKeywords, meteorMethodName)) {\n        throwParseError([{\n          'class': className\n        }, {\n          'meteorMethod': meteorMethodName\n        }, 'Reserved keyword']);\n      }\n\n      parsedDefinition.meteorMethods[meteorMethodName] = meteorMethod;\n    });\n  }\n}\n\n;\nmodule.exportDefault(onParseDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"meteor_methods\":{\"astronomyExecute.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/methods/meteor_methods/astronomyExecute.js                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar AstroClass;\nmodule.watch(require(\"../../../core/class\"), {\n  \"default\": function (v) {\n    AstroClass = v;\n  }\n}, 0);\n\nfunction astronomyExecute() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  check(args, Match.Any);\n  var className = args.className,\n      rawDoc = args.rawDoc,\n      methodName = args.methodName,\n      methodArgs = args.methodArgs;\n  var Class = AstroClass.get(className);\n  var doc;\n\n  if (rawDoc._id) {\n    doc = Class.findOne(rawDoc._id);\n  }\n\n  if (doc) {\n    doc.set(rawDoc);\n  } else {\n    doc = new Class(rawDoc, {\n      clone: false\n    });\n  } // Get a method from the class. In some cases method may not be present,\n  // because it might be defined only on the server.\n\n\n  var method = Class.getMeteorMethod(methodName);\n\n  if (!method) {\n    return;\n  }\n\n  return method.apply(doc, methodArgs);\n}\n\n;\nmodule.exportDefault(astronomyExecute);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"utils\":{\"wrapMethod.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/methods/utils/wrapMethod.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _last;\n\nmodule.watch(require(\"lodash/last\"), {\n  \"default\": function (v) {\n    _last = v;\n  }\n}, 0);\nvar callMeteorMethod;\nmodule.watch(require(\"../../storage/utils/call_meteor_method\"), {\n  \"default\": function (v) {\n    callMeteorMethod = v;\n  }\n}, 1);\nvar rawAll;\nmodule.watch(require(\"../../fields/utils/rawAll\"), {\n  \"default\": function (v) {\n    rawAll = v;\n  }\n}, 2);\n\nfunction wrapMethod(methodName) {\n  return function () {\n    var doc = this;\n    var Class = doc.constructor; // Get the last argument.\n\n    for (var _len = arguments.length, methodArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      methodArgs[_key] = arguments[_key];\n    }\n\n    var callback = _last(methodArgs); // If the last argument is a callback function, then remove the last\n    // argument.\n\n\n    if (typeof callback === \"function\") {\n      methodArgs.pop();\n    } else {\n      // If the last argument is not a callback function, then clear the\n      // \"callback\" variable.\n      callback = undefined;\n    } // Call the \"/Astronomy/execute\" method.\n\n\n    return doc.applyMethod(methodName, methodArgs, callback);\n  };\n}\n\nmodule.exportDefault(wrapMethod);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"storage\":{\"module.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/module.js                                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar module1 = module;\nvar Module;\nmodule1.watch(require(\"../../core/module.js\"), {\n  \"default\": function (v) {\n    Module = v;\n  }\n}, 0);\nvar applyModifier;\nmodule1.watch(require(\"./utils/apply_modifier.js\"), {\n  \"default\": function (v) {\n    applyModifier = v;\n  }\n}, 1);\nvar callMeteorMethod;\nmodule1.watch(require(\"./utils/call_meteor_method.js\"), {\n  \"default\": function (v) {\n    callMeteorMethod = v;\n  }\n}, 2);\nvar classInsert;\nmodule1.watch(require(\"./utils/class_insert.js\"), {\n  \"default\": function (v) {\n    classInsert = v;\n  }\n}, 3);\nvar classUpdate;\nmodule1.watch(require(\"./utils/class_update.js\"), {\n  \"default\": function (v) {\n    classUpdate = v;\n  }\n}, 4);\nvar classRemove;\nmodule1.watch(require(\"./utils/class_remove.js\"), {\n  \"default\": function (v) {\n    classRemove = v;\n  }\n}, 5);\nvar documentInsert;\nmodule1.watch(require(\"./utils/document_insert.js\"), {\n  \"default\": function (v) {\n    documentInsert = v;\n  }\n}, 6);\nvar documentUpdate;\nmodule1.watch(require(\"./utils/document_update.js\"), {\n  \"default\": function (v) {\n    documentUpdate = v;\n  }\n}, 7);\nvar documentRemove;\nmodule1.watch(require(\"./utils/document_remove.js\"), {\n  \"default\": function (v) {\n    documentRemove = v;\n  }\n}, 8);\nvar getModified;\nmodule1.watch(require(\"./utils/getModified\"), {\n  \"default\": function (v) {\n    getModified = v;\n  }\n}, 9);\nvar getModifier;\nmodule1.watch(require(\"./utils/getModifier\"), {\n  \"default\": function (v) {\n    getModifier = v;\n  }\n}, 10);\nvar hasMeteorMethod;\nmodule1.watch(require(\"./utils/has_meteor_method.js\"), {\n  \"default\": function (v) {\n    hasMeteorMethod = v;\n  }\n}, 11);\nvar isModified;\nmodule1.watch(require(\"./utils/isModified\"), {\n  \"default\": function (v) {\n    isModified = v;\n  }\n}, 12);\nvar isRemote;\nmodule1.watch(require(\"./utils/is_remote.js\"), {\n  \"default\": function (v) {\n    isRemote = v;\n  }\n}, 13);\nvar omitUndefined;\nmodule1.watch(require(\"./utils/omit_undefined.js\"), {\n  \"default\": function (v) {\n    omitUndefined = v;\n  }\n}, 14);\nvar throwIfSelectorIsNotId;\nmodule1.watch(require(\"./utils/throw_if_selector_is_not_id.js\"), {\n  \"default\": function (v) {\n    throwIfSelectorIsNotId = v;\n  }\n}, 15);\nvar transformToClass;\nmodule1.watch(require(\"./utils/transformToClass\"), {\n  \"default\": function (v) {\n    transformToClass = v;\n  }\n}, 16);\nvar triggerBeforeSave;\nmodule1.watch(require(\"./utils/trigger_before_save.js\"), {\n  \"default\": function (v) {\n    triggerBeforeSave = v;\n  }\n}, 17);\nvar triggerBeforeInsert;\nmodule1.watch(require(\"./utils/trigger_before_insert.js\"), {\n  \"default\": function (v) {\n    triggerBeforeInsert = v;\n  }\n}, 18);\nvar triggerBeforeUpdate;\nmodule1.watch(require(\"./utils/trigger_before_update.js\"), {\n  \"default\": function (v) {\n    triggerBeforeUpdate = v;\n  }\n}, 19);\nvar triggerBeforeRemove;\nmodule1.watch(require(\"./utils/trigger_before_remove.js\"), {\n  \"default\": function (v) {\n    triggerBeforeRemove = v;\n  }\n}, 20);\nvar triggerAfterSave;\nmodule1.watch(require(\"./utils/trigger_after_save.js\"), {\n  \"default\": function (v) {\n    triggerAfterSave = v;\n  }\n}, 21);\nvar triggerAfterInsert;\nmodule1.watch(require(\"./utils/trigger_after_insert.js\"), {\n  \"default\": function (v) {\n    triggerAfterInsert = v;\n  }\n}, 22);\nvar triggerAfterUpdate;\nmodule1.watch(require(\"./utils/trigger_after_update.js\"), {\n  \"default\": function (v) {\n    triggerAfterUpdate = v;\n  }\n}, 23);\nvar triggerAfterRemove;\nmodule1.watch(require(\"./utils/trigger_after_remove.js\"), {\n  \"default\": function (v) {\n    triggerAfterRemove = v;\n  }\n}, 24);\nvar wrapTransform;\nmodule1.watch(require(\"./utils/wrapTransform.js\"), {\n  \"default\": function (v) {\n    wrapTransform = v;\n  }\n}, 25);\nvar onInitSchema;\nmodule1.watch(require(\"./hooks/init_schema.js\"), {\n  \"default\": function (v) {\n    onInitSchema = v;\n  }\n}, 26);\nvar onInitDefinition;\nmodule1.watch(require(\"./hooks/init_definition.js\"), {\n  \"default\": function (v) {\n    onInitDefinition = v;\n  }\n}, 27);\nvar onParseDefinition;\nmodule1.watch(require(\"./hooks/parse_definition.js\"), {\n  \"default\": function (v) {\n    onParseDefinition = v;\n  }\n}, 28);\nvar onMergeDefinitions;\nmodule1.watch(require(\"./hooks/merge_definitions.js\"), {\n  \"default\": function (v) {\n    onMergeDefinitions = v;\n  }\n}, 29);\nvar onApplyDefinition;\nmodule1.watch(require(\"./hooks/apply_definition.js\"), {\n  \"default\": function (v) {\n    onApplyDefinition = v;\n  }\n}, 30);\nvar onInitClass;\nmodule1.watch(require(\"./hooks/init_class.js\"), {\n  \"default\": function (v) {\n    onInitClass = v;\n  }\n}, 31);\nModule.create({\n  name: \"storage\",\n  onInitSchema: onInitSchema,\n  onInitDefinition: onInitDefinition,\n  onParseDefinition: onParseDefinition,\n  onMergeDefinitions: onMergeDefinitions,\n  onApplyDefinition: onApplyDefinition,\n  onInitClass: onInitClass,\n  utils: {\n    applyModifier: applyModifier,\n    callMeteorMethod: callMeteorMethod,\n    classInsert: classInsert,\n    classUpdate: classUpdate,\n    classRemove: classRemove,\n    documentInsert: documentInsert,\n    documentUpdate: documentUpdate,\n    documentRemove: documentRemove,\n    getModified: getModified,\n    getModifier: getModifier,\n    hasMeteorMethod: hasMeteorMethod,\n    isModified: isModified,\n    isRemote: isRemote,\n    omitUndefined: omitUndefined,\n    throwIfSelectorIsNotId: throwIfSelectorIsNotId,\n    transformToClass: transformToClass,\n    triggerBeforeSave: triggerBeforeSave,\n    triggerBeforeInsert: triggerBeforeInsert,\n    triggerBeforeUpdate: triggerBeforeUpdate,\n    triggerBeforeRemove: triggerBeforeRemove,\n    triggerAfterSave: triggerAfterSave,\n    triggerAfterInsert: triggerAfterInsert,\n    triggerAfterUpdate: triggerAfterUpdate,\n    triggerAfterRemove: triggerAfterRemove,\n    wrapTransform: wrapTransform\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"class_events\":{\"fromJSONValue.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/class_events/fromJSONValue.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction fromJSONValue(e) {\n  var doc = e.currentTarget;\n  doc._isNew = e.json.isNew;\n}\n\n;\nmodule.exportDefault(fromJSONValue);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"toJSONValue.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/class_events/toJSONValue.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction toJSONValue(e) {\n  var doc = e.currentTarget;\n  e.json.isNew = doc._isNew;\n}\n\n;\nmodule.exportDefault(toJSONValue);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"class_prototype_methods\":{\"copy.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/class_prototype_methods/copy.js                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction copy(save) {\n  var doc = this;\n  save = save || false; // Use EJSON to clone object.\n\n  var copy = EJSON.clone(doc); // Clear the \"_id\" field so when saving it will store it as a new document\n  // instead of updating the old one.\n\n  copy._id = null;\n  copy._isNew = true;\n\n  if (save) {\n    copy.save();\n  }\n\n  return copy;\n}\n\n;\nmodule.exportDefault(copy);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"getModified.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/class_prototype_methods/getModified.js                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar utilGetModified;\nmodule.watch(require(\"../utils/getModified\"), {\n  \"default\": function (v) {\n    utilGetModified = v;\n  }\n}, 0);\n\nfunction getModified() {\n  var doc = this;\n  return utilGetModified({\n    doc: doc,\n    \"transient\": true\n  });\n}\n\n;\nmodule.exportDefault(getModified);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"getModifiedValues.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/class_prototype_methods/getModifiedValues.js                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\nvar utilGetModified;\nmodule.watch(require(\"../utils/getModified\"), {\n  \"default\": function (v) {\n    utilGetModified = v;\n  }\n}, 1);\nvar rawOne;\nmodule.watch(require(\"../../fields/utils/rawOne\"), {\n  \"default\": function (v) {\n    rawOne = v;\n  }\n}, 2);\n\nfunction getModifiedValues() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var _options$old = options.old,\n      old = _options$old === void 0 ? false : _options$old,\n      _options$raw = options.raw,\n      raw = _options$raw === void 0 ? false : _options$raw;\n  var doc = this;\n  var Class = doc.constructor; // Get list of modified fields.\n\n  var modified = utilGetModified({\n    doc: doc,\n    \"transient\": true\n  }); // Get old or new values of a document.\n\n  if (old) {\n    doc = Class.findOne(doc._id);\n\n    if (!doc) {\n      doc = new Class();\n    }\n  } // Collect values for each field.\n\n\n  var values = {};\n\n  _each(modified, function (name) {\n    if (raw) {\n      values[name] = rawOne(doc, name);\n    } else {\n      values[name] = doc.get(name);\n    }\n  });\n\n  return values;\n}\n\n;\nmodule.exportDefault(getModifiedValues);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"getModifier.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/class_prototype_methods/getModifier.js                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar utilGetModifier;\nmodule.watch(require(\"../utils/getModifier\"), {\n  \"default\": function (v) {\n    utilGetModifier = v;\n  }\n}, 0);\n\nfunction getModifier() {\n  var doc = this;\n  return utilGetModifier({\n    doc: doc\n  });\n}\n\n;\nmodule.exportDefault(getModifier);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isModified.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/class_prototype_methods/isModified.js                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar utilIsModified;\nmodule.watch(require(\"../utils/isModified\"), {\n  \"default\": function (v) {\n    utilIsModified = v;\n  }\n}, 0);\n\nfunction isModified(pattern) {\n  var doc = this;\n  return utilIsModified({\n    doc: doc,\n    pattern: pattern,\n    \"transient\": true\n  });\n}\n\n;\nmodule.exportDefault(isModified);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"reload.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/class_prototype_methods/reload.js                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar castNested;\nmodule.watch(require(\"../../fields/utils/castNested\"), {\n  \"default\": function (v) {\n    castNested = v;\n  }\n}, 0);\nvar resolveValues;\nmodule.watch(require(\"../../fields/utils/resolveValues\"), {\n  \"default\": function (v) {\n    resolveValues = v;\n  }\n}, 1);\nvar Event;\nmodule.watch(require(\"../../events/event\"), {\n  \"default\": function (v) {\n    Event = v;\n  }\n}, 2);\n\nfunction reload() {\n  var doc = this;\n  var Class = doc.constructor; // The document has to be already saved in the collection.\n  // Get a document from the collection without transformation.\n\n  var rawDoc = Class.findOne(doc._id, {\n    transform: null\n  });\n\n  if (rawDoc) {\n    // Trigger the \"beforeInit\" event handlers.\n    doc.dispatchEvent(new Event('beforeInit')); // Set all fields.\n\n    doc.set(resolveValues({\n      Class: Class,\n      rawDoc: rawDoc\n    })); // Trigger the \"afterInit\" event handlers.\n\n    doc.dispatchEvent(new Event('afterInit'));\n  }\n}\n\n;\nmodule.exportDefault(reload);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"remove.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/class_prototype_methods/remove.js                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar documentRemove;\nmodule.watch(require(\"../utils/document_remove.js\"), {\n  \"default\": function (v) {\n    documentRemove = v;\n  }\n}, 0);\nvar isRemote;\nmodule.watch(require(\"../utils/is_remote.js\"), {\n  \"default\": function (v) {\n    isRemote = v;\n  }\n}, 1);\nvar callMeteorMethod;\nmodule.watch(require(\"../utils/call_meteor_method.js\"), {\n  \"default\": function (v) {\n    callMeteorMethod = v;\n  }\n}, 2);\n\nfunction remove() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var callback = arguments.length > 1 ? arguments[1] : undefined;\n  var doc = this;\n  var Class = doc.constructor; // If the first argument is callback function then reassign values.\n\n  if (arguments.length === 1 && Match.test(args, Function)) {\n    callback = args;\n    args = {};\n  } // Get variables from the first argument.\n\n\n  var _args = args,\n      _args$simulation = _args.simulation,\n      simulation = _args$simulation === void 0 ? true : _args$simulation; // If we are dealing with a remote collection and we are not on the server.\n\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    var methodName = '/Astronomy/remove'; // Prepare arguments for the meteor method.\n\n    var methodArgs = {\n      className: Class.getName(),\n      selector: {\n        _id: doc._id\n      },\n      simulation: simulation\n    };\n\n    try {\n      // Run meteor method.\n      var result = callMeteorMethod(Class, methodName, [methodArgs], callback); // Change the \"_isNew\" flag to \"true\". After removing a document can be\n      // saved again as a new one.\n\n      doc._isNew = true; // Return result of the meteor method call.\n\n      return result;\n    } // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n\n      throw err;\n    }\n  } // If we can just remove a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n\n\n  try {\n    // Prepare arguments.\n    var _methodArgs = {\n      doc: doc,\n      simulation: simulation,\n      trusted: true\n    };\n\n    var _result = documentRemove(_methodArgs);\n\n    if (callback) {\n      callback(undefined, _result);\n    }\n\n    return _result;\n  } catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n\n    throw err;\n  }\n}\n\nmodule.exportDefault(remove);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"save.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/class_prototype_methods/save.js                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _defaults;\n\nmodule.watch(require(\"lodash/defaults\"), {\n  \"default\": function (v) {\n    _defaults = v;\n  }\n}, 0);\n\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 1);\n\nvar _extend;\n\nmodule.watch(require(\"lodash/extend\"), {\n  \"default\": function (v) {\n    _extend = v;\n  }\n}, 2);\n\nvar _omit;\n\nmodule.watch(require(\"lodash/omit\"), {\n  \"default\": function (v) {\n    _omit = v;\n  }\n}, 3);\nvar DDP;\nmodule.watch(require(\"meteor/ddp\"), {\n  DDP: function (v) {\n    DDP = v;\n  }\n}, 4);\nvar documentInsert;\nmodule.watch(require(\"../utils/document_insert\"), {\n  \"default\": function (v) {\n    documentInsert = v;\n  }\n}, 5);\nvar documentUpdate;\nmodule.watch(require(\"../utils/document_update\"), {\n  \"default\": function (v) {\n    documentUpdate = v;\n  }\n}, 6);\nvar isRemote;\nmodule.watch(require(\"../utils/is_remote\"), {\n  \"default\": function (v) {\n    isRemote = v;\n  }\n}, 7);\nvar callMeteorMethod;\nmodule.watch(require(\"../utils/call_meteor_method\"), {\n  \"default\": function (v) {\n    callMeteorMethod = v;\n  }\n}, 8);\nvar rawAll;\nmodule.watch(require(\"../../fields/utils/rawAll\"), {\n  \"default\": function (v) {\n    rawAll = v;\n  }\n}, 9);\nvar castNested;\nmodule.watch(require(\"../../fields/utils/castNested\"), {\n  \"default\": function (v) {\n    castNested = v;\n  }\n}, 10);\nvar getModifier;\nmodule.watch(require(\"../../storage/utils/getModifier\"), {\n  \"default\": function (v) {\n    getModifier = v;\n  }\n}, 11);\n\nfunction save() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var callback = arguments.length > 1 ? arguments[1] : undefined;\n  var doc = this;\n  var Class = doc.constructor;\n  var Collection = Class.getCollection(); // If the first argument is callback function then reassign values.\n\n  if (arguments.length === 1 && Match.test(options, Function)) {\n    callback = options;\n    options = {};\n  } // Set default options.\n\n\n  _defaults(options, {\n    stopOnFirstError: true,\n    simulation: true,\n    forceUpdate: false\n  }); // Cast all fields.\n\n\n  if (options.cast) {\n    _each(Class.getFields(), function (field) {\n      doc[field.name] = field.castValue(doc[field.name], {\n        clone: false,\n        cast: true\n      });\n    });\n  } // Cast only nested fields.\n  else {\n      castNested({\n        doc: doc,\n        options: {\n          clone: false\n        }\n      });\n    } // Detect which operation we are executing.\n\n\n  var inserting = doc._isNew; // Generate ID if not provided.\n\n  if (inserting && !doc._id) {\n    var generateId = true; // Don't generate the id if we're the client and the 'outermost' call.\n    // This optimization saves us passing both the randomSeed and the id.\n    // Passing both is redundant.\n\n    if (Collection._isRemoteCollection()) {\n      var enclosing = DDP._CurrentInvocation.get();\n\n      if (!enclosing) {\n        generateId = false;\n      }\n    }\n\n    if (generateId) {\n      doc._id = Collection._makeNewID();\n    }\n  } // If we are dealing with a remote collection and we are not on the server.\n\n\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    var methodName = '/Astronomy/' + (inserting ? 'insert' : 'update'); // Prepare arguments for meteor method.\n\n    var methodArgs = {\n      className: Class.getName(),\n      stopOnFirstError: options.stopOnFirstError,\n      simulation: options.simulation\n    }; // Inserting.\n\n    if (inserting) {\n      _extend(methodArgs, {\n        rawDoc: rawAll(doc, {\n          \"transient\": false\n        })\n      });\n    } // Updating.\n    else {\n        // If the \"forceUpdate\" option was set then we don't run the \"getModifier\"\n        // function to get modifier and instead we just take entire raw object and\n        // remove the \"_id\" field as we can't update it.\n        var modifier = options.forceUpdate ? _omit(doc.raw(), ['_id']) : getModifier({\n          doc: doc\n        });\n\n        _extend(methodArgs, {\n          selector: {\n            _id: doc._id\n          },\n          modifier: modifier,\n          options: {},\n          fields: options.fields\n        });\n      }\n\n    try {\n      // Run Meteor method.\n      var result = callMeteorMethod(Class, methodName, [methodArgs], callback);\n\n      if (result && inserting) {\n        // In the insert operation the value return from the meteor method is\n        // a document ID.\n        doc._id = result;\n      } // Document is not new anymore.\n\n\n      doc._isNew = false;\n      return result;\n    } // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n\n      throw err;\n    }\n  } // If we can just insert a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n\n\n  try {\n    // Prepare arguments.\n    var _methodArgs = {\n      doc: doc,\n      stopOnFirstError: options.stopOnFirstError,\n      simulation: options.simulation,\n      trusted: true\n    };\n\n    if (inserting) {\n      var _result = documentInsert(_methodArgs);\n\n      if (callback) {\n        callback(undefined, _result);\n      }\n\n      return _result;\n    } else {\n      _methodArgs.fields = options.fields;\n\n      var _result2 = documentUpdate(_methodArgs);\n\n      if (callback) {\n        callback(undefined, _result2);\n      }\n\n      return _result2;\n    }\n  } catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n\n    throw err;\n  }\n}\n\nmodule.exportDefault(save);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"class_static_methods\":{\"find.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/class_static_methods/find.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({\n  find: function () {\n    return find;\n  },\n  findOne: function () {\n    return findOne;\n  }\n});\n\nvar _defaults;\n\nmodule.watch(require(\"lodash/defaults\"), {\n  \"default\": function (v) {\n    _defaults = v;\n  }\n}, 0);\n\nvar _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 1);\n\nvar _isNull;\n\nmodule.watch(require(\"lodash/isNull\"), {\n  \"default\": function (v) {\n    _isNull = v;\n  }\n}, 2);\n\nvar _map;\n\nmodule.watch(require(\"lodash/map\"), {\n  \"default\": function (v) {\n    _map = v;\n  }\n}, 3);\nvar config;\nmodule.watch(require(\"../../../core/config\"), {\n  \"default\": function (v) {\n    config = v;\n  }\n}, 4);\nvar wrapTransform;\nmodule.watch(require(\"../utils/wrapTransform\"), {\n  \"default\": function (v) {\n    wrapTransform = v;\n  }\n}, 5);\nvar transformToClass;\nmodule.watch(require(\"../utils/transformToClass\"), {\n  \"default\": function (v) {\n    transformToClass = v;\n  }\n}, 6);\nvar Event;\nmodule.watch(require(\"../../events/event\"), {\n  \"default\": function (v) {\n    Event = v;\n  }\n}, 7);\nvar Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 8);\n\nfunction createMethod(methodName) {\n  return function (selector, options) {\n    var Class = this;\n    var Collection = Class.getCollection(); // Get selector from arguments.\n\n    if (arguments.length === 0) {\n      selector = {};\n    } else {\n      selector = arguments[0];\n    } // If selector is null then just proceed to collection's find method.\n\n\n    if (_isNull(selector)) {\n      return Collection[methodName](selector, options);\n    } // Rewrite selector to make it an object.\n\n\n    selector = Mongo.Collection._rewriteSelector(selector); // Set default options.\n\n    options = _defaults({}, options, {\n      defaults: config.defaults,\n      children: true,\n      // We don't want to clone raw object in the \"find\" method.\n      clone: false\n    }); // Modify selector and options using the \"beforeFind\" event handlers.\n\n    if (!options.disableEvents) {\n      Class.dispatchEvent(new Event('beforeFind', {\n        selector: selector,\n        options: options\n      }));\n    }\n\n    var typeField = Class.getTypeField();\n\n    if ( // If it's an inherited class, then get only documents being instances of\n    // the subclass...\n    typeField && // ... however do not override a type property in selector when\n    // developer provided it and wants to deal with it by him/herself.\n    !_has(selector, typeField)) {\n      // If a class has child classes then we have to fetch document being\n      // instances of the parent and child classes depending on a value of\n      // the \"children\" option.\n      var children = Class.getChildren(options.children);\n\n      if (options.children && children.length > 0) {\n        children.push(Class);\n        selector[typeField] = {\n          $in: _map(children, function (Child) {\n            return Child.getName();\n          })\n        };\n      } else {\n        selector[typeField] = Class.getName();\n      }\n    }\n\n    var classTransform = Class.getTransform();\n\n    if (options.transform !== null && classTransform !== null) {\n      // Wrap the transform function with the \"wrapTransform\" function, which\n      // resolves values.\n      options.transform = wrapTransform({\n        Class: Class,\n        // First, try getting the transform function passed to the \"find\"\n        // method. Later, check if the transform function is defined in the\n        // class definition. If none of them contains a transform function, then\n        // get the default one.\n        transform: options.transform || classTransform || transformToClass({\n          Class: Class,\n          options: options\n        })\n      });\n    } // Execute the original method.\n\n\n    var result = Collection[methodName](selector, options); // Modify a query result using the \"afterFind\" event handlers.\n\n    if (!options.disableEvents) {\n      Class.dispatchEvent(new Event('afterFind', {\n        selector: selector,\n        options: options,\n        result: result\n      }));\n    }\n\n    return result;\n  };\n}\n\nvar find = createMethod('find');\nvar findOne = createMethod('findOne');\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"get_collection.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/class_static_methods/get_collection.js                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction getCollection() {\n  return this.schema.collection;\n}\n\n;\nmodule.exportDefault(getCollection);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"get_transform.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/class_static_methods/get_transform.js                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Class;\nmodule.watch(require(\"../../../core/class\"), {\n  \"default\": function (v) {\n    Class = v;\n  }\n}, 0);\n\nfunction getTransform() {\n  return this.schema.transform;\n}\n\nmodule.exportDefault(getTransform);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"get_type_field.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/class_static_methods/get_type_field.js                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction getTypeField() {\n  return this.schema.typeField;\n}\n\n;\nmodule.exportDefault(getTypeField);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"insert.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/class_static_methods/insert.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isRemote;\nmodule.watch(require(\"../utils/is_remote.js\"), {\n  \"default\": function (v) {\n    isRemote = v;\n  }\n}, 0);\nvar callMeteorMethod;\nmodule.watch(require(\"../utils/call_meteor_method.js\"), {\n  \"default\": function (v) {\n    callMeteorMethod = v;\n  }\n}, 1);\nvar classInsert;\nmodule.watch(require(\"../utils/class_insert.js\"), {\n  \"default\": function (v) {\n    classInsert = v;\n  }\n}, 2);\n\nfunction insert(rawDoc, callback) {\n  var Class = this;\n  var Collection = Class.getCollection(); // Prepare arguments.\n\n  var args = {\n    className: Class.getName(),\n    rawDoc: rawDoc\n  }; // Generate ID if not provided.\n\n  if (!rawDoc._id) {\n    var generateId = true; // Don't generate the id if we're the client and the 'outermost' call.\n    // This optimization saves us passing both the randomSeed and the id.\n    // Passing both is redundant.\n\n    if (Collection._isRemoteCollection()) {\n      var enclosing = DDP._CurrentInvocation.get();\n\n      if (!enclosing) {\n        generateId = false;\n      }\n    }\n\n    if (generateId) {\n      rawDoc._id = Collection._makeNewID();\n    }\n  } // If we are dealing with a remote collection and we are not on the server.\n\n\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    var methodName = '/Astronomy/insert';\n\n    try {\n      // Run Meteor method.\n      return callMeteorMethod(Class, methodName, [args], callback);\n    } // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n\n      throw err;\n    }\n  } // If we can just insert a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n\n\n  try {\n    // Set the \"trusted\" argument to true.\n    args.trusted = true; // Insert a document.\n\n    var result = classInsert(args);\n\n    if (callback) {\n      callback(undefined, result);\n    }\n\n    return result;\n  } catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n\n    throw err;\n  }\n}\n\nmodule.exportDefault(insert);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"is_secured.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/class_static_methods/is_secured.js                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 0);\n\nfunction isSecured(operation) {\n  if (_has(this.schema.secured, operation)) {\n    return this.schema.secured[operation];\n  } else {\n    var common = this.schema.secured.common;\n    return common !== undefined ? common : true;\n  }\n}\n\n;\nmodule.exportDefault(isSecured);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"remove.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/class_static_methods/remove.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isRemote;\nmodule.watch(require(\"../utils/is_remote.js\"), {\n  \"default\": function (v) {\n    isRemote = v;\n  }\n}, 0);\nvar callMeteorMethod;\nmodule.watch(require(\"../utils/call_meteor_method.js\"), {\n  \"default\": function (v) {\n    callMeteorMethod = v;\n  }\n}, 1);\nvar classRemove;\nmodule.watch(require(\"../utils/class_remove.js\"), {\n  \"default\": function (v) {\n    classRemove = v;\n  }\n}, 2);\n\nfunction remove(selector, options, callback) {\n  var Class = this; // If we omit options argument then it may be a callback function.\n\n  if (options instanceof Function) {\n    callback = options;\n    options = {};\n  } // Make sure that options is at least an empty object.\n\n\n  options = options || {}; // Prepare arguments.\n\n  var args = {\n    className: Class.getName(),\n    selector: selector,\n    options: options\n  }; // If we are dealing with a remote collection and we are not on the server.\n\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    var methodName = '/Astronomy/remove';\n\n    try {\n      // Run Meteor method.\n      return callMeteorMethod(Class, methodName, [args], callback);\n    } // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n\n      throw err;\n    }\n  } // If we can just remove a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n\n\n  try {\n    // Set the \"trusted\" argument to true.\n    args.trusted = true; // Remove a document.\n\n    var result = classRemove(args);\n\n    if (callback) {\n      callback(undefined, result);\n    }\n\n    return result;\n  } catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n\n    throw err;\n  }\n}\n\nmodule.exportDefault(remove);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"update.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/class_static_methods/update.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isRemote;\nmodule.watch(require(\"../utils/is_remote.js\"), {\n  \"default\": function (v) {\n    isRemote = v;\n  }\n}, 0);\nvar callMeteorMethod;\nmodule.watch(require(\"../utils/call_meteor_method.js\"), {\n  \"default\": function (v) {\n    callMeteorMethod = v;\n  }\n}, 1);\nvar classUpdate;\nmodule.watch(require(\"../utils/class_update.js\"), {\n  \"default\": function (v) {\n    classUpdate = v;\n  }\n}, 2);\n\nfunction update(selector, modifier, options, callback) {\n  var Class = this; // If we omit options argument then it may be a callback function.\n\n  if (options instanceof Function) {\n    callback = options;\n    options = {};\n  } // Make sure that options is at least an empty object.\n\n\n  options = options || {}; // Prepare arguments.\n\n  var args = {\n    className: Class.getName(),\n    selector: selector,\n    modifier: modifier,\n    options: options\n  }; // If we are dealing with a remote collection and we are not on the server.\n\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    var methodName = '/Astronomy/update';\n\n    try {\n      // Run Meteor method.\n      return callMeteorMethod(Class, methodName, [args], callback);\n    } // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n\n      throw err;\n    }\n  } // If we can just remove a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n\n\n  try {\n    // Set the \"trusted\" argument to true.\n    args.trusted = true; // Remove a document.\n\n    var result = classUpdate(args);\n\n    if (callback) {\n      callback(undefined, result);\n    }\n\n    return result;\n  } catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n\n    throw err;\n  }\n}\n\nmodule.exportDefault(update);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"upsert.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/class_static_methods/upsert.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isRemote;\nmodule.watch(require(\"../utils/is_remote.js\"), {\n  \"default\": function (v) {\n    isRemote = v;\n  }\n}, 0);\nvar callMeteorMethod;\nmodule.watch(require(\"../utils/call_meteor_method.js\"), {\n  \"default\": function (v) {\n    callMeteorMethod = v;\n  }\n}, 1);\nvar classUpsert;\nmodule.watch(require(\"../utils/class_upsert.js\"), {\n  \"default\": function (v) {\n    classUpsert = v;\n  }\n}, 2);\n\nfunction upsert(selector, modifier, options, callback) {\n  var Class = this; // If we omit options argument then it may be a callback function.\n\n  if (options instanceof Function) {\n    callback = options;\n    options = {};\n  } // Make sure that options is at least an empty object.\n\n\n  options = options || {}; // Prepare arguments.\n\n  var args = {\n    className: Class.getName(),\n    selector: selector,\n    modifier: modifier,\n    options: options\n  }; // If we are dealing with a remote collection and we are not on the server.\n\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    var methodName = '/Astronomy/upsert';\n\n    try {\n      // Run Meteor method.\n      return callMeteorMethod(Class, methodName, [args], callback);\n    } // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n\n      throw err;\n    }\n  } // If we can just remove a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n\n\n  try {\n    // Set the \"trusted\" argument to true.\n    args.trusted = true; // Remove a document.\n\n    var result = classUpsert(args);\n\n    if (callback) {\n      callback(undefined, result);\n    }\n\n    return result;\n  } catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n\n    throw err;\n  }\n}\n\nmodule.exportDefault(upsert);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"hooks\":{\"apply_definition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/hooks/apply_definition.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nvar _extend;\n\nmodule.watch(require(\"lodash/extend\"), {\n  \"default\": function (v) {\n    _extend = v;\n  }\n}, 1);\n\nvar _zipObject;\n\nmodule.watch(require(\"lodash/zipObject\"), {\n  \"default\": function (v) {\n    _zipObject = v;\n  }\n}, 2);\nvar resolveValues;\nmodule.watch(require(\"../../fields/utils/resolveValues\"), {\n  \"default\": function (v) {\n    resolveValues = v;\n  }\n}, 3);\nvar hasMeteorMethod;\nmodule.watch(require(\"../utils/has_meteor_method\"), {\n  \"default\": function (v) {\n    hasMeteorMethod = v;\n  }\n}, 4);\nvar find, findOne;\nmodule.watch(require(\"../class_static_methods/find\"), {\n  find: function (v) {\n    find = v;\n  },\n  findOne: function (v) {\n    findOne = v;\n  }\n}, 5);\nvar insert;\nmodule.watch(require(\"../class_static_methods/insert\"), {\n  \"default\": function (v) {\n    insert = v;\n  }\n}, 6);\nvar update;\nmodule.watch(require(\"../class_static_methods/update\"), {\n  \"default\": function (v) {\n    update = v;\n  }\n}, 7);\nvar upsert;\nmodule.watch(require(\"../class_static_methods/upsert\"), {\n  \"default\": function (v) {\n    upsert = v;\n  }\n}, 8);\nvar remove;\nmodule.watch(require(\"../class_static_methods/remove\"), {\n  \"default\": function (v) {\n    remove = v;\n  }\n}, 9);\nvar protoSave;\nmodule.watch(require(\"../class_prototype_methods/save\"), {\n  \"default\": function (v) {\n    protoSave = v;\n  }\n}, 10);\nvar protoRemove;\nmodule.watch(require(\"../class_prototype_methods/remove\"), {\n  \"default\": function (v) {\n    protoRemove = v;\n  }\n}, 11);\nvar protoReload;\nmodule.watch(require(\"../class_prototype_methods/reload\"), {\n  \"default\": function (v) {\n    protoReload = v;\n  }\n}, 12);\nvar protoCopy;\nmodule.watch(require(\"../class_prototype_methods/copy\"), {\n  \"default\": function (v) {\n    protoCopy = v;\n  }\n}, 13);\nvar protoGetModifier;\nmodule.watch(require(\"../class_prototype_methods/getModifier\"), {\n  \"default\": function (v) {\n    protoGetModifier = v;\n  }\n}, 14);\nvar protoGetModified;\nmodule.watch(require(\"../class_prototype_methods/getModified\"), {\n  \"default\": function (v) {\n    protoGetModified = v;\n  }\n}, 15);\nvar protoGetModifiedValues;\nmodule.watch(require(\"../class_prototype_methods/getModifiedValues\"), {\n  \"default\": function (v) {\n    protoGetModifiedValues = v;\n  }\n}, 16);\nvar protoIsModified;\nmodule.watch(require(\"../class_prototype_methods/isModified\"), {\n  \"default\": function (v) {\n    protoIsModified = v;\n  }\n}, 17);\nvar meteorInsert;\nmodule.watch(require(\"../meteor_methods/insert\"), {\n  \"default\": function (v) {\n    meteorInsert = v;\n  }\n}, 18);\nvar meteorUpdate;\nmodule.watch(require(\"../meteor_methods/update\"), {\n  \"default\": function (v) {\n    meteorUpdate = v;\n  }\n}, 19);\nvar meteorUpsert;\nmodule.watch(require(\"../meteor_methods/upsert\"), {\n  \"default\": function (v) {\n    meteorUpsert = v;\n  }\n}, 20);\nvar meteorRemove;\nmodule.watch(require(\"../meteor_methods/remove\"), {\n  \"default\": function (v) {\n    meteorRemove = v;\n  }\n}, 21);\nvar fromJSONValue;\nmodule.watch(require(\"../class_events/fromJSONValue\"), {\n  \"default\": function (v) {\n    fromJSONValue = v;\n  }\n}, 22);\nvar toJSONValue;\nmodule.watch(require(\"../class_events/toJSONValue\"), {\n  \"default\": function (v) {\n    toJSONValue = v;\n  }\n}, 23);\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n  var schema = Class.schema;\n\n  if (parsedDefinition.collection) {\n    var _Collection = schema.collection = parsedDefinition.collection; // Get type of the \"_id\" field.\n\n\n    var id = _Collection._makeNewID();\n\n    var IdType = id.constructor;\n    Class.extend({\n      // Add the \"_id\" field if not already added.\n      fields: {\n        _id: {\n          name: '_id',\n          type: IdType,\n          optional: true\n        }\n      },\n      // Add storage events.\n      events: {\n        toJSONValue: [toJSONValue],\n        fromJSONValue: [fromJSONValue]\n      }\n    }, ['fields', 'events']); // If it's a remote collection then we register methods on the connection\n    // object of the collection.\n\n    var connection = _Collection._connection;\n\n    if (connection) {\n      // Prepare meteor methods to be added.\n      var meteorMethods = {\n        '/Astronomy/insert': meteorInsert,\n        '/Astronomy/update': meteorUpdate,\n        '/Astronomy/upsert': meteorUpsert,\n        '/Astronomy/remove': meteorRemove\n      };\n\n      _each(meteorMethods, function (meteorMethod, methodName) {\n        if (!hasMeteorMethod(connection, methodName)) {\n          // Add meteor method.\n          connection.methods(_zipObject([methodName], [meteorMethod]));\n        }\n      });\n    } // Class static methods.\n\n\n    Class.find = find;\n    Class.findOne = findOne;\n    Class.insert = insert;\n    Class.update = update;\n    Class.upsert = upsert;\n    Class.remove = remove; // Class prototype methods.\n\n    Class.prototype.save = protoSave;\n    Class.prototype.remove = protoRemove;\n    Class.prototype.reload = protoReload;\n    Class.prototype.copy = protoCopy;\n    Class.prototype.getModifier = protoGetModifier;\n    Class.prototype.getModified = protoGetModified;\n    Class.prototype.getModifiedValues = protoGetModifiedValues;\n    Class.prototype.isModified = protoIsModified;\n  } // Apply type field.\n\n\n  if (parsedDefinition.typeField) {\n    var typeField = schema.typeField = parsedDefinition.typeField; // Add the type field if not already added.\n\n    if (!Class.hasField(typeField)) {\n      var _fields;\n\n      Class.extend({\n        fields: (_fields = {}, _fields[typeField] = {\n          type: String,\n          index: 1\n        }, _fields),\n        events: {\n          afterInit: function (e) {\n            var doc = e.currentTarget;\n            var Class = doc.constructor;\n            doc[typeField] = Class.getName();\n          }\n        }\n      }, ['fields', 'events']);\n    }\n\n    if (parsedDefinition.typeField) {\n      schema.typeField = parsedDefinition.typeField;\n    }\n  } // If class has already assigned collection.\n\n\n  var Collection = Class.getCollection();\n\n  if (Collection) {\n    // Apply the \"transform\" property only if it's a function or equal null.\n    if (typeof parsedDefinition.transform === 'function' || parsedDefinition.transform === null) {\n      schema.transform = parsedDefinition.transform;\n    }\n\n    if (parsedDefinition.secured !== undefined) {\n      _extend(schema.secured, parsedDefinition.secured);\n    }\n  }\n}\n\n;\nmodule.exportDefault(onApplyDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"init_class.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/hooks/init_class.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getCollection;\nmodule.watch(require(\"../class_static_methods/get_collection.js\"), {\n  \"default\": function (v) {\n    getCollection = v;\n  }\n}, 0);\nvar getTypeField;\nmodule.watch(require(\"../class_static_methods/get_type_field.js\"), {\n  \"default\": function (v) {\n    getTypeField = v;\n  }\n}, 1);\nvar getTransform;\nmodule.watch(require(\"../class_static_methods/get_transform.js\"), {\n  \"default\": function (v) {\n    getTransform = v;\n  }\n}, 2);\nvar isSecured;\nmodule.watch(require(\"../class_static_methods/is_secured.js\"), {\n  \"default\": function (v) {\n    isSecured = v;\n  }\n}, 3);\n\nfunction onInitClass(Class, className) {\n  // Class static methods.\n  Class.getCollection = getCollection;\n  Class.getTypeField = getTypeField;\n  Class.getTransform = getTransform;\n  Class.isSecured = isSecured;\n}\n\n;\nmodule.exportDefault(onInitClass);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"init_definition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/hooks/init_definition.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction onInitDefinition(definition, className) {\n  definition.collection = undefined;\n  definition.typeField = undefined;\n  definition.transform = undefined;\n  definition.secured = undefined;\n}\n\n;\nmodule.exportDefault(onInitDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"init_schema.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/hooks/init_schema.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction onInitSchema(schema, className) {\n  schema.collection = undefined;\n  schema.typeField = undefined;\n  schema.transform = undefined;\n  schema.secured = {\n    common: true\n  };\n}\n\n;\nmodule.exportDefault(onInitSchema);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"merge_definitions.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/hooks/merge_definitions.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _extend;\n\nmodule.watch(require(\"lodash/extend\"), {\n  \"default\": function (v) {\n    _extend = v;\n  }\n}, 0);\n\nfunction onMergeDefinitions(targetDefinition, sourceDefinition, ClassName) {\n  if (sourceDefinition.collection) {\n    targetDefinition.collection = sourceDefinition.collection;\n  }\n\n  if (sourceDefinition.typeField) {\n    targetDefinition.typeField = sourceDefinition.typeField;\n  }\n\n  if (sourceDefinition.transform !== undefined) {\n    targetDefinition.transform = sourceDefinition.transform;\n  }\n\n  if (sourceDefinition.secured !== undefined) {\n    targetDefinition.secured = _extend({}, targetDefinition.secured, sourceDefinition.secured);\n  }\n}\n\n;\nmodule.exportDefault(onMergeDefinitions);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"parse_definition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/hooks/parse_definition.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar throwParseError;\nmodule.watch(require(\"../../core/utils/throw_parse_error.js\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 0);\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  // Check existence and validity of the \"collection\" property.\n  if (definition.collection !== undefined) {\n    // The \"collection\" property has to be an instance of the\n    // \"Mongo.Collection\".\n    if (!(definition.collection instanceof Mongo.Collection)) {\n      throwParseError([{\n        'class': className\n      }, {\n        'property': 'collection'\n      }, 'Property value has to be an instance of \"Mongo.Collection\"']);\n    }\n\n    parsedDefinition.collection = definition.collection;\n  } // Check existence and validity of the \"typeField\" property.\n\n\n  if (definition.typeField !== undefined) {\n    // The \"typeField\" property has to be a string.\n    if (!Match.test(definition.typeField, String)) {\n      throwParseError([{\n        'class': className\n      }, {\n        'property': 'typeField'\n      }, 'Property value has to be a string']);\n    }\n\n    parsedDefinition.typeField = definition.typeField;\n  } // Check existence and validity of the \"transform\" property.\n\n\n  if (definition.transform !== undefined) {\n    // The \"transform\" property has to be a function.\n    if (!Match.test(definition.transform, Match.OneOf(Function, null))) {\n      throwParseError([{\n        'class': className\n      }, {\n        'property': 'transform'\n      }, 'Property value has to be a function or null']);\n    }\n\n    parsedDefinition.transform = definition.transform;\n  } // Check existence and validity of the \"secured\" property.\n\n\n  if (definition.secured !== undefined) {\n    if (!Match.test(definition.secured, Match.OneOf(Boolean, Object))) {\n      throwParseError([{\n        'class': className\n      }, {\n        'property': 'secured'\n      }, 'Property value has to be a boolean or an object with keys being ' + 'method name and values being boolean']);\n    }\n\n    if (typeof definition.secured === 'boolean') {\n      parsedDefinition.secured = {\n        common: definition.secured\n      };\n    } else {\n      parsedDefinition.secured = definition.secured;\n    }\n  }\n}\n\n;\nmodule.exportDefault(onParseDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"meteor_methods\":{\"insert.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/meteor_methods/insert.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar classInsert;\nmodule.watch(require(\"../utils/class_insert.js\"), {\n  \"default\": function (v) {\n    classInsert = v;\n  }\n}, 0);\nvar check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check: function (v) {\n    check = v;\n  },\n  Match: function (v) {\n    Match = v;\n  }\n}, 1);\n\nfunction insert(args) {\n  check(args, Match.Any);\n  return classInsert(args);\n}\n\n;\nmodule.exportDefault(insert);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"remove.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/meteor_methods/remove.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar classRemove;\nmodule.watch(require(\"../utils/class_remove.js\"), {\n  \"default\": function (v) {\n    classRemove = v;\n  }\n}, 0);\nvar check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check: function (v) {\n    check = v;\n  },\n  Match: function (v) {\n    Match = v;\n  }\n}, 1);\n\nfunction remove(args) {\n  check(args, Match.Any);\n  return classRemove(args);\n}\n\n;\nmodule.exportDefault(remove);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"update.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/meteor_methods/update.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar classUpdate;\nmodule.watch(require(\"../utils/class_update.js\"), {\n  \"default\": function (v) {\n    classUpdate = v;\n  }\n}, 0);\nvar check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check: function (v) {\n    check = v;\n  },\n  Match: function (v) {\n    Match = v;\n  }\n}, 1);\n\nfunction update(args) {\n  check(args, Match.Any);\n  return classUpdate(args);\n}\n\n;\nmodule.exportDefault(update);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"upsert.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/meteor_methods/upsert.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar classUpsert;\nmodule.watch(require(\"../utils/class_upsert.js\"), {\n  \"default\": function (v) {\n    classUpsert = v;\n  }\n}, 0);\nvar check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check: function (v) {\n    check = v;\n  },\n  Match: function (v) {\n    Match = v;\n  }\n}, 1);\n\nfunction upsert(args) {\n  check(args, Match.Any);\n  return classUpsert(args);\n}\n\n;\nmodule.exportDefault(upsert);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"utils\":{\"already_in_simulation.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/already_in_simulation.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar DDP;\nmodule.watch(require(\"meteor/ddp\"), {\n  DDP: function (v) {\n    DDP = v;\n  }\n}, 0);\n\nfunction alreadyInSimulation() {\n  var enclosing = DDP._CurrentInvocation.get();\n\n  return enclosing && enclosing.isSimulation;\n}\n\nmodule.exportDefault(alreadyInSimulation);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"apply_modifier.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/apply_modifier.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _size;\n\nmodule.watch(require(\"lodash/size\"), {\n  \"default\": function (v) {\n    _size = v;\n  }\n}, 0);\nvar config;\nmodule.watch(require(\"../../../core/config\"), {\n  \"default\": function (v) {\n    config = v;\n  }\n}, 1);\nvar castNested;\nmodule.watch(require(\"../../fields/utils/castNested\"), {\n  \"default\": function (v) {\n    castNested = v;\n  }\n}, 2);\nvar setAll;\nmodule.watch(require(\"../../fields/utils/set_all\"), {\n  \"default\": function (v) {\n    setAll = v;\n  }\n}, 3);\nvar LocalCollection;\nmodule.watch(require(\"meteor/minimongo\"), {\n  LocalCollection: function (v) {\n    LocalCollection = v;\n  }\n}, 4);\n\nfunction applyModifier() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var doc = args.doc,\n      modifier = args.modifier,\n      options = args.options; // Apply modifier only if provided.\n\n  if (modifier && _size(modifier) > 0) {\n    // Get raw object because the \"_modify\" method can only work with plain\n    // objects.\n    var rawDoc = doc.raw(); // Use Minimongo's the \"_modify\" method to apply modifier.\n\n    LocalCollection._modify(rawDoc, modifier, options); // Set all values back again on a document.\n\n\n    setAll(doc, rawDoc, {\n      defaults: config.defaults,\n      clone: false,\n      cast: false\n    });\n  }\n}\n\n;\nmodule.exportDefault(applyModifier);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"call_meteor_method.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/call_meteor_method.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar callMeteorMethod = function (Class, methodName, methodArgs, callback) {\n  var Collection = Class.getCollection();\n  var connection = Collection && Collection._connection;\n\n  if (!connection && (!Collection || !Collection._name)) {\n    connection = Meteor.connection || Meteor.server;\n  } // Prepare meteor method options.\n\n\n  var methodOptions = {\n    throwStubExceptions: true,\n    returnStubValue: true\n  };\n  return connection.apply(methodName, methodArgs, methodOptions, callback);\n};\n\nmodule.exportDefault(callMeteorMethod);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"class_insert.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/class_insert.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar AstroClass;\nmodule.watch(require(\"../../../core/class.js\"), {\n  \"default\": function (v) {\n    AstroClass = v;\n  }\n}, 0);\nvar documentInsert;\nmodule.watch(require(\"./document_insert.js\"), {\n  \"default\": function (v) {\n    documentInsert = v;\n  }\n}, 1);\n\nfunction classInsert() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var className = args.className,\n      rawDoc = args.rawDoc,\n      stopOnFirstError = args.stopOnFirstError,\n      fields = args.fields,\n      _args$simulation = args.simulation,\n      simulation = _args$simulation === void 0 ? true : _args$simulation,\n      _args$trusted = args.trusted,\n      trusted = _args$trusted === void 0 ? false : _args$trusted; // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  var Class = AstroClass.get(className); // Create a new document.\n\n  var doc = new Class(rawDoc); // Insert a document.\n\n  return documentInsert({\n    doc: doc,\n    stopOnFirstError: stopOnFirstError,\n    simulation: simulation,\n    trusted: trusted\n  });\n}\n\n;\nmodule.exportDefault(classInsert);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"class_remove.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/class_remove.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar AstroClass;\nmodule.watch(require(\"../../../core/class.js\"), {\n  \"default\": function (v) {\n    AstroClass = v;\n  }\n}, 0);\nvar alreadyInSimulation;\nmodule.watch(require(\"./already_in_simulation.js\"), {\n  \"default\": function (v) {\n    alreadyInSimulation = v;\n  }\n}, 1);\nvar throwIfSelectorIsNotId;\nmodule.watch(require(\"./throw_if_selector_is_not_id.js\"), {\n  \"default\": function (v) {\n    throwIfSelectorIsNotId = v;\n  }\n}, 2);\nvar documentRemove;\nmodule.watch(require(\"./document_remove.js\"), {\n  \"default\": function (v) {\n    documentRemove = v;\n  }\n}, 3);\n\nfunction classRemove() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var className = args.className,\n      selector = args.selector,\n      options = args.options,\n      _args$simulation = args.simulation,\n      simulation = _args$simulation === void 0 ? true : _args$simulation,\n      _args$trusted = args.trusted,\n      trusted = _args$trusted === void 0 ? false : _args$trusted; // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n\n  if (!simulation && !Meteor.isServer) {\n    return;\n  } // Throw exception if we are trying to perform an operation on more than one\n  // document at once and it's not trusted call.\n\n\n  if (!trusted && !alreadyInSimulation()) {\n    throwIfSelectorIsNotId(selector, 'remove');\n  }\n\n  var Class = AstroClass.get(className); // Get all documents matching selector.\n\n  var docs = Class.find(selector, options); // Prepare result of the method execution.\n\n  var result = 0;\n  docs.forEach(function (doc) {\n    // Update a document.\n    result += documentRemove({\n      doc: doc,\n      simulation: simulation,\n      trusted: trusted\n    });\n  });\n  return result;\n}\n\n;\nmodule.exportDefault(classRemove);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"class_update.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/class_update.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _extend;\n\nmodule.watch(require(\"lodash/extend\"), {\n  \"default\": function (v) {\n    _extend = v;\n  }\n}, 0);\n\nvar _mapKeys;\n\nmodule.watch(require(\"lodash/mapKeys\"), {\n  \"default\": function (v) {\n    _mapKeys = v;\n  }\n}, 1);\nvar AstroClass;\nmodule.watch(require(\"../../../core/class.js\"), {\n  \"default\": function (v) {\n    AstroClass = v;\n  }\n}, 2);\nvar alreadyInSimulation;\nmodule.watch(require(\"./already_in_simulation.js\"), {\n  \"default\": function (v) {\n    alreadyInSimulation = v;\n  }\n}, 3);\nvar throwIfSelectorIsNotId;\nmodule.watch(require(\"./throw_if_selector_is_not_id.js\"), {\n  \"default\": function (v) {\n    throwIfSelectorIsNotId = v;\n  }\n}, 4);\nvar documentUpdate;\nmodule.watch(require(\"./document_update.js\"), {\n  \"default\": function (v) {\n    documentUpdate = v;\n  }\n}, 5);\nvar applyModifier;\nmodule.watch(require(\"./apply_modifier.js\"), {\n  \"default\": function (v) {\n    applyModifier = v;\n  }\n}, 6);\nvar Minimongo;\nmodule.watch(require(\"meteor/minimongo\"), {\n  Minimongo: function (v) {\n    Minimongo = v;\n  }\n}, 7);\n\nfunction classUpdate() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var className = args.className,\n      selector = args.selector,\n      modifier = args.modifier,\n      options = args.options,\n      stopOnFirstError = args.stopOnFirstError,\n      fields = args.fields,\n      _args$simulation = args.simulation,\n      simulation = _args$simulation === void 0 ? true : _args$simulation,\n      _args$trusted = args.trusted,\n      trusted = _args$trusted === void 0 ? false : _args$trusted; // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n\n  if (!simulation && !Meteor.isServer) {\n    return;\n  } // Throw exception if we are trying to perform an operation on more than one\n  // document at once and it's not trusted call.\n\n\n  if (!trusted && !alreadyInSimulation()) {\n    throwIfSelectorIsNotId(selector, 'update');\n  }\n\n  var Class = AstroClass.get(className); // Get all documents matching selector.\n\n  var docs;\n  var oldDocs;\n\n  if (options.multi) {\n    docs = Class.find(selector, options); // Get all old documents in one batched query so that performance is\n    // improved when updating many documents. Map all documents to an object\n    // where properites are documents' IDs.\n\n    oldDocs = _mapKeys(Class.find(selector, _extend(options, {\n      defaults: false\n    })).fetch(), function (oldDoc) {\n      return oldDoc._id;\n    });\n  } else {\n    docs = Class.find(selector, _extend(options, {\n      limit: 1\n    })); // Get all old documents in one batched query so that performance is\n    // improved when updating many documents. Map all documents to an object\n    // where properites are documents' IDs.\n\n    oldDocs = _mapKeys(Class.find(selector, _extend(options, {\n      limit: 1,\n      defaults: false\n    })).fetch(), function (oldDoc) {\n      return oldDoc._id;\n    });\n  } // Create a minimongo matcher object to find array indexes on the projection\n  // operator use.\n\n\n  var matcher = new Minimongo.Matcher(selector); // Prepare result of the method execution.\n\n  var result = 0;\n  docs.forEach(function (doc) {\n    var oldDoc = oldDocs[doc._id]; // Use matcher to find array indexes in a given document that needs updating\n    // on the projection operator use.\n\n    var queryResult = matcher.documentMatches(doc); // Apply modifier.\n\n    applyModifier({\n      doc: doc,\n      modifier: modifier,\n      options: queryResult.arrayIndices ? {\n        arrayIndices: queryResult.arrayIndices\n      } : {}\n    }); // Update a document.\n\n    result += documentUpdate({\n      doc: doc,\n      stopOnFirstError: stopOnFirstError,\n      simulation: simulation,\n      fields: fields,\n      trusted: trusted,\n      oldDoc: oldDoc\n    });\n  });\n  return result;\n}\n\n;\nmodule.exportDefault(classUpdate);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"class_upsert.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/class_upsert.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _extend;\n\nmodule.watch(require(\"lodash/extend\"), {\n  \"default\": function (v) {\n    _extend = v;\n  }\n}, 0);\nvar AstroClass;\nmodule.watch(require(\"../../../core/class.js\"), {\n  \"default\": function (v) {\n    AstroClass = v;\n  }\n}, 1);\nvar alreadyInSimulation;\nmodule.watch(require(\"./already_in_simulation.js\"), {\n  \"default\": function (v) {\n    alreadyInSimulation = v;\n  }\n}, 2);\nvar throwIfSelectorIsNotId;\nmodule.watch(require(\"./throw_if_selector_is_not_id.js\"), {\n  \"default\": function (v) {\n    throwIfSelectorIsNotId = v;\n  }\n}, 3);\nvar documentInsert;\nmodule.watch(require(\"./document_insert.js\"), {\n  \"default\": function (v) {\n    documentInsert = v;\n  }\n}, 4);\nvar documentUpdate;\nmodule.watch(require(\"./document_update.js\"), {\n  \"default\": function (v) {\n    documentUpdate = v;\n  }\n}, 5);\nvar applyModifier;\nmodule.watch(require(\"./apply_modifier.js\"), {\n  \"default\": function (v) {\n    applyModifier = v;\n  }\n}, 6);\nvar Minimongo, LocalCollection;\nmodule.watch(require(\"meteor/minimongo\"), {\n  Minimongo: function (v) {\n    Minimongo = v;\n  },\n  LocalCollection: function (v) {\n    LocalCollection = v;\n  }\n}, 7);\n\nfunction classUpsert() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var className = args.className,\n      selector = args.selector,\n      modifier = args.modifier,\n      options = args.options,\n      stopOnFirstError = args.stopOnFirstError,\n      fields = args.fields,\n      _args$simulation = args.simulation,\n      simulation = _args$simulation === void 0 ? true : _args$simulation,\n      _args$trusted = args.trusted,\n      trusted = _args$trusted === void 0 ? false : _args$trusted; // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n\n  if (!simulation && !Meteor.isServer) {\n    return;\n  } // Throw exception if we are trying to perform an operation on more than one\n  // document at once and it's not trusted call.\n\n\n  if (!trusted && !alreadyInSimulation()) {\n    throwIfSelectorIsNotId(selector, 'upsert');\n  }\n\n  var Class = AstroClass.get(className); // Get all documents matching selector.\n\n  var docs;\n\n  if (options.multi) {\n    docs = Class.find(selector, options);\n  } else {\n    docs = Class.find(selector, _extend(options, {\n      limit: 1\n    }));\n  } // Create a minimongo matcher object to find array indexes on the projection\n  // operator use.\n\n\n  var matcher = new Minimongo.Matcher(selector); // Prepare result of the method execution.\n\n  var result = {\n    numberAffected: 0,\n    insertedId: null\n  };\n\n  if (docs.count() > 0) {\n    docs.forEach(function (doc) {\n      // Use matcher to find array indexes in a given document that needs updating\n      // on the projection operator use.\n      var queryResult = matcher.documentMatches(doc); // Apply modifier.\n\n      applyModifier({\n        doc: doc,\n        modifier: modifier,\n        options: queryResult.arrayIndices ? {\n          arrayIndices: queryResult.arrayIndices\n        } : {}\n      }); // Update a document.\n\n      result.numberAffected += documentUpdate({\n        doc: doc,\n        stopOnFirstError: stopOnFirstError,\n        simulation: simulation,\n        fields: fields,\n        trusted: trusted\n      });\n    });\n  } else {\n    var doc; // Create a new document from selector.\n\n    if (LocalCollection._createUpsertDocument) {\n      doc = new Class(LocalCollection._createUpsertDocument(selector, modifier));\n    } else if (LocalCollection._removeDollarOperators) {\n      doc = new Class(LocalCollection._removeDollarOperators(selector)); // Apply modifier for the insert operation.\n\n      applyModifier({\n        doc: doc,\n        modifier: modifier,\n        options: {\n          isInsert: true\n        }\n      });\n    } // Insert a document.\n\n\n    result.insertedId = documentInsert({\n      doc: doc,\n      stopOnFirstError: stopOnFirstError,\n      simulation: simulation,\n      trusted: trusted\n    });\n  }\n\n  return result;\n}\n\n;\nmodule.exportDefault(classUpsert);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"diff.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/diff.js                                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nvar _isArray;\n\nmodule.watch(require(\"lodash/isArray\"), {\n  \"default\": function (v) {\n    _isArray = v;\n  }\n}, 1);\n\nvar _isPlainObject;\n\nmodule.watch(require(\"lodash/isPlainObject\"), {\n  \"default\": function (v) {\n    _isPlainObject = v;\n  }\n}, 2);\n\nvar _keys;\n\nmodule.watch(require(\"lodash/keys\"), {\n  \"default\": function (v) {\n    _keys = v;\n  }\n}, 3);\n\nvar _noop;\n\nmodule.watch(require(\"lodash/noop\"), {\n  \"default\": function (v) {\n    _noop = v;\n  }\n}, 4);\n\nvar _union;\n\nmodule.watch(require(\"lodash/union\"), {\n  \"default\": function (v) {\n    _union = v;\n  }\n}, 5);\nvar EJSON;\nmodule.watch(require(\"meteor/ejson\"), {\n  EJSON: function (v) {\n    EJSON = v;\n  }\n}, 6);\n\nfunction diff() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var fieldName = args.fieldName,\n      newDoc = args.newDoc,\n      oldDoc = args.oldDoc,\n      _args$prefix = args.prefix,\n      prefix = _args$prefix === void 0 ? '' : _args$prefix,\n      result = args.result,\n      _args$onDiff = args.onDiff,\n      onDiff = _args$onDiff === void 0 ? _noop : _args$onDiff,\n      _args$onObjectDiff = args.onObjectDiff,\n      onObjectDiff = _args$onObjectDiff === void 0 ? _noop : _args$onObjectDiff,\n      _args$onListDiff = args.onListDiff,\n      onListDiff = _args$onListDiff === void 0 ? _noop : _args$onListDiff,\n      _args$onScalarDiff = args.onScalarDiff,\n      onScalarDiff = _args$onScalarDiff === void 0 ? _noop : _args$onScalarDiff; // Combine fields from old and new document.\n\n  var fieldsNames = _union(_keys(oldDoc), _keys(newDoc)); // Loop through all fields and check if they differ.\n\n\n  _each(fieldsNames, function (fieldName) {\n    var oldValue = oldDoc[fieldName];\n    var newValue = newDoc[fieldName];\n\n    if (!EJSON.equals(oldValue, newValue)) {\n      var nestedPrefix = (prefix && prefix + '.') + fieldName;\n      onDiff({\n        oldValue: oldValue,\n        newValue: newValue,\n        prefix: nestedPrefix,\n        result: result\n      }); // Compare two objects.\n\n      if (_isPlainObject(oldValue) && _isPlainObject(newValue)) {\n        onObjectDiff({\n          oldDoc: oldValue,\n          newDoc: newValue,\n          prefix: nestedPrefix,\n          result: result\n        });\n      } // Compare two lists.\n      else if (_isArray(oldValue) && _isArray(newValue)) {\n          onListDiff({\n            oldList: oldValue,\n            newList: newValue,\n            prefix: nestedPrefix,\n            result: result\n          });\n        } // Compare two scalars.\n        else {\n            onScalarDiff({\n              oldValue: oldValue,\n              newValue: newValue,\n              prefix: nestedPrefix,\n              result: result\n            });\n          }\n    }\n  });\n}\n\nmodule.exportDefault(diff);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"document_insert.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/document_insert.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _omitBy;\n\nmodule.watch(require(\"lodash/omitBy\"), {\n  \"default\": function (v) {\n    _omitBy = v;\n  }\n}, 0);\nvar castNested;\nmodule.watch(require(\"../../fields/utils/castNested\"), {\n  \"default\": function (v) {\n    castNested = v;\n  }\n}, 1);\nvar rawAll;\nmodule.watch(require(\"../../fields/utils/rawAll\"), {\n  \"default\": function (v) {\n    rawAll = v;\n  }\n}, 2);\nvar triggerBeforeSave;\nmodule.watch(require(\"./trigger_before_save\"), {\n  \"default\": function (v) {\n    triggerBeforeSave = v;\n  }\n}, 3);\nvar triggerBeforeInsert;\nmodule.watch(require(\"./trigger_before_insert\"), {\n  \"default\": function (v) {\n    triggerBeforeInsert = v;\n  }\n}, 4);\nvar triggerAfterSave;\nmodule.watch(require(\"./trigger_after_save\"), {\n  \"default\": function (v) {\n    triggerAfterSave = v;\n  }\n}, 5);\nvar triggerAfterInsert;\nmodule.watch(require(\"./trigger_after_insert\"), {\n  \"default\": function (v) {\n    triggerAfterInsert = v;\n  }\n}, 6);\nvar documentValidate;\nmodule.watch(require(\"../../validators/utils/document_validate\"), {\n  \"default\": function (v) {\n    documentValidate = v;\n  }\n}, 7);\n\nfunction documentInsert() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var doc = args.doc,\n      stopOnFirstError = args.stopOnFirstError,\n      fields = args.fields,\n      _args$simulation = args.simulation,\n      simulation = _args$simulation === void 0 ? true : _args$simulation,\n      _args$trusted = args.trusted,\n      trusted = _args$trusted === void 0 ? false : _args$trusted; // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  var Class = doc.constructor;\n  var Collection = Class.getCollection(); // Generate ID if not provided.\n\n  if (!doc._id) {\n    doc._id = Collection._makeNewID();\n  } // Check if a class is secured.\n\n\n  if (Class.isSecured('insert') && Meteor.isServer && !trusted) {\n    throw new Meteor.Error(403, 'Inserting from the client is not allowed');\n  } // Cast nested documents.\n\n\n  castNested({\n    doc: doc,\n    options: {\n      clone: false\n    }\n  }); // Trigger before events.\n\n  triggerBeforeSave(doc, trusted);\n  triggerBeforeInsert(doc, trusted); // Cast nested documents.\n\n  castNested({\n    doc: doc,\n    options: {\n      clone: false\n    }\n  }); // Validate a document.\n\n  documentValidate({\n    doc: doc,\n    fields: fields,\n    stopOnFirstError: stopOnFirstError,\n    simulation: simulation\n  }); // Get plain values of all fields. Pick only values that we want to save.\n\n  var values = rawAll(doc, {\n    \"transient\": false\n  });\n  values = _omitBy(values, function (value) {\n    return value === undefined;\n  }); // Insert a document.\n\n  try {\n    // There is a difference in what the insert method returns depending on the\n    // environment. On the client it returns an inserted document id, on the\n    // server it returns array of inserted documents. So we always return the\n    // generated id. We can't send an entire document because it could be a\n    // security issue if we are not subscribed to all fields of a document.\n    Collection._collection.insert(values); // Change the \"_isNew\" flag to \"false\". Mark a document as not new.\n\n\n    doc._isNew = false; // Trigger after events.\n\n    triggerAfterInsert(doc, trusted);\n    triggerAfterSave(doc, trusted);\n    return doc._id;\n  } catch (err) {\n    if (err.name === 'MongoError' || err.name === 'MinimongoError') {\n      throw new Meteor.Error(409, err.toString());\n    } else {\n      throw err;\n    }\n  }\n}\n\n;\nmodule.exportDefault(documentInsert);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"document_remove.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/document_remove.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar triggerBeforeRemove;\nmodule.watch(require(\"./trigger_before_remove.js\"), {\n  \"default\": function (v) {\n    triggerBeforeRemove = v;\n  }\n}, 0);\nvar triggerAfterRemove;\nmodule.watch(require(\"./trigger_after_remove.js\"), {\n  \"default\": function (v) {\n    triggerAfterRemove = v;\n  }\n}, 1);\n\nfunction documentRemove() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var doc = args.doc,\n      _args$simulation = args.simulation,\n      simulation = _args$simulation === void 0 ? true : _args$simulation,\n      _args$trusted = args.trusted,\n      trusted = _args$trusted === void 0 ? false : _args$trusted; // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  var Class = doc.constructor;\n  var Collection = Class.getCollection(); // Remove only when document has the \"_id\" field (it's persisted).\n\n  if (doc._isNew) {\n    return 0;\n  } // Check if a class is secured.\n\n\n  if (Class.isSecured('remove') && Meteor.isServer && !trusted) {\n    throw new Meteor.Error(403, 'Removing from the client is not allowed');\n  } // Trigger before events.\n\n\n  triggerBeforeRemove(doc, trusted); // Remove a document.\n\n  try {\n    var result = Collection._collection.remove({\n      _id: doc._id\n    }); // Mark a document as new, so it will be possible to save it again.\n\n\n    doc._isNew = true; // Trigger after events.\n\n    triggerAfterRemove(doc, trusted);\n    return result;\n  } catch (err) {\n    if (err.name === 'MongoError' || err.name === 'MinimongoError') {\n      throw new Meteor.Error(409, err.toString());\n    } else {\n      throw err;\n    }\n  }\n}\n\n;\nmodule.exportDefault(documentRemove);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"document_update.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/document_update.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _omit;\n\nmodule.watch(require(\"lodash/omit\"), {\n  \"default\": function (v) {\n    _omit = v;\n  }\n}, 0);\n\nvar _size;\n\nmodule.watch(require(\"lodash/size\"), {\n  \"default\": function (v) {\n    _size = v;\n  }\n}, 1);\nvar castNested;\nmodule.watch(require(\"../../fields/utils/castNested\"), {\n  \"default\": function (v) {\n    castNested = v;\n  }\n}, 2);\nvar triggerBeforeSave;\nmodule.watch(require(\"./trigger_before_save\"), {\n  \"default\": function (v) {\n    triggerBeforeSave = v;\n  }\n}, 3);\nvar triggerBeforeUpdate;\nmodule.watch(require(\"./trigger_before_update\"), {\n  \"default\": function (v) {\n    triggerBeforeUpdate = v;\n  }\n}, 4);\nvar triggerAfterSave;\nmodule.watch(require(\"./trigger_after_save\"), {\n  \"default\": function (v) {\n    triggerAfterSave = v;\n  }\n}, 5);\nvar triggerAfterUpdate;\nmodule.watch(require(\"./trigger_after_update\"), {\n  \"default\": function (v) {\n    triggerAfterUpdate = v;\n  }\n}, 6);\nvar isModified;\nmodule.watch(require(\"./isModified\"), {\n  \"default\": function (v) {\n    isModified = v;\n  }\n}, 7);\nvar getModifier;\nmodule.watch(require(\"./getModifier\"), {\n  \"default\": function (v) {\n    getModifier = v;\n  }\n}, 8);\nvar documentValidate;\nmodule.watch(require(\"../../validators/utils/document_validate\"), {\n  \"default\": function (v) {\n    documentValidate = v;\n  }\n}, 9);\n\nfunction documentUpdate() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var doc = args.doc,\n      stopOnFirstError = args.stopOnFirstError,\n      fields = args.fields,\n      _args$simulation = args.simulation,\n      simulation = _args$simulation === void 0 ? true : _args$simulation,\n      _args$forceUpdate = args.forceUpdate,\n      forceUpdate = _args$forceUpdate === void 0 ? false : _args$forceUpdate,\n      _args$trusted = args.trusted,\n      trusted = _args$trusted === void 0 ? false : _args$trusted,\n      oldDoc = args.oldDoc; // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  var Class = doc.constructor;\n  var Collection = Class.getCollection(); // Return if there were no modifications.\n\n  if (!isModified({\n    doc: doc,\n    fields: fields\n  })) {\n    // Validate a document even if there were no modifications.\n    documentValidate({\n      doc: doc,\n      fields: fields,\n      stopOnFirstError: stopOnFirstError,\n      simulation: simulation\n    }); // 0 documents were modified.\n\n    return 0;\n  } // Check if a class is secured.\n\n\n  if (Class.isSecured('update') && Meteor.isServer && !trusted) {\n    throw new Meteor.Error(403, 'Updating from the client is not allowed');\n  } // Cast nested documents.\n\n\n  castNested({\n    doc: doc,\n    options: {\n      clone: false\n    }\n  }); // Trigger before events.\n\n  triggerBeforeSave(doc, trusted);\n  triggerBeforeUpdate(doc, trusted); // Cast nested documents.\n\n  castNested({\n    doc: doc,\n    options: {\n      clone: false\n    }\n  }); // Validate a document.\n\n  documentValidate({\n    doc: doc,\n    fields: fields,\n    stopOnFirstError: stopOnFirstError,\n    simulation: simulation\n  }); // Get modifier.\n  // If the \"forceUpdate\" option was set then we don't run the \"getModifier\"\n  // function to get modifier and instead we just take entire raw object and\n  // remove the \"_id\" field as we can't update it.\n\n  var modifier = forceUpdate ? _omit(doc.raw(), ['_id']) : getModifier({\n    doc: doc,\n    fields: fields,\n    oldDoc: oldDoc\n  }); // Stop execution is a modifier is empty.\n\n  if (_size(modifier) === 0) {\n    return 0;\n  } // Update a document.\n\n\n  try {\n    var result = Collection._collection.update({\n      _id: doc._id\n    }, modifier); // Trigger after events.\n\n\n    triggerAfterUpdate(doc, trusted);\n    triggerAfterSave(doc, trusted);\n    return result;\n  } catch (err) {\n    if (err.name === 'MongoError' || err.name === 'MinimongoError') {\n      throw new Meteor.Error(409, err.toString());\n    } else {\n      throw err;\n    }\n  }\n}\n\n;\nmodule.exportDefault(documentUpdate);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"getModified.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/getModified.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar module1 = module;\n\nvar _each;\n\nmodule1.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nvar _isPlainObject;\n\nmodule1.watch(require(\"lodash/isPlainObject\"), {\n  \"default\": function (v) {\n    _isPlainObject = v;\n  }\n}, 1);\n\nvar _range;\n\nmodule1.watch(require(\"lodash/range\"), {\n  \"default\": function (v) {\n    _range = v;\n  }\n}, 2);\nvar EJSON;\nmodule1.watch(require(\"meteor/ejson\"), {\n  EJSON: function (v) {\n    EJSON = v;\n  }\n}, 3);\nvar throwParseError;\nmodule1.watch(require(\"../../core/utils/throw_parse_error.js\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 4);\nvar rawMany;\nmodule1.watch(require(\"../../fields/utils/rawMany\"), {\n  \"default\": function (v) {\n    rawMany = v;\n  }\n}, 5);\nvar diff;\nmodule1.watch(require(\"./diff\"), {\n  \"default\": function (v) {\n    diff = v;\n  }\n}, 6);\nvar handlers = {};\n\nhandlers.onDiff = function (_ref) {\n  var prefix = _ref.prefix,\n      result = _ref.result;\n  result.push(prefix);\n};\n\nhandlers.onObjectDiff = function (_ref2) {\n  var oldDoc = _ref2.oldDoc,\n      newDoc = _ref2.newDoc,\n      prefix = _ref2.prefix,\n      result = _ref2.result;\n  diff((0, _objectSpread2.default)({\n    oldDoc: oldDoc,\n    newDoc: newDoc,\n    prefix: prefix,\n    result: result\n  }, handlers));\n};\n\nhandlers.onListDiff = function (_ref3) {\n  var oldList = _ref3.oldList,\n      newList = _ref3.newList,\n      prefix = _ref3.prefix,\n      result = _ref3.result;\n  var maxLength = Math.max(oldList.length, newList.length);\n\n  _each(_range(maxLength), function (index) {\n    var arrayPrefix = prefix + \".\" + index;\n    var oldElement = oldList[index];\n    var newElement = newList[index];\n\n    if (!EJSON.equals(oldElement, newElement)) {\n      result.push(arrayPrefix); // If both array elements are object, then we perform diff between\n      // them.\n\n      if (_isPlainObject(oldElement) && _isPlainObject(newElement)) {\n        // Get a difference between elements.\n        diff((0, _objectSpread2.default)({\n          oldDoc: oldElement,\n          newDoc: newElement,\n          prefix: arrayPrefix,\n          result: result\n        }, handlers));\n      }\n    }\n  });\n};\n\nfunction getModified() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var newDoc = options.doc,\n      _options$transient = options.transient,\n      transient = _options$transient === void 0 ? false : _options$transient,\n      _options$immutable = options.immutable,\n      immutable = _options$immutable === void 0 ? false : _options$immutable,\n      fields = options.fields;\n  var Class = newDoc.constructor;\n  var opts = {\n    defaults: false\n  };\n  var oldDoc = Class.findOne(newDoc._id, opts);\n\n  if (!oldDoc) {\n    oldDoc = new Class({}, opts);\n  } // If there is no document before modifications that may mean that we are not\n  // subscribed to the publication publishing given document or we modified the\n  // _id of a document.\n\n\n  if (!oldDoc) {\n    throwParseError([{\n      'module': 'storage'\n    }, {\n      'utility': 'getModified'\n    }, \"Can not get a document before modifications. You are not subscribed \" + (\"to the publication publishing a \\\"\" + Class.getName() + \"\\\" document with \") + (\"the id \\\"\" + newDoc._id + \"\\\" or you have modified the \\\"_id\\\" field\")]);\n  } // If there are not fields specified, then get all of them.\n\n\n  if (!fields) {\n    fields = Class.getFieldsNames();\n  }\n\n  var result = [];\n  diff((0, _objectSpread2.default)({\n    // Get raw data from the docs.\n    oldDoc: rawMany(oldDoc, fields, {\n      \"transient\": transient,\n      immutable: immutable,\n      undefined: false\n    }),\n    newDoc: rawMany(newDoc, fields, {\n      \"transient\": transient,\n      immutable: immutable,\n      undefined: false\n    }),\n    result: result\n  }, handlers));\n  return result;\n}\n\n;\nmodule1.exportDefault(getModified);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"getModifier.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/getModifier.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _objectSpread2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectSpread\"));\n\nvar module1 = module;\n\nvar _each;\n\nmodule1.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nvar _isNumber;\n\nmodule1.watch(require(\"lodash/isNumber\"), {\n  \"default\": function (v) {\n    _isNumber = v;\n  }\n}, 1);\n\nvar _isPlainObject;\n\nmodule1.watch(require(\"lodash/isPlainObject\"), {\n  \"default\": function (v) {\n    _isPlainObject = v;\n  }\n}, 2);\n\nvar _omitBy;\n\nmodule1.watch(require(\"lodash/omitBy\"), {\n  \"default\": function (v) {\n    _omitBy = v;\n  }\n}, 3);\n\nvar _size;\n\nmodule1.watch(require(\"lodash/size\"), {\n  \"default\": function (v) {\n    _size = v;\n  }\n}, 4);\nvar EJSON;\nmodule1.watch(require(\"meteor/ejson\"), {\n  EJSON: function (v) {\n    EJSON = v;\n  }\n}, 5);\nvar throwParseError;\nmodule1.watch(require(\"../../core/utils/throw_parse_error.js\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 6);\nvar rawMany;\nmodule1.watch(require(\"../../fields/utils/rawMany\"), {\n  \"default\": function (v) {\n    rawMany = v;\n  }\n}, 7);\nvar diff;\nmodule1.watch(require(\"./diff\"), {\n  \"default\": function (v) {\n    diff = v;\n  }\n}, 8);\nvar handlers = {};\n\nhandlers.onObjectDiff = function (_ref) {\n  var oldDoc = _ref.oldDoc,\n      newDoc = _ref.newDoc,\n      prefix = _ref.prefix,\n      result = _ref.result;\n  diff((0, _objectSpread2.default)({\n    oldDoc: oldDoc,\n    newDoc: newDoc,\n    prefix: prefix,\n    result: result\n  }, handlers));\n};\n\nhandlers.onListDiff = function (_ref2) {\n  var oldList = _ref2.oldList,\n      newList = _ref2.newList,\n      prefix = _ref2.prefix,\n      result = _ref2.result;\n\n  // NOTE: We need check a new array size. If its length increased or stayed the\n  // same then all changes can be registered using the $set modifier. If an\n  // array length decreased, then we should slice it. However it may not be\n  // possible if some element has also changed. In such situation we have to\n  // override entire array.\n  // Array length decreased.\n  if (newList.length < oldList.length) {\n    // Due to an error in MiniMongo it's not possible to apply $push modifier\n    // with the $slice operator set to positive number. That's why we have to\n    // override entire array when it was shrinked.\n    result.$set[prefix] = newList;\n  } // Array length increased or stayed the same.\n  else if (newList.length >= oldList.length) {\n      var modified = false; // Compare up to number of elements in the new list.\n\n      _each(newList, function (newElement, index) {\n        var arrayPrefix = prefix + \".\" + index;\n        var oldElement = oldList[index]; // When iterating over elements up to old array length.\n\n        if (index < oldList.length) {\n          if (!EJSON.equals(oldElement, newElement)) {\n            modified = true; // If both array elements are object, then we perform diff.\n\n            if (_isPlainObject(oldElement) && _isPlainObject(newElement)) {\n              // Get a difference between elements.\n              diff((0, _objectSpread2.default)({\n                oldDoc: oldElement,\n                newDoc: newElement,\n                prefix: arrayPrefix,\n                result: result\n              }, handlers));\n            } else {\n              result.$set[arrayPrefix] = newElement;\n            }\n          }\n        } // When iterating over newly added array elements.\n        else {\n            // Elements up to the old array length were modified, so we can not\n            // use the $push operator in conjunction with the $set operator.\n            if (modified) {\n              // If both array elements are object, then we perform diff.\n              if (_isPlainObject(oldElement) && _isPlainObject(newElement)) {\n                // Get a difference between elements.\n                diff((0, _objectSpread2.default)({\n                  oldDoc: oldElement,\n                  newDoc: newElement,\n                  prefix: arrayPrefix,\n                  result: result\n                }, handlers));\n              } else {\n                result.$set[arrayPrefix] = newElement;\n              }\n            } // Elements up to the old array length were not modified, so if there\n            // is any new array element added, we can insert it with the $push\n            // operator.\n            else {\n                // We have to check if there is only one element being pushed or\n                // more. If there is only one element then we use\n                // $push[prefix]: element\n                if (newList.length - oldList.length === 1) {\n                  result.$push[prefix] = newElement;\n                } // If there are more elements we have to use\n                // $push: { [prefix]: { $each: elements } }\n                else {\n                    result.$push[prefix] = {\n                      $each: newList.slice(index)\n                    }; // We have to break each loop here. We don't need to check any\n                    // more elements.\n\n                    return false;\n                  }\n              }\n          }\n      });\n    }\n};\n\nhandlers.onScalarDiff = function (_ref3) {\n  var oldValue = _ref3.oldValue,\n      newValue = _ref3.newValue,\n      prefix = _ref3.prefix,\n      result = _ref3.result;\n\n  if (newValue !== undefined) {\n    if (_isNumber(oldValue) && _isNumber(newValue)) {\n      result.$inc[prefix] = newValue - oldValue;\n    } else {\n      result.$set[prefix] = newValue;\n    }\n  } else {\n    result.$unset[prefix] = '';\n  }\n};\n\nvar getModifier = function () {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var newDoc = options.doc,\n      _options$transient = options.transient,\n      transient = _options$transient === void 0 ? false : _options$transient,\n      _options$immutable = options.immutable,\n      immutable = _options$immutable === void 0 ? false : _options$immutable,\n      fields = options.fields,\n      oldDoc = options.oldDoc;\n  var Class = newDoc.constructor;\n  var opts = {\n    defaults: false\n  };\n\n  if (!oldDoc) {\n    oldDoc = Class.findOne(newDoc._id, opts);\n  }\n\n  if (!oldDoc) {\n    oldDoc = new Class({}, opts);\n  } // If there is no document before modifications that may mean that we are not\n  // subscribed to the publication publishing given document or we modified the\n  // _id of a document.\n\n\n  if (!oldDoc) {\n    throwParseError([{\n      'module': 'storage'\n    }, {\n      'utility': 'getModified'\n    }, \"Can not get a document before modifications. You are not subscribed \" + (\"to the publication publishing a \\\"\" + Class.getName() + \"\\\" document with \") + (\"the id \\\"\" + newDoc._id + \"\\\" or you have modified the \\\"_id\\\" field\")]);\n  } // If there are not fields specified, then get all of them.\n\n\n  if (!fields) {\n    fields = Class.getFieldsNames();\n  }\n\n  var result = {\n    $set: {},\n    $inc: {},\n    $unset: {},\n    $push: {}\n  };\n  diff((0, _objectSpread2.default)({\n    // Get raw data from the docs.\n    oldDoc: rawMany(oldDoc, fields, {\n      \"transient\": transient,\n      immutable: immutable,\n      undefined: false\n    }),\n    newDoc: rawMany(newDoc, fields, {\n      \"transient\": transient,\n      immutable: immutable,\n      undefined: false\n    }),\n    result: result\n  }, handlers)); // Return only non empty modifiers.\n\n  return _omitBy(result, function (modifier) {\n    return _size(modifier) === 0;\n  });\n};\n\nmodule1.exportDefault(getModifier);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"has_meteor_method.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/has_meteor_method.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 0);\n\nfunction hasMeteorMethod(connection, methodName) {\n  // There is inconsistency between client and server. On the client connection\n  // object contains the \"_methodHandlers\" property and on the server the\n  // \"method_handlers\" property.\n  var methodHandlers = connection._methodHandlers || connection.method_handlers;\n  return _has(methodHandlers, methodName);\n}\n\n;\nmodule.exportDefault(hasMeteorMethod);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isModified.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/isModified.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _includes;\n\nmodule.watch(require(\"lodash/includes\"), {\n  \"default\": function (v) {\n    _includes = v;\n  }\n}, 0);\nvar getModified;\nmodule.watch(require(\"./getModified\"), {\n  \"default\": function (v) {\n    getModified = v;\n  }\n}, 1);\n\nfunction isModified() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var doc = options.doc,\n      pattern = options.pattern,\n      _options$transient = options.transient,\n      transient = _options$transient === void 0 ? false : _options$transient,\n      _options$immutable = options.immutable,\n      immutable = _options$immutable === void 0 ? false : _options$immutable;\n  var modified = getModified({\n    doc: doc,\n    \"transient\": transient,\n    immutable: immutable\n  });\n\n  if (pattern) {\n    return _includes(modified, pattern);\n  } else {\n    return modified.length > 0;\n  }\n}\n\n;\nmodule.exportDefault(isModified);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"is_remote.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/is_remote.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction isRemote(Class) {\n  var Collection = Class.getCollection();\n\n  if (!Collection) {\n    return false;\n  }\n\n  var connection = Collection._connection;\n  return connection && connection !== Meteor.server;\n}\n\nmodule.exportDefault(isRemote);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"omit_undefined.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/omit_undefined.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _isPlainObject;\n\nmodule.watch(require(\"lodash/isPlainObject\"), {\n  \"default\": function (v) {\n    _isPlainObject = v;\n  }\n}, 0);\n\nvar _transform;\n\nmodule.watch(require(\"lodash/transform\"), {\n  \"default\": function (v) {\n    _transform = v;\n  }\n}, 1);\n\nfunction omitUndefined(obj) {\n  return _transform(obj, function (result, value, key) {\n    if (_isPlainObject(value)) {\n      result[key] = omitUndefined(value);\n    } else if (value !== undefined) {\n      result[key] = value;\n    }\n  });\n}\n\nmodule.exportDefault(omitUndefined);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"throw_if_selector_is_not_id.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/throw_if_selector_is_not_id.js                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar LocalCollection;\nmodule.watch(require(\"meteor/minimongo\"), {\n  LocalCollection: function (v) {\n    LocalCollection = v;\n  }\n}, 0);\n\nfunction throwIfSelectorIsNotId(selector, methodName) {\n  if (!LocalCollection._selectorIsIdPerhapsAsObject(selector)) {\n    throw new Meteor.Error(403, \"Not permitted. Untrusted code may only \" + methodName + \" documents by ID.\");\n  }\n}\n\n;\nmodule.exportDefault(throwIfSelectorIsNotId);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"transformToClass.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/transformToClass.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _defaults;\n\nmodule.watch(require(\"lodash/defaults\"), {\n  \"default\": function (v) {\n    _defaults = v;\n  }\n}, 0);\nvar config;\nmodule.watch(require(\"../../../core/config\"), {\n  \"default\": function (v) {\n    config = v;\n  }\n}, 1);\nvar wrapTransform;\nmodule.watch(require(\"./wrapTransform\"), {\n  \"default\": function (v) {\n    wrapTransform = v;\n  }\n}, 2);\nvar castToClass;\nmodule.watch(require(\"../../fields/utils/castToClass\"), {\n  \"default\": function (v) {\n    castToClass = v;\n  }\n}, 3);\nvar resolveValues;\nmodule.watch(require(\"../../fields/utils/resolveValues\"), {\n  \"default\": function (v) {\n    resolveValues = v;\n  }\n}, 4);\n\nfunction transformToClass() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var Class = args.Class,\n      _args$options = args.options,\n      options = _args$options === void 0 ? {} : _args$options; // When fetching document from collection we don't want to clone raw document\n  // and we want default values to be set.\n\n  _defaults(options, {\n    defaults: config.defaults,\n    clone: false,\n    cast: false\n  });\n\n  return function (rawDoc) {\n    var doc = castToClass({\n      Class: Class,\n      rawDoc: rawDoc,\n      options: options\n    });\n    return doc;\n  };\n}\n\n;\nmodule.exportDefault(transformToClass);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"trigger_after_insert.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/trigger_after_insert.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Event;\nmodule.watch(require(\"../../events/event.js\"), {\n  \"default\": function (v) {\n    Event = v;\n  }\n}, 0);\n\nfunction triggerAfterInsert(doc, trusted) {\n  // Trigger the \"afterInsert\" event handlers.\n  doc.dispatchEvent(new Event('afterInsert', {\n    propagates: true,\n    trusted: trusted\n  }));\n}\n\n;\nmodule.exportDefault(triggerAfterInsert);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"trigger_after_remove.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/trigger_after_remove.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Event;\nmodule.watch(require(\"../../events/event.js\"), {\n  \"default\": function (v) {\n    Event = v;\n  }\n}, 0);\n\nfunction triggerAfterRemove(doc, trusted) {\n  // Trigger the \"afterRemove\" event handlers.\n  doc.dispatchEvent(new Event('afterRemove', {\n    propagates: true,\n    trusted: trusted\n  }));\n}\n\n;\nmodule.exportDefault(triggerAfterRemove);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"trigger_after_save.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/trigger_after_save.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Event;\nmodule.watch(require(\"../../events/event.js\"), {\n  \"default\": function (v) {\n    Event = v;\n  }\n}, 0);\n\nfunction triggerAfterSave(doc, trusted) {\n  // Trigger the \"afterSave\" event handlers.\n  doc.dispatchEvent(new Event('afterSave', {\n    propagates: true,\n    trusted: trusted\n  }));\n}\n\n;\nmodule.exportDefault(triggerAfterSave);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"trigger_after_update.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/trigger_after_update.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Event;\nmodule.watch(require(\"../../events/event.js\"), {\n  \"default\": function (v) {\n    Event = v;\n  }\n}, 0);\n\nfunction triggerAfterUpdate(doc, trusted) {\n  // Trigger the \"afterUpdate\" event handlers.\n  doc.dispatchEvent(new Event('afterUpdate', {\n    propagates: true,\n    trusted: trusted\n  }));\n}\n\n;\nmodule.exportDefault(triggerAfterUpdate);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"trigger_before_insert.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/trigger_before_insert.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Event;\nmodule.watch(require(\"../../events/event.js\"), {\n  \"default\": function (v) {\n    Event = v;\n  }\n}, 0);\n\nfunction triggerBeforeInsert(doc, trusted) {\n  // Trigger the \"beforeInsert\" event handlers.\n  if (!doc.dispatchEvent(new Event('beforeInsert', {\n    cancelable: true,\n    propagates: true,\n    trusted: trusted\n  }))) {\n    // If an event was prevented, then we stop here.\n    throw new Meteor.Error('prevented', 'Operation prevented', {\n      eventName: 'beforeInsert'\n    });\n  }\n}\n\n;\nmodule.exportDefault(triggerBeforeInsert);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"trigger_before_remove.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/trigger_before_remove.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Event;\nmodule.watch(require(\"../../events/event.js\"), {\n  \"default\": function (v) {\n    Event = v;\n  }\n}, 0);\n\nfunction triggerBeforeRemove(doc, trusted) {\n  // Trigger the \"beforeRemove\" event handlers.\n  if (!doc.dispatchEvent(new Event('beforeRemove', {\n    cancelable: true,\n    propagates: true,\n    trusted: trusted\n  }))) {\n    // If an event was prevented, then we stop here.\n    throw new Meteor.Error('prevented', 'Operation prevented', {\n      eventName: 'beforeRemove'\n    });\n  }\n}\n\n;\nmodule.exportDefault(triggerBeforeRemove);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"trigger_before_save.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/trigger_before_save.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Event;\nmodule.watch(require(\"../../events/event.js\"), {\n  \"default\": function (v) {\n    Event = v;\n  }\n}, 0);\n\nfunction triggerBeforeSave(doc, trusted) {\n  // Trigger the \"beforeSave\" event handlers.\n  if (!doc.dispatchEvent(new Event('beforeSave', {\n    cancelable: true,\n    propagates: true,\n    trusted: trusted\n  }))) {\n    // If an event was prevented, then we stop here.\n    throw new Meteor.Error('prevented', 'Operation prevented', {\n      eventName: 'beforeSave'\n    });\n  }\n}\n\n;\nmodule.exportDefault(triggerBeforeSave);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"trigger_before_update.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/trigger_before_update.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Event;\nmodule.watch(require(\"../../events/event.js\"), {\n  \"default\": function (v) {\n    Event = v;\n  }\n}, 0);\n\nfunction triggerBeforeUpdate(doc, trusted) {\n  // Trigger the \"beforeUpdate\" event handlers.\n  if (!doc.dispatchEvent(new Event('beforeUpdate', {\n    cancelable: true,\n    propagates: true,\n    trusted: trusted\n  }))) {\n    // If an event was prevented, then we stop here.\n    throw new Meteor.Error('prevented', 'Operation prevented', {\n      eventName: 'beforeUpdate'\n    });\n  }\n}\n\n;\nmodule.exportDefault(triggerBeforeUpdate);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"wrapTransform.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/storage/utils/wrapTransform.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar resolveValues;\nmodule.watch(require(\"../../fields/utils/resolveValues\"), {\n  \"default\": function (v) {\n    resolveValues = v;\n  }\n}, 0);\n\nfunction wrapTransform() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var Class = args.Class,\n      transform = args.transform;\n  return function (rawDoc) {\n    var resolvedValues = resolveValues({\n      Class: Class,\n      rawDoc: rawDoc\n    });\n    resolvedValues._isNew = false;\n    return transform(resolvedValues);\n  };\n}\n\nmodule.exportDefault(wrapTransform);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},\"validators\":{\"module.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/module.js                                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar module1 = module;\nvar Module;\nmodule1.watch(require(\"../../core/module.js\"), {\n  \"default\": function (v) {\n    Module = v;\n  }\n}, 0);\nmodule1.watch(require(\"./validators/comparison/choice.js\"));\nmodule1.watch(require(\"./validators/comparison/email.js\"));\nmodule1.watch(require(\"./validators/comparison/equal.js\"));\nmodule1.watch(require(\"./validators/comparison/not_equal.js\"));\nmodule1.watch(require(\"./validators/comparison/regexp.js\"));\nmodule1.watch(require(\"./validators/existence/null.js\"));\nmodule1.watch(require(\"./validators/existence/not_null.js\"));\nmodule1.watch(require(\"./validators/existence/required.js\"));\nmodule1.watch(require(\"./validators/logical/and.js\"));\nmodule1.watch(require(\"./validators/logical/or.js\"));\nmodule1.watch(require(\"./validators/nested/every.js\"));\nmodule1.watch(require(\"./validators/nested/has.js\"));\nmodule1.watch(require(\"./validators/nested/includes.js\"));\nmodule1.watch(require(\"./validators/size/gt.js\"));\nmodule1.watch(require(\"./validators/size/gte.js\"));\nmodule1.watch(require(\"./validators/size/length.js\"));\nmodule1.watch(require(\"./validators/size/lt.js\"));\nmodule1.watch(require(\"./validators/size/lte.js\"));\nmodule1.watch(require(\"./validators/size/max_length.js\"));\nmodule1.watch(require(\"./validators/size/min_length.js\"));\nmodule1.watch(require(\"./validators/type/array.js\"));\nmodule1.watch(require(\"./validators/type/boolean.js\"));\nmodule1.watch(require(\"./validators/type/class.js\"));\nmodule1.watch(require(\"./validators/type/date.js\"));\nmodule1.watch(require(\"./validators/type/integer.js\"));\nmodule1.watch(require(\"./validators/type/mongo_object_id.js\"));\nmodule1.watch(require(\"./validators/type/number.js\"));\nmodule1.watch(require(\"./validators/type/object.js\"));\nmodule1.watch(require(\"./validators/type/string.js\"));\nvar documentValidate;\nmodule1.watch(require(\"./utils/document_validate.js\"), {\n  \"default\": function (v) {\n    documentValidate = v;\n  }\n}, 1);\nvar parseValidators;\nmodule1.watch(require(\"./utils/parse_validators.js\"), {\n  \"default\": function (v) {\n    parseValidators = v;\n  }\n}, 2);\nvar onInitSchema;\nmodule1.watch(require(\"./hooks/init_schema.js\"), {\n  \"default\": function (v) {\n    onInitSchema = v;\n  }\n}, 3);\nvar onInitDefinition;\nmodule1.watch(require(\"./hooks/init_definition.js\"), {\n  \"default\": function (v) {\n    onInitDefinition = v;\n  }\n}, 4);\nvar onParseDefinition;\nmodule1.watch(require(\"./hooks/parse_definition.js\"), {\n  \"default\": function (v) {\n    onParseDefinition = v;\n  }\n}, 5);\nvar onMergeDefinitions;\nmodule1.watch(require(\"./hooks/merge_definitions.js\"), {\n  \"default\": function (v) {\n    onMergeDefinitions = v;\n  }\n}, 6);\nvar onApplyDefinition;\nmodule1.watch(require(\"./hooks/apply_definition.js\"), {\n  \"default\": function (v) {\n    onApplyDefinition = v;\n  }\n}, 7);\nvar onInitClass;\nmodule1.watch(require(\"./hooks/init_class.js\"), {\n  \"default\": function (v) {\n    onInitClass = v;\n  }\n}, 8);\nModule.create({\n  name: 'validators',\n  onInitSchema: onInitSchema,\n  onInitDefinition: onInitDefinition,\n  onParseDefinition: onParseDefinition,\n  onMergeDefinitions: onMergeDefinitions,\n  onApplyDefinition: onApplyDefinition,\n  onInitClass: onInitClass,\n  utils: {\n    documentValidate: documentValidate,\n    parseValidators: parseValidators\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"validator.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validator.js                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar ValidationError;\nmodule.watch(require(\"meteor/mdg:validation-error\"), {\n  ValidationError: function (v) {\n    ValidationError = v;\n  }\n}, 0);\nvar Validators;\nmodule.watch(require(\"./validators.js\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 1);\n\nvar Validator =\n/*#__PURE__*/\nfunction () {\n  function Validator(definition) {\n    this.name = definition.name;\n\n    if (definition.parseParam) {\n      this.parseParam = definition.parseParam;\n    }\n\n    if (definition.isValid) {\n      this.isValid = definition.isValid;\n    }\n\n    if (definition.validate) {\n      this.validate = definition.validate;\n    }\n\n    if (definition.resolveError) {\n      this.resolveError = definition.resolveError;\n    }\n  }\n\n  var _proto = Validator.prototype;\n\n  _proto.validate = function () {\n    function validate(_ref) {\n      var _this = this;\n\n      var doc = _ref.doc,\n          name = _ref.name,\n          nestedName = _ref.nestedName,\n          value = _ref.value,\n          param = _ref.param,\n          resolveParam = _ref.resolveParam,\n          message = _ref.message,\n          resolveError = _ref.resolveError;\n      // Get the class name, which will be used later for letting know what class\n      // thrown error.\n      var className = doc.constructor.getName(); // Resolve param is the \"resolveParam\" function is provided.\n\n      if (Match.test(resolveParam, Function)) {\n        param = resolveParam({\n          doc: doc,\n          name: name,\n          nestedName: nestedName,\n          value: value\n        });\n      } // Parse param type if validator has parsing function.\n\n\n      if (Match.test(this.parseParam, Function)) {\n        this.parseParam(param);\n      } // Prepare data for validation.\n\n\n      var args = {\n        className: className,\n        doc: doc,\n        name: name,\n        nestedName: nestedName,\n        value: value,\n        param: param,\n        validator: this.name\n      }; // Perform validation.\n\n      if (!this.isValid(args)) {\n        // Prepare function for throwing validation error.\n        var throwError = function (message) {\n          // Throw error only if the error message has been successfully\n          // generated.\n          if (!message) {\n            return;\n          } // Throw error.\n\n\n          throw new ValidationError([{\n            className: className,\n            type: _this.name,\n            name: name,\n            nestedName: nestedName,\n            value: value,\n            param: param,\n            message: message\n          }], message);\n        }; // Generate error message using the \"resolveError\" function if provided.\n\n\n        if (Match.test(resolveError, Function)) {\n          throwError(resolveError(args));\n        } // Get error message from the string if provided.\n\n\n        if (Match.test(message, String)) {\n          throwError(message);\n        } // Get error by executing a class level \"resolveError\" function.\n\n\n        var Class = doc.constructor;\n        var classResolveError = Class.getResolveError();\n\n        if (classResolveError instanceof Function) {\n          throwError(classResolveError(args));\n        } // Get default error message.\n\n\n        if (this.resolveError instanceof Function) {\n          throwError(this.resolveError(args));\n        }\n\n        throwError(ValidationError.DEFAULT_REASON);\n      }\n    }\n\n    return validate;\n  }();\n\n  Validator.create = function () {\n    function create(definition) {\n      var validator = new Validator(definition);\n      Validator.validators[validator.name] = validator; // Create a validation function.\n\n      return Validators[validator.name] = function (options) {\n        validator.validate(options);\n      };\n    }\n\n    return create;\n  }();\n\n  return Validator;\n}();\n\n;\nValidator.validators = {};\nmodule.exportDefault(Validator);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"validators.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators.js                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Validators = {};\nmodule.exportDefault(Validators);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"class_prototype_methods\":{\"validate.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/class_prototype_methods/validate.js                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _defaults;\n\nmodule.watch(require(\"lodash/defaults\"), {\n  \"default\": function (v) {\n    _defaults = v;\n  }\n}, 0);\n\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 1);\nvar castNested;\nmodule.watch(require(\"../../fields/utils/castNested\"), {\n  \"default\": function (v) {\n    castNested = v;\n  }\n}, 2);\nvar documentValidate;\nmodule.watch(require(\"../utils/document_validate\"), {\n  \"default\": function (v) {\n    documentValidate = v;\n  }\n}, 3);\nvar callMeteorMethod;\nmodule.watch(require(\"../../storage/utils/call_meteor_method\"), {\n  \"default\": function (v) {\n    callMeteorMethod = v;\n  }\n}, 4);\n\nfunction validate() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var callback = arguments.length > 1 ? arguments[1] : undefined;\n  var doc = this;\n  var Class = doc.constructor;\n  var Collection = Class.getCollection();\n  var connection = Collection && Collection._connection;\n\n  if (!connection && (!Collection || !Collection._name)) {\n    connection = Meteor.connection;\n  } // If the first argument is callback function then reassign values.\n\n\n  if (arguments.length === 1 && Match.test(options, Function)) {\n    callback = options;\n    options = {};\n  } // Set default options.\n\n\n  _defaults(options, {\n    fields: Class.getValidationOrder(),\n    modified: false,\n    stopOnFirstError: true,\n    simulation: true\n  }); // If a fields property is a string then put it into array.\n\n\n  if (Match.test(options.fields, String)) {\n    options.fields = [options.fields];\n  } // Cast all fields.\n\n\n  if (options.cast) {\n    _each(Class.getFields(), function (field) {\n      doc[field.name] = field.castValue(doc[field.name], {\n        clone: false,\n        cast: true\n      });\n    });\n  } // Cast only nested fields.\n  else {\n      castNested({\n        doc: doc,\n        options: {\n          clone: false\n        }\n      });\n    } // Prepare arguments for meteor method and utility.\n\n\n  var methodArgs = {\n    doc: doc,\n    fields: options.fields,\n    modified: options.modified,\n    stopOnFirstError: options.stopOnFirstError,\n    simulation: options.simulation\n  }; // If we are dealing with a remote collection and we are not on the server.\n\n  if (connection && connection !== Meteor.server) {\n    // Prepare arguments for meteor method.\n    var methodName = '/Astronomy/validate';\n\n    try {\n      // Run Meteor method.\n      return callMeteorMethod(Class, methodName, [methodArgs], callback);\n    } // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n\n      throw err;\n    }\n  } // If we can just validate a document without calling the meteor method. We\n  // may be on the server or the collection may be local.\n\n\n  try {\n    // Validate a document.\n    var result = documentValidate(methodArgs);\n\n    if (callback) {\n      callback();\n    }\n\n    return result;\n  } catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n\n    throw err;\n  }\n}\n\nmodule.exportDefault(validate);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"validate_all.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/class_prototype_methods/validate_all.js                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _extend;\n\nmodule.watch(require(\"lodash/extend\"), {\n  \"default\": function (v) {\n    _extend = v;\n  }\n}, 0);\n\nfunction validateAll() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var callback = arguments.length > 1 ? arguments[1] : undefined;\n  var doc = this;\n  var Class = doc.constructor; // If the first argument is callback function then reassign values.\n\n  if (arguments.length === 1 && Match.test(options, Function)) {\n    callback = options;\n    options = {};\n  }\n\n  _extend(options, {\n    fields: Class.getValidationOrder(),\n    stopOnFirstError: false\n  });\n\n  doc.validate(options, callback);\n}\n\n;\nmodule.exportDefault(validateAll);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"class_static_methods\":{\"getCheckPattern.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/class_static_methods/getCheckPattern.js                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Match;\nmodule.watch(require(\"meteor/check\"), {\n  Match: function (v) {\n    Match = v;\n  }\n}, 0);\nvar ValidationError;\nmodule.watch(require(\"meteor/mdg:validation-error\"), {\n  ValidationError: function (v) {\n    ValidationError = v;\n  }\n}, 1);\n\nfunction getCheckPattern() {\n  var Class = this;\n  return Match.Where(function (doc) {\n    try {\n      doc.validate();\n    } catch (err) {\n      if (ValidationError.is(err)) {\n        var firstError = err.details[0];\n        var matchError = new Match.Error(firstError.message);\n        matchError.sanitizedError = err;\n        throw matchError;\n      } else {\n        throw err;\n      }\n    }\n\n    return true;\n  });\n}\n\n;\nmodule.exportDefault(getCheckPattern);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"get_resolve_error.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/class_static_methods/get_resolve_error.js                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction getResolveError() {\n  var Class = this;\n  return Class.schema.resolveError;\n}\n\n;\nmodule.exportDefault(getResolveError);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"get_validation_order.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/class_static_methods/get_validation_order.js                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _difference;\n\nmodule.watch(require(\"lodash/difference\"), {\n  \"default\": function (v) {\n    _difference = v;\n  }\n}, 0);\n\nfunction getValidationOrder() {\n  var Class = this; // Get all validators.\n\n  var validators = Class.getValidators(); // Get fields names for defined validators.\n\n  var fieldsNames = Class.getFieldsNames(); // Make variable name shorter.\n\n  var validationOrder = Class.schema.validationOrder; // If there is a validation order provided, then combine fields provided in\n  // the validation order with the order of validators.\n\n  if (validationOrder) {\n    // Detect what fields are not present in the validation order.\n    var diff = _difference(fieldsNames, validationOrder); // Combine validation order with fields that left.\n\n\n    return validationOrder.concat(diff);\n  } // If there is no validation order, then just return fields names in the order\n  // in which validators were defined.\n  else {\n      return fieldsNames;\n    }\n}\n\n;\nmodule.exportDefault(getValidationOrder);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"get_validators.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/class_static_methods/get_validators.js                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction getValidators(fieldName) {\n  var Class = this;\n\n  if (!Match.test(fieldName, Match.Optional(String))) {\n    throw TypeError('The first argument of the \"getValidators\" function has to be a string ' + 'or left empty');\n  }\n\n  if (fieldName) {\n    return Class.schema.validators[fieldName];\n  } else {\n    return Class.schema.validators;\n  }\n}\n\n;\nmodule.exportDefault(getValidators);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"validate.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/class_static_methods/validate.js                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _tail;\n\nmodule.watch(require(\"lodash/tail\"), {\n  \"default\": function (v) {\n    _tail = v;\n  }\n}, 0);\n\nfunction validate(rawDoc) {\n  var Class = this;\n  var doc = new Class(rawDoc);\n\n  var args = _tail(arguments);\n\n  return doc.validate.apply(doc, args);\n}\n\n;\nmodule.exportDefault(validate);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"validateAll.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/class_static_methods/validateAll.js                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _tail;\n\nmodule.watch(require(\"lodash/tail\"), {\n  \"default\": function (v) {\n    _tail = v;\n  }\n}, 0);\n\nfunction validateAll(rawDoc) {\n  var Class = this;\n  var doc = new Class(rawDoc);\n\n  var args = _tail(arguments);\n\n  return doc.validateAll.apply(doc, args);\n}\n\n;\nmodule.exportDefault(validateAll);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"hooks\":{\"apply_definition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/hooks/apply_definition.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nvar _zipObject;\n\nmodule.watch(require(\"lodash/zipObject\"), {\n  \"default\": function (v) {\n    _zipObject = v;\n  }\n}, 1);\nvar hasMeteorMethod;\nmodule.watch(require(\"../../storage/utils/has_meteor_method.js\"), {\n  \"default\": function (v) {\n    hasMeteorMethod = v;\n  }\n}, 2);\nvar meteorValidate;\nmodule.watch(require(\"../meteor_methods/validate.js\"), {\n  \"default\": function (v) {\n    meteorValidate = v;\n  }\n}, 3);\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n  _each(parsedDefinition.validators, function (validators, fieldName) {\n    Class.schema.validators[fieldName] = Class.schema.validators[fieldName] || [];\n\n    _each(validators, function (validator) {\n      Class.schema.validators[fieldName] = Class.schema.validators[fieldName].concat(validator);\n    });\n  }); // Add the \"/Astronomy/validate\" meteor method only when a class has assigned\n  // collection.\n\n\n  var Collection = Class.getCollection(); // If it's a remote collection then we register methods on the connection\n  // object of the collection.\n\n  var connection = Collection && Collection._connection; // If it's not a remote collection than use main Meteor connection.\n\n  if (!connection && (!Collection || !Collection._name)) {\n    connection = Meteor.connection || Meteor.server;\n  }\n\n  if (connection) {\n    // Prepare meteor methods to be added.\n    var meteorMethods = {\n      '/Astronomy/validate': meteorValidate\n    };\n\n    _each(meteorMethods, function (meteorMethod, methodName) {\n      if (!hasMeteorMethod(connection, methodName)) {\n        // Add meteor method.\n        connection.methods(_zipObject([methodName], [meteorMethod]));\n      }\n    });\n  }\n\n  Class.schema.resolveError = parsedDefinition.resolveError;\n}\n\n;\nmodule.exportDefault(onApplyDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"init_class.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/hooks/init_class.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getResolveError;\nmodule.watch(require(\"../class_static_methods/get_resolve_error.js\"), {\n  \"default\": function (v) {\n    getResolveError = v;\n  }\n}, 0);\nvar getValidationOrder;\nmodule.watch(require(\"../class_static_methods/get_validation_order.js\"), {\n  \"default\": function (v) {\n    getValidationOrder = v;\n  }\n}, 1);\nvar getValidators;\nmodule.watch(require(\"../class_static_methods/get_validators.js\"), {\n  \"default\": function (v) {\n    getValidators = v;\n  }\n}, 2);\nvar validateStatic;\nmodule.watch(require(\"../class_static_methods/validate.js\"), {\n  \"default\": function (v) {\n    validateStatic = v;\n  }\n}, 3);\nvar validateAllStatic;\nmodule.watch(require(\"../class_static_methods/validateAll.js\"), {\n  \"default\": function (v) {\n    validateAllStatic = v;\n  }\n}, 4);\nvar getCheckPatternStatic;\nmodule.watch(require(\"../class_static_methods/getCheckPattern.js\"), {\n  \"default\": function (v) {\n    getCheckPatternStatic = v;\n  }\n}, 5);\nvar validate;\nmodule.watch(require(\"../class_prototype_methods/validate.js\"), {\n  \"default\": function (v) {\n    validate = v;\n  }\n}, 6);\nvar validateAll;\nmodule.watch(require(\"../class_prototype_methods/validate_all.js\"), {\n  \"default\": function (v) {\n    validateAll = v;\n  }\n}, 7);\n\nfunction onInitClass(Class, className) {\n  // Class static methods.\n  Class.getResolveError = getResolveError;\n  Class.getValidationOrder = getValidationOrder;\n  Class.getValidators = getValidators;\n  Class.validate = validateStatic;\n  Class.validateAll = validateAllStatic;\n  Class.getCheckPattern = getCheckPatternStatic; // Class prototype methods.\n\n  Class.prototype.validate = validate;\n  Class.prototype.validateAll = validateAll;\n}\n\n;\nmodule.exportDefault(onInitClass);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"init_definition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/hooks/init_definition.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction onInitDefinition(definition, className) {\n  definition.validators = {};\n  definition.resolveError = undefined;\n}\n\n;\nmodule.exportDefault(onInitDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"init_schema.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/hooks/init_schema.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nfunction onInitSchema(schema, className) {\n  schema.validators = {};\n  schema.resolveError = undefined;\n}\n\n;\nmodule.exportDefault(onInitSchema);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"merge_definitions.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/hooks/merge_definitions.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nfunction onMergeDefinitions(targetDefinition, sourceDefinition, ClassName) {\n  _each(sourceDefinition.validators, function (validators, fieldName) {\n    targetDefinition.validators[fieldName] = targetDefinition.validators[fieldName] || [];\n    targetDefinition.validators[fieldName] = targetDefinition.validators[fieldName].concat(validators);\n  });\n\n  targetDefinition.resolveError = sourceDefinition.resolveError;\n}\n\n;\nmodule.exportDefault(onMergeDefinitions);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"parse_definition.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/hooks/parse_definition.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nvar _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 1);\nvar throwParseError;\nmodule.watch(require(\"../../core/utils/throw_parse_error.js\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 2);\nvar parseValidators;\nmodule.watch(require(\"../utils/parse_validators.js\"), {\n  \"default\": function (v) {\n    parseValidators = v;\n  }\n}, 3);\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  if (definition.resolveError) {\n    if (!Match.test(definition.resolveError, Function)) {\n      throwParseError([{\n        'class': className\n      }, {\n        'property': 'resolveError'\n      }, 'Property values has to be a function']);\n    }\n\n    parsedDefinition.resolveError = definition.resolveError;\n  }\n\n  if (definition.fields) {\n    _each(definition.fields, function (fieldDefinition, fieldName) {\n      if (_has(fieldDefinition, 'validators')) {\n        parseValidators(fieldDefinition.validators, [{\n          'class': className\n        }, {\n          'property': 'fields'\n        }, {\n          'field': fieldName\n        }, {\n          'property': 'validators'\n        }]);\n        parsedDefinition.validators[fieldName] = fieldDefinition.validators;\n        fieldDefinition.validators = undefined;\n      }\n    });\n  }\n\n  if (definition.validators) {\n    _each(definition.validators, function (validators, fieldName) {\n      parseValidators(validators, [{\n        'class': className\n      }, {\n        'property': 'validators'\n      }]);\n      parsedDefinition.validators[fieldName] = validators;\n    });\n  }\n}\n\n;\nmodule.exportDefault(onParseDefinition);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"meteor_methods\":{\"validate.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/meteor_methods/validate.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar documentValidate;\nmodule.watch(require(\"../utils/document_validate.js\"), {\n  \"default\": function (v) {\n    documentValidate = v;\n  }\n}, 0);\nvar check, Match;\nmodule.watch(require(\"meteor/check\"), {\n  check: function (v) {\n    check = v;\n  },\n  Match: function (v) {\n    Match = v;\n  }\n}, 1);\n\nfunction validate(options) {\n  check(options, Match.Any);\n  return documentValidate(options);\n}\n\n;\nmodule.exportDefault(validate);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"utils\":{\"document_validate.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/utils/document_validate.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nvar _intersection;\n\nmodule.watch(require(\"lodash/intersection\"), {\n  \"default\": function (v) {\n    _intersection = v;\n  }\n}, 1);\n\nvar _isNil;\n\nmodule.watch(require(\"lodash/isNil\"), {\n  \"default\": function (v) {\n    _isNil = v;\n  }\n}, 2);\nvar AstroClass;\nmodule.watch(require(\"../../../core/class\"), {\n  \"default\": function (v) {\n    AstroClass = v;\n  }\n}, 3);\nvar throwParseError;\nmodule.watch(require(\"../../core/utils/throw_parse_error\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 4);\nvar castNested;\nmodule.watch(require(\"../../fields/utils/castNested\"), {\n  \"default\": function (v) {\n    castNested = v;\n  }\n}, 5);\nvar isNestedFieldName;\nmodule.watch(require(\"../../fields/utils/isNestedFieldName\"), {\n  \"default\": function (v) {\n    isNestedFieldName = v;\n  }\n}, 6);\nvar traverse;\nmodule.watch(require(\"../../fields/utils/traverse\"), {\n  \"default\": function (v) {\n    traverse = v;\n  }\n}, 7);\nvar ObjectField;\nmodule.watch(require(\"../../fields/ObjectField\"), {\n  \"default\": function (v) {\n    ObjectField = v;\n  }\n}, 8);\nvar ListField;\nmodule.watch(require(\"../../fields/ListField\"), {\n  \"default\": function (v) {\n    ListField = v;\n  }\n}, 9);\nvar Validators;\nmodule.watch(require(\"../validators\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 10);\nvar ValidationError;\nmodule.watch(require(\"meteor/mdg:validation-error\"), {\n  ValidationError: function (v) {\n    ValidationError = v;\n  }\n}, 11);\n\nfunction documentValidate() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var doc = options.doc,\n      fields = options.fields,\n      _options$modified = options.modified,\n      modified = _options$modified === void 0 ? false : _options$modified,\n      _options$prefix = options.prefix,\n      prefix = _options$prefix === void 0 ? '' : _options$prefix,\n      _options$stopOnFirstE = options.stopOnFirstError,\n      stopOnFirstError = _options$stopOnFirstE === void 0 ? true : _options$stopOnFirstE,\n      _options$simulation = options.simulation,\n      simulation = _options$simulation === void 0 ? true : _options$simulation; // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  var Class = doc.constructor; // Cast nested fields.\n\n  castNested({\n    doc: doc,\n    options: {\n      clone: false\n    }\n  }); // Prepare array for storing errors list.\n\n  var errors = []; // Helper function for catching and collecting errors.\n\n  var catchValidationError = function (func) {\n    try {\n      func();\n    } catch (err) {\n      // If it's ValidationError.\n      if (ValidationError.is(err)) {\n        // If we stop on first error then just throw error again.\n        if (stopOnFirstError) {\n          throw err;\n        } // Otherwise we collect errors.\n        else {\n            _each(err.details, function (details) {\n              errors.push(details);\n            });\n          }\n      } // It it's not ValidationError, then we throw error again.\n      else {\n          throw err;\n        }\n    }\n  }; // If no fields were passed to validation, then we pick default validation\n  // order.\n\n\n  if (!fields) {\n    fields = Class.getValidationOrder();\n  } // Validate only modified fields.\n\n\n  if (modified && Class.getCollection()) {\n    fields = _intersection(fields, doc.getModified());\n  }\n\n  _each(fields, function (name) {\n    // If it is a nested field pattern name then we have to look for the most\n    // nested document and validate the nested field.\n    if (isNestedFieldName(name)) {\n      traverse(doc, name, function (nestedDoc, nestedName, field) {\n        catchValidationError(function () {\n          documentValidate({\n            doc: nestedDoc,\n            fields: [nestedName],\n            prefix: prefix + name.substr(0, name.lastIndexOf(nestedName)),\n            stopOnFirstError: stopOnFirstError,\n            simulation: simulation\n          });\n        });\n      });\n      return;\n    }\n\n    var field = Class.getField(name); // Move to the next one if a field does not exist.\n\n    if (!field) {\n      return;\n    } // We do not validate transient fields.\n\n\n    if (field.transient) {\n      return;\n    } // Get value of the field.\n\n\n    var value = doc.get(name); // If a field is optional and value is undefined then we do not validate.\n\n    if (field.getOptional(doc) && _isNil(value)) {\n      return;\n    } // Execute validation in the try-catch block. That's because we want to\n    // continue validation if the \"stopOnFirstError\" flag is set to false.\n\n\n    catchValidationError(function () {\n      // First, execute type level validators.\n      field.validate({\n        doc: doc,\n        name: prefix + name,\n        nestedName: name,\n        value: value\n      }); // Get validators for a given field.\n\n      var validators = Class.getValidators(name);\n\n      _each(validators, function (_ref) {\n        var type = _ref.type,\n            param = _ref.param,\n            resolveParam = _ref.resolveParam,\n            message = _ref.message,\n            resolveError = _ref.resolveError;\n        // Get validation helper function.\n        var validationFunction = Validators[type]; // Execute single validator.\n\n        validationFunction({\n          doc: doc,\n          name: prefix + name,\n          nestedName: name,\n          value: value,\n          param: param,\n          resolveParam: resolveParam,\n          message: message,\n          resolveError: resolveError\n        });\n      });\n    }); // If it is the object field then validate it.\n\n    if (field instanceof ObjectField) {\n      if (value instanceof AstroClass) {\n        catchValidationError(function () {\n          documentValidate({\n            doc: value,\n            fields: value.constructor.getValidationOrder(),\n            prefix: prefix + field.name + '.',\n            stopOnFirstError: stopOnFirstError\n          });\n        });\n      }\n    } // If it is the list field then validate each one.\n    else if (field instanceof ListField && field.isClass) {\n        _each(value, function (element, index) {\n          if (element instanceof AstroClass) {\n            catchValidationError(function () {\n              documentValidate({\n                doc: element,\n                fields: element.constructor.getValidationOrder(),\n                prefix: prefix + field.name + '.' + index + '.',\n                stopOnFirstError: stopOnFirstError\n              });\n            });\n          }\n        });\n      }\n  }); // If we have not thrown any error yet then it means that there are no errors\n  // or we do not throw on the first error.\n\n\n  if (errors.length > 0) {\n    throw new ValidationError(errors, errors[0].message);\n  }\n}\n\n;\nmodule.exportDefault(documentValidate);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"parse_validators.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/utils/parse_validators.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nvar _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 1);\n\nvar _union;\n\nmodule.watch(require(\"lodash/union\"), {\n  \"default\": function (v) {\n    _union = v;\n  }\n}, 2);\nvar throwParseError;\nmodule.watch(require(\"../../core/utils/throw_parse_error.js\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 3);\nvar Validators;\nmodule.watch(require(\"../validators.js\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 4);\nvar validatorsPattern = [{\n  type: String,\n  param: Match.Optional(Match.Any),\n  resolveParam: Match.Optional(Function),\n  message: Match.Optional(String),\n  resolveError: Match.Optional(Function)\n}];\n\nfunction parseValidators(validators, parseContext) {\n  // Validators list is an array of object that should include at least the\n  // \"type\" property.\n  if (validators && !Match.test(validators, validatorsPattern)) {\n    throwParseError(_union(parseContext, ['Validators definition has to be an array of objects']));\n  }\n\n  _each(validators, function (validator) {\n    // Check if a validator of a given type exists.\n    if (!_has(Validators, validator.type)) {\n      throwParseError(_union(parseContext, [\"There is no \\\"\" + validator.type + \"\\\" validator\"]));\n    }\n  });\n}\n\n;\nmodule.exportDefault(parseValidators);\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"validators\":{\"comparison\":{\"choice.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/comparison/choice.js                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _includes;\n\nmodule.watch(require(\"lodash/includes\"), {\n  \"default\": function (v) {\n    _includes = v;\n  }\n}, 0);\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 1);\nValidator.create({\n  name: 'choice',\n  parseParam: function (param) {\n    if (!Match.test(param, [Match.Any])) {\n      throw new TypeError(\"Parameter for the \\\"choice\\\" validator has to be an array of values\");\n    }\n  },\n  isValid: function (_ref) {\n    var value = _ref.value,\n        param = _ref.param;\n    return _includes(param, value);\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name,\n        param = _ref2.param;\n    var choices = param.join(', ');\n    return \"\\\"\" + name + \"\\\" has to be one of the values \" + choices;\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"email.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/comparison/email.js                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 0);\n// The e-mail address regular expression from http://emailregex.com/.\nvar re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nValidator.create({\n  name: 'email',\n  isValid: function (_ref) {\n    var value = _ref.value;\n    return re.test(value);\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name,\n        param = _ref2.param;\n    return \"\\\"\" + name + \"\\\" should be a valid email address\";\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"equal.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/comparison/equal.js                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 0);\nValidator.create({\n  name: 'equal',\n  isValid: function (_ref) {\n    var value = _ref.value,\n        param = _ref.param;\n    return EJSON.equals(value, param);\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name,\n        param = _ref2.param;\n    return \"\\\"\" + name + \"\\\" should be equal \" + param;\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"not_equal.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/comparison/not_equal.js                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 0);\nValidator.create({\n  name: 'notEqual',\n  isValid: function (_ref) {\n    var value = _ref.value,\n        param = _ref.param;\n    return !EJSON.equals(value, param);\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name,\n        param = _ref2.param;\n    return \"\\\"\" + name + \"\\\" should not to be equal \" + param;\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"regexp.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/comparison/regexp.js                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 0);\nValidator.create({\n  name: 'regexp',\n  parseParam: function (param) {\n    if (!Match.test(param, RegExp)) {\n      throw new TypeError(\"Parameter for the \\\"regexp\\\" validator has to be a regular expression\");\n    }\n  },\n  isValid: function (_ref) {\n    var value = _ref.value,\n        param = _ref.param;\n    return param.test(value);\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name,\n        param = _ref2.param;\n    return \"\\\"\" + name + \"\\\" does not match the \\\"\" + param.toString() + \"\\\" regular expression\";\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"existence\":{\"not_null.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/existence/not_null.js                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 0);\nValidator.create({\n  name: 'notNull',\n  isValid: function (_ref) {\n    var value = _ref.value;\n    return value !== null;\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name;\n    return \"\\\"\" + name + \"\\\" should not be null\";\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"null.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/existence/null.js                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 0);\nValidator.create({\n  name: 'null',\n  isValid: function (_ref) {\n    var value = _ref.value;\n    return value === null;\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name;\n    return \"\\\"\" + name + \"\\\" should be null\";\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"required.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/existence/required.js                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 0);\nValidator.create({\n  name: 'required',\n  isValid: function (_ref) {\n    var value = _ref.value;\n    return value !== null && value !== undefined;\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name;\n    return \"\\\"\" + name + \"\\\" is required\";\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"logical\":{\"and.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/logical/and.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\nvar parseValidators;\nmodule.watch(require(\"../../utils/parse_validators.js\"), {\n  \"default\": function (v) {\n    parseValidators = v;\n  }\n}, 1);\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 2);\nvar Validators;\nmodule.watch(require(\"../../validators.js\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 3);\nValidator.create({\n  name: 'and',\n  parseParam: function (param) {\n    parseValidators(param);\n  },\n  validate: function (_ref) {\n    var doc = _ref.doc,\n        name = _ref.name,\n        value = _ref.value,\n        validators = _ref.param;\n\n    _each(validators, function (validator) {\n      // Get validator.\n      var validationFunction = Validators[validator.type]; // Execute single validator.\n\n      validationFunction({\n        doc: doc,\n        name: name,\n        value: value,\n        param: validator.param\n      });\n    });\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"or.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/logical/or.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _some;\n\nmodule.watch(require(\"lodash/some\"), {\n  \"default\": function (v) {\n    _some = v;\n  }\n}, 0);\nvar parseValidators;\nmodule.watch(require(\"../../utils/parse_validators.js\"), {\n  \"default\": function (v) {\n    parseValidators = v;\n  }\n}, 1);\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 2);\nvar Validators;\nmodule.watch(require(\"../../validators.js\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 3);\nvar ValidationError;\nmodule.watch(require(\"meteor/mdg:validation-error\"), {\n  ValidationError: function (v) {\n    ValidationError = v;\n  }\n}, 4);\nValidator.create({\n  name: 'or',\n  parseParam: function (param) {\n    parseValidators(param);\n  },\n  validate: function (_ref) {\n    var doc = _ref.doc,\n        name = _ref.name,\n        value = _ref.value,\n        validators = _ref.param;\n    var firstError;\n\n    var isValid = _some(validators, function (validator) {\n      // Get validator.\n      var validationFunction = Validators[validator.type]; // Execute single validator.\n\n      try {\n        validationFunction({\n          doc: doc,\n          name: name,\n          value: value,\n          param: validator.param\n        });\n        return true;\n      } catch (err) {\n        if (ValidationError.is(err)) {\n          // Collect only the first error that occured.\n          if (!firstError) {\n            firstError = err;\n          }\n\n          return false;\n        } else {\n          throw err;\n        }\n      }\n    });\n\n    if (!isValid) {\n      throw firstError;\n    }\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"nested\":{\"every.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/nested/every.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nvar _isArray;\n\nmodule.watch(require(\"lodash/isArray\"), {\n  \"default\": function (v) {\n    _isArray = v;\n  }\n}, 1);\nvar parseValidators;\nmodule.watch(require(\"../../utils/parse_validators.js\"), {\n  \"default\": function (v) {\n    parseValidators = v;\n  }\n}, 2);\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 3);\nvar Validators;\nmodule.watch(require(\"../../validators.js\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 4);\nValidator.create({\n  name: 'every',\n  parseParam: function (param) {\n    parseValidators(param);\n  },\n  validate: function (_ref) {\n    var doc = _ref.doc,\n        name = _ref.name,\n        nestedName = _ref.nestedName,\n        value = _ref.value,\n        validators = _ref.param;\n\n    if (!_isArray(value)) {\n      throw new TypeError(\"The \\\"every\\\" validator can only work with arrays\");\n    } // Execute validators for each array element.\n\n\n    _each(value, function (element, index) {\n      // Execute each validator.\n      _each(validators, function (validator) {\n        // Get validator.\n        var validationFunction = Validators[validator.type]; // Execute single validator.\n\n        validationFunction({\n          doc: doc,\n          name: name + \".\" + index,\n          nestedName: nestedName + \".\" + index,\n          value: element,\n          param: validator.param\n        });\n      });\n    });\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"has.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/nested/has.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _isObject;\n\nmodule.watch(require(\"lodash/isObject\"), {\n  \"default\": function (v) {\n    _isObject = v;\n  }\n}, 0);\n\nvar _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 1);\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 2);\nValidator.create({\n  name: 'has',\n  isValid: function (_ref) {\n    var value = _ref.value,\n        param = _ref.param;\n\n    if (!_isObject(value)) {\n      throw new TypeError(\"The \\\"has\\\" validator can only work with objects\");\n    }\n\n    return _has(value, param);\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name,\n        param = _ref2.param;\n    return \"The \\\"\" + name + \"\\\" field does not have the \\\"\" + param + \"\\\" property\";\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"includes.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/nested/includes.js                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _includes;\n\nmodule.watch(require(\"lodash/includes\"), {\n  \"default\": function (v) {\n    _includes = v;\n  }\n}, 0);\n\nvar _isArray;\n\nmodule.watch(require(\"lodash/isArray\"), {\n  \"default\": function (v) {\n    _isArray = v;\n  }\n}, 1);\n\nvar _isObject;\n\nmodule.watch(require(\"lodash/isObject\"), {\n  \"default\": function (v) {\n    _isObject = v;\n  }\n}, 2);\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 3);\nValidator.create({\n  name: 'includes',\n  isValid: function (_ref) {\n    var value = _ref.value,\n        param = _ref.param;\n\n    if (!_isArray(value) && !_isObject(value)) {\n      throw new TypeError(\"The \\\"includes\\\" validator can only work with arrays and objects\");\n    }\n\n    return _includes(value, param);\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name,\n        param = _ref2.param;\n    return \"The \\\"\" + name + \"\\\" field does not contain the \\\"\" + param + \"\\\" value\";\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"size\":{\"gt.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/size/gt.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 0);\nValidator.create({\n  name: 'gt',\n  isValid: function (_ref) {\n    var value = _ref.value,\n        param = _ref.param;\n    return value > param;\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name,\n        param = _ref2.param;\n    return \"\\\"\" + name + \"\\\" has to be greater than \" + param;\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"gte.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/size/gte.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 0);\nValidator.create({\n  name: 'gte',\n  isValid: function (_ref) {\n    var value = _ref.value,\n        param = _ref.param;\n    return value >= param;\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name,\n        param = _ref2.param;\n    return \"\\\"\" + name + \"\\\" has to be greater than or equal \" + param;\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"length.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/size/length.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 0);\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 1);\nValidator.create({\n  name: 'length',\n  parseParam: function (param) {\n    if (!Match.test(param, Number)) {\n      throw new TypeError(\"Parameter for the \\\"length\\\" validator has to be a number\");\n    }\n  },\n  isValid: function (_ref) {\n    var value = _ref.value,\n        param = _ref.param;\n\n    if (!_has(value, 'length')) {\n      throw new TypeError(\"Length of the value can not be measured\");\n    }\n\n    return value.length === param;\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name,\n        param = _ref2.param;\n    return \"Length of \\\"\" + name + \"\\\" has to be \" + param;\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lt.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/size/lt.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 0);\nValidator.create({\n  name: 'lt',\n  isValid: function (_ref) {\n    var value = _ref.value,\n        param = _ref.param;\n    return value < param;\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name,\n        param = _ref2.param;\n    return \"\\\"\" + name + \"\\\" has to be less than \" + param;\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"lte.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/size/lte.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 0);\nValidator.create({\n  name: 'lte',\n  isValid: function (_ref) {\n    var value = _ref.value,\n        param = _ref.param;\n    return value <= param;\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name,\n        param = _ref2.param;\n    return \"\\\"\" + name + \"\\\" has to be less than or equal \" + param;\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"max_length.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/size/max_length.js                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 0);\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 1);\nValidator.create({\n  name: 'maxLength',\n  parseParam: function (param) {\n    if (!Match.test(param, Number)) {\n      throw new TypeError(\"Parameter for the \\\"maxLength\\\" validator has to be a number\");\n    }\n  },\n  isValid: function (_ref) {\n    var value = _ref.value,\n        param = _ref.param;\n\n    if (!_has(value, 'length')) {\n      return false;\n    }\n\n    return value.length <= param;\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name,\n        param = _ref2.param;\n    return \"Length of \\\"\" + name + \"\\\" has to be at most \" + param;\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"min_length.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/size/min_length.js                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 0);\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 1);\nValidator.create({\n  name: 'minLength',\n  parseParam: function (param) {\n    if (!Match.test(param, Number)) {\n      throw new TypeError(\"Parameter for the \\\"minLength\\\" validator has to be a number\");\n    }\n  },\n  isValid: function (_ref) {\n    var value = _ref.value,\n        param = _ref.param;\n\n    if (!_has(value, 'length')) {\n      return false;\n    }\n\n    return value.length >= param;\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name,\n        param = _ref2.param;\n    return \"Length of \\\"\" + name + \"\\\" has to be at least \" + param;\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"type\":{\"array.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/type/array.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _isArray;\n\nmodule.watch(require(\"lodash/isArray\"), {\n  \"default\": function (v) {\n    _isArray = v;\n  }\n}, 0);\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 1);\nValidator.create({\n  name: 'array',\n  isValid: function (_ref) {\n    var value = _ref.value;\n    return _isArray(value);\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name;\n    return \"\\\"\" + name + \"\\\" has to be an array\";\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"boolean.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/type/boolean.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 0);\nValidator.create({\n  name: 'boolean',\n  isValid: function (_ref) {\n    var value = _ref.value;\n    return typeof value === 'boolean';\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name;\n    return \"\\\"\" + name + \"\\\" has to be a boolean\";\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"class.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/type/class.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 0);\nvar AstroClass;\nmodule.watch(require(\"../../../../core/class.js\"), {\n  \"default\": function (v) {\n    AstroClass = v;\n  }\n}, 1);\nValidator.create({\n  name: 'class',\n  parseParam: function (param) {\n    if (!AstroClass.isParentOf(param)) {\n      throw new TypeError(\"Parameter for the \\\"class\\\" validator has to be an Astronomy class\");\n    }\n  },\n  isValid: function (_ref) {\n    var value = _ref.value,\n        Class = _ref.param;\n    return value instanceof Class;\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name,\n        Class = _ref2.param;\n    var className = Class.getName();\n    return \"\\\"\" + name + \"\\\" has to be \" + className;\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"date.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/type/date.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _isDate;\n\nmodule.watch(require(\"lodash/isDate\"), {\n  \"default\": function (v) {\n    _isDate = v;\n  }\n}, 0);\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 1);\nValidator.create({\n  name: 'date',\n  isValid: function (_ref) {\n    var value = _ref.value;\n    return _isDate(value);\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name;\n    return \"\\\"\" + name + \"\\\" has to be a date\";\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"integer.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/type/integer.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _isInteger;\n\nmodule.watch(require(\"lodash/isInteger\"), {\n  \"default\": function (v) {\n    _isInteger = v;\n  }\n}, 0);\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 1);\nValidator.create({\n  name: 'integer',\n  isValid: function (_ref) {\n    var value = _ref.value;\n    return _isInteger(value);\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name;\n    return \"\\\"\" + name + \"\\\" has to be an integer\";\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"mongo_object_id.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/type/mongo_object_id.js                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 0);\nvar Match;\nmodule.watch(require(\"meteor/check\"), {\n  Match: function (v) {\n    Match = v;\n  }\n}, 1);\nvar Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 2);\nValidator.create({\n  name: 'mongoObjectID',\n  isValid: function (_ref) {\n    var value = _ref.value;\n    return Match.test(value, Mongo.ObjectID);\n    ;\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name;\n    return \"\\\"\" + name + \"\\\" has to be a Mongo.ObjectID\";\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"number.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/type/number.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _isNaN;\n\nmodule.watch(require(\"lodash/isNaN\"), {\n  \"default\": function (v) {\n    _isNaN = v;\n  }\n}, 0);\n\nvar _isNumber;\n\nmodule.watch(require(\"lodash/isNumber\"), {\n  \"default\": function (v) {\n    _isNumber = v;\n  }\n}, 1);\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 2);\nValidator.create({\n  name: 'number',\n  isValid: function (_ref) {\n    var value = _ref.value;\n    return !_isNaN(value) && _isNumber(value);\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name;\n    return \"\\\"\" + name + \"\\\" has to be a number\";\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"object.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/type/object.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _isObject;\n\nmodule.watch(require(\"lodash/isObject\"), {\n  \"default\": function (v) {\n    _isObject = v;\n  }\n}, 0);\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 1);\nValidator.create({\n  name: 'object',\n  isValid: function (_ref) {\n    var value = _ref.value;\n    return _isObject(value);\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name;\n    return \"\\\"\" + name + \"\\\" has to be an object\";\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"string.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// packages/jagi_astronomy/lib/modules/validators/validators/type/string.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Validator;\nmodule.watch(require(\"../../validator.js\"), {\n  \"default\": function (v) {\n    Validator = v;\n  }\n}, 0);\nValidator.create({\n  name: 'string',\n  isValid: function (_ref) {\n    var value = _ref.value;\n    return typeof value === 'string';\n  },\n  resolveError: function (_ref2) {\n    var name = _ref2.name;\n    return \"\\\"\" + name + \"\\\" has to be a string\";\n  }\n});\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}},\"node_modules\":{\"lodash\":{\"concat.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/concat.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar arrayPush = require('./_arrayPush'),\n    baseFlatten = require('./_baseFlatten'),\n    copyArray = require('./_copyArray'),\n    isArray = require('./isArray');\n\n/**\n * Creates a new array concatenating `array` with any additional arrays\n * and/or values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to concatenate.\n * @param {...*} [values] The values to concatenate.\n * @returns {Array} Returns the new concatenated array.\n * @example\n *\n * var array = [1];\n * var other = _.concat(array, 2, [3], [[4]]);\n *\n * console.log(other);\n * // => [1, 2, 3, [4]]\n *\n * console.log(array);\n * // => [1]\n */\nfunction concat() {\n  var length = arguments.length;\n  if (!length) {\n    return [];\n  }\n  var args = Array(length - 1),\n      array = arguments[0],\n      index = length;\n\n  while (index--) {\n    args[index - 1] = arguments[index];\n  }\n  return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n}\n\nmodule.exports = concat;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_arrayPush.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_arrayPush.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseFlatten.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseFlatten.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_isFlattenable.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_isFlattenable.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_Symbol.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_Symbol.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_root.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_root.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_freeGlobal.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_freeGlobal.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isArguments.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/isArguments.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseIsArguments.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseIsArguments.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseGetTag.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseGetTag.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_getRawTag.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_getRawTag.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_objectToString.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_objectToString.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isObjectLike.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/isObjectLike.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isArray.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/isArray.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_copyArray.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_copyArray.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nmodule.exports = copyArray;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"defaults.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/defaults.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar apply = require('./_apply'),\n    assignInWith = require('./assignInWith'),\n    baseRest = require('./_baseRest'),\n    customDefaultsAssignIn = require('./_customDefaultsAssignIn');\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(args) {\n  args.push(undefined, customDefaultsAssignIn);\n  return apply(assignInWith, undefined, args);\n});\n\nmodule.exports = defaults;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_apply.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_apply.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"assignInWith.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/assignInWith.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    keysIn = require('./keysIn');\n\n/**\n * This method is like `_.assignIn` except that it accepts `customizer`\n * which is invoked to produce the assigned values. If `customizer` returns\n * `undefined`, assignment is handled by the method instead. The `customizer`\n * is invoked with five arguments: (objValue, srcValue, key, object, source).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extendWith\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @see _.assignWith\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   return _.isUndefined(objValue) ? srcValue : objValue;\n * }\n *\n * var defaults = _.partialRight(_.assignInWith, customizer);\n *\n * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n  copyObject(source, keysIn(source), object, customizer);\n});\n\nmodule.exports = assignInWith;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_copyObject.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_copyObject.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nmodule.exports = copyObject;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_assignValue.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_assignValue.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseAssignValue.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseAssignValue.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar defineProperty = require('./_defineProperty');\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_defineProperty.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_defineProperty.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_getNative.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_getNative.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseIsNative.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseIsNative.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isFunction.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/isFunction.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isObject.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/isObject.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_isMasked.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_isMasked.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_coreJsData.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_coreJsData.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_toSource.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_toSource.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_getValue.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_getValue.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"eq.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/eq.js                                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_createAssigner.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_createAssigner.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseRest.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseRest.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"identity.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/identity.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_overRest.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_overRest.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_setToString.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_setToString.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseSetToString.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseSetToString.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"constant.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/constant.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_shortOut.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_shortOut.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_isIterateeCall.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_isIterateeCall.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isArrayLike.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/isArrayLike.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isLength.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/isLength.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_isIndex.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_isIndex.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"keysIn.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/keysIn.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_arrayLikeKeys.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_arrayLikeKeys.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseTimes.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseTimes.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isBuffer.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/isBuffer.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"stubFalse.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/stubFalse.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isTypedArray.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/isTypedArray.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseIsTypedArray.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseIsTypedArray.js                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseUnary.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseUnary.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_nodeUtil.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_nodeUtil.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseKeysIn.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseKeysIn.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeysIn;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_isPrototype.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_isPrototype.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_nativeKeysIn.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_nativeKeysIn.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = nativeKeysIn;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_customDefaultsAssignIn.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_customDefaultsAssignIn.js                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar eq = require('./eq');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n * of source objects to the destination object for all destination properties\n * that resolve to `undefined`.\n *\n * @private\n * @param {*} objValue The destination value.\n * @param {*} srcValue The source value.\n * @param {string} key The key of the property to assign.\n * @param {Object} object The parent object of `objValue`.\n * @returns {*} Returns the value to assign.\n */\nfunction customDefaultsAssignIn(objValue, srcValue, key, object) {\n  if (objValue === undefined ||\n      (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n    return srcValue;\n  }\n  return objValue;\n}\n\nmodule.exports = customDefaultsAssignIn;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"each.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/each.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = require('./forEach');\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"forEach.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/forEach.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar arrayEach = require('./_arrayEach'),\n    baseEach = require('./_baseEach'),\n    castFunction = require('./_castFunction'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nmodule.exports = forEach;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_arrayEach.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_arrayEach.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nmodule.exports = arrayEach;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseEach.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseEach.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nmodule.exports = baseEach;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseForOwn.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseForOwn.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseFor.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseFor.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_createBaseFor.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_createBaseFor.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"keys.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/keys.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseKeys.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseKeys.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_nativeKeys.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_nativeKeys.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_overArg.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_overArg.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_createBaseEach.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_createBaseEach.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_castFunction.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_castFunction.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar identity = require('./identity');\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nmodule.exports = castFunction;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"has.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/has.js                                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseHas = require('./_baseHas'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nmodule.exports = has;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseHas.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseHas.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nmodule.exports = baseHas;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_hasPath.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_hasPath.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_castPath.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_castPath.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_isKey.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_isKey.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isSymbol.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/isSymbol.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_stringToPath.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_stringToPath.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar reLeadingDot = /^\\./,\n    rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (reLeadingDot.test(string)) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, string) {\n    result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_memoizeCapped.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_memoizeCapped.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"memoize.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/memoize.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_MapCache.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_MapCache.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_mapCacheClear.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_mapCacheClear.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_Hash.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_Hash.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_hashClear.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_hashClear.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_nativeCreate.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_nativeCreate.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_hashDelete.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_hashDelete.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_hashGet.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_hashGet.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_hashHas.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_hashHas.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_hashSet.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_hashSet.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_ListCache.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_ListCache.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_listCacheClear.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_listCacheClear.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_listCacheDelete.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_listCacheDelete.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_assocIndexOf.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_assocIndexOf.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_listCacheGet.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_listCacheGet.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_listCacheHas.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_listCacheHas.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_listCacheSet.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_listCacheSet.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_Map.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_Map.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_mapCacheDelete.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_mapCacheDelete.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_getMapData.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_getMapData.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_isKeyable.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_isKeyable.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_mapCacheGet.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_mapCacheGet.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_mapCacheHas.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_mapCacheHas.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_mapCacheSet.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_mapCacheSet.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"toString.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/toString.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseToString.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseToString.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_arrayMap.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_arrayMap.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_toKey.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_toKey.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"includes.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/includes.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseIndexOf = require('./_baseIndexOf'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    toInteger = require('./toInteger'),\n    values = require('./values');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nmodule.exports = includes;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseIndexOf.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseIndexOf.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseFindIndex.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseFindIndex.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseIsNaN.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseIsNaN.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_strictIndexOf.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_strictIndexOf.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isString.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/isString.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"toInteger.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/toInteger.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"toFinite.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/toFinite.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"toNumber.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/toNumber.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"values.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/values.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseValues.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseValues.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"intersection.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/intersection.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseIntersection.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseIntersection.js                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_SetCache.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_SetCache.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_setCacheAdd.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_setCacheAdd.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_setCacheHas.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_setCacheHas.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_arrayIncludes.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_arrayIncludes.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_arrayIncludesWith.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_arrayIncludesWith.js                                       //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_cacheHas.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_cacheHas.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_castArrayLikeObject.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_castArrayLikeObject.js                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isArrayLikeObject.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/isArrayLikeObject.js                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isNumber.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/isNumber.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"cloneDeepWith.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/cloneDeepWith.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.cloneWith` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the deep cloned value.\n * @see _.cloneWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(true);\n *   }\n * }\n *\n * var el = _.cloneDeepWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 20\n */\nfunction cloneDeepWith(value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n}\n\nmodule.exports = cloneDeepWith;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseClone.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseClone.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isObject = require('./isObject'),\n    keys = require('./keys');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, baseClone, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_Stack.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_Stack.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_stackClear.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_stackClear.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_stackDelete.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_stackDelete.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_stackGet.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_stackGet.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_stackHas.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_stackHas.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_stackSet.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_stackSet.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseAssign.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseAssign.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar copyObject = require('./_copyObject'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseAssignIn.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseAssignIn.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_cloneBuffer.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_cloneBuffer.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar root = require('./_root');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_copySymbols.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_copySymbols.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_getSymbols.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_getSymbols.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_arrayFilter.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_arrayFilter.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"stubArray.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/stubArray.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_copySymbolsIn.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_copySymbolsIn.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_getSymbolsIn.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_getSymbolsIn.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nmodule.exports = getSymbolsIn;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_getPrototype.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_getPrototype.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar overArg = require('./_overArg');\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nmodule.exports = getPrototype;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_getAllKeys.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_getAllKeys.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseGetAllKeys.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseGetAllKeys.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_getAllKeysIn.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_getAllKeysIn.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_getTag.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_getTag.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_DataView.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_DataView.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_Promise.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_Promise.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_Set.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_Set.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_WeakMap.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_WeakMap.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_initCloneArray.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_initCloneArray.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nmodule.exports = initCloneArray;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_initCloneByTag.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_initCloneByTag.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneMap = require('./_cloneMap'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSet = require('./_cloneSet'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_cloneArrayBuffer.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_cloneArrayBuffer.js                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Uint8Array = require('./_Uint8Array');\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_Uint8Array.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_Uint8Array.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_cloneDataView.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_cloneDataView.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_cloneMap.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_cloneMap.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar addMapEntry = require('./_addMapEntry'),\n    arrayReduce = require('./_arrayReduce'),\n    mapToArray = require('./_mapToArray');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a clone of `map`.\n *\n * @private\n * @param {Object} map The map to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned map.\n */\nfunction cloneMap(map, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(mapToArray(map), CLONE_DEEP_FLAG) : mapToArray(map);\n  return arrayReduce(array, addMapEntry, new map.constructor);\n}\n\nmodule.exports = cloneMap;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_addMapEntry.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_addMapEntry.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Adds the key-value `pair` to `map`.\n *\n * @private\n * @param {Object} map The map to modify.\n * @param {Array} pair The key-value pair to add.\n * @returns {Object} Returns `map`.\n */\nfunction addMapEntry(map, pair) {\n  // Don't return `map.set` because it's not chainable in IE 11.\n  map.set(pair[0], pair[1]);\n  return map;\n}\n\nmodule.exports = addMapEntry;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_arrayReduce.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_arrayReduce.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_mapToArray.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_mapToArray.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_cloneRegExp.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_cloneRegExp.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_cloneSet.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_cloneSet.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar addSetEntry = require('./_addSetEntry'),\n    arrayReduce = require('./_arrayReduce'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a clone of `set`.\n *\n * @private\n * @param {Object} set The set to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned set.\n */\nfunction cloneSet(set, isDeep, cloneFunc) {\n  var array = isDeep ? cloneFunc(setToArray(set), CLONE_DEEP_FLAG) : setToArray(set);\n  return arrayReduce(array, addSetEntry, new set.constructor);\n}\n\nmodule.exports = cloneSet;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_addSetEntry.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_addSetEntry.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Adds `value` to `set`.\n *\n * @private\n * @param {Object} set The set to modify.\n * @param {*} value The value to add.\n * @returns {Object} Returns `set`.\n */\nfunction addSetEntry(set, value) {\n  // Don't return `set.add` because it's not chainable in IE 11.\n  set.add(value);\n  return set;\n}\n\nmodule.exports = addSetEntry;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_setToArray.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_setToArray.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_cloneSymbol.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_cloneSymbol.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Symbol = require('./_Symbol');\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_cloneTypedArray.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_cloneTypedArray.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar cloneArrayBuffer = require('./_cloneArrayBuffer');\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_initCloneObject.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_initCloneObject.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nmodule.exports = initCloneObject;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseCreate.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseCreate.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isObject = require('./isObject');\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nmodule.exports = baseCreate;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isPlainObject.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/isPlainObject.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"extend.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/extend.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.exports = require('./assignIn');\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"assignIn.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/assignIn.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar copyObject = require('./_copyObject'),\n    createAssigner = require('./_createAssigner'),\n    keysIn = require('./keysIn');\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  copyObject(source, keysIn(source), object);\n});\n\nmodule.exports = assignIn;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isNil.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/isNil.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */\nfunction isNil(value) {\n  return value == null;\n}\n\nmodule.exports = isNil;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"fromPairs.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/fromPairs.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * The inverse of `_.toPairs`; this method returns an object composed\n * from key-value `pairs`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} pairs The key-value pairs.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.fromPairs([['a', 1], ['b', 2]]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction fromPairs(pairs) {\n  var index = -1,\n      length = pairs == null ? 0 : pairs.length,\n      result = {};\n\n  while (++index < length) {\n    var pair = pairs[index];\n    result[pair[0]] = pair[1];\n  }\n  return result;\n}\n\nmodule.exports = fromPairs;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"map.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/map.js                                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseIteratee.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseIteratee.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseMatches.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseMatches.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseIsMatch.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseIsMatch.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseIsEqual.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseIsEqual.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseIsEqualDeep.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseIsEqualDeep.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_equalArrays.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_equalArrays.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(array);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_arraySome.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_arraySome.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_equalByTag.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_equalByTag.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_equalObjects.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_equalObjects.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Assume cyclic values are equal.\n  var stacked = stack.get(object);\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_getMatchData.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_getMatchData.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_isStrictComparable.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_isStrictComparable.js                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_matchesStrictComparable.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_matchesStrictComparable.js                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseMatchesProperty.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseMatchesProperty.js                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"get.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/get.js                                                      //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseGet.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseGet.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"hasIn.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/hasIn.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseHasIn.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseHasIn.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"property.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/property.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseProperty.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseProperty.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_basePropertyDeep.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_basePropertyDeep.js                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseMap.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseMap.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"find.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/find.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nmodule.exports = find;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_createFind.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_createFind.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"findIndex.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/findIndex.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"toArray.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/toArray.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Symbol = require('./_Symbol'),\n    copyArray = require('./_copyArray'),\n    getTag = require('./_getTag'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    iteratorToArray = require('./_iteratorToArray'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray'),\n    stringToArray = require('./_stringToArray'),\n    values = require('./values');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Built-in value references. */\nvar symIterator = Symbol ? Symbol.iterator : undefined;\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * _.toArray({ 'a': 1, 'b': 2 });\n * // => [1, 2]\n *\n * _.toArray('abc');\n * // => ['a', 'b', 'c']\n *\n * _.toArray(1);\n * // => []\n *\n * _.toArray(null);\n * // => []\n */\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n  if (isArrayLike(value)) {\n    return isString(value) ? stringToArray(value) : copyArray(value);\n  }\n  if (symIterator && value[symIterator]) {\n    return iteratorToArray(value[symIterator]());\n  }\n  var tag = getTag(value),\n      func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n  return func(value);\n}\n\nmodule.exports = toArray;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_iteratorToArray.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_iteratorToArray.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Converts `iterator` to an array.\n *\n * @private\n * @param {Object} iterator The iterator to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction iteratorToArray(iterator) {\n  var data,\n      result = [];\n\n  while (!(data = iterator.next()).done) {\n    result.push(data.value);\n  }\n  return result;\n}\n\nmodule.exports = iteratorToArray;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_stringToArray.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_stringToArray.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar asciiToArray = require('./_asciiToArray'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeToArray = require('./_unicodeToArray');\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nmodule.exports = stringToArray;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_asciiToArray.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_asciiToArray.js                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nmodule.exports = asciiToArray;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_hasUnicode.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_hasUnicode.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_unicodeToArray.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_unicodeToArray.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nmodule.exports = unicodeToArray;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"size.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/size.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    stringSize = require('./_stringSize');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/**\n * Gets the size of `collection` by returning its length for array-like\n * values or the number of own enumerable string keyed properties for objects.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @returns {number} Returns the collection size.\n * @example\n *\n * _.size([1, 2, 3]);\n * // => 3\n *\n * _.size({ 'a': 1, 'b': 2 });\n * // => 2\n *\n * _.size('pebbles');\n * // => 7\n */\nfunction size(collection) {\n  if (collection == null) {\n    return 0;\n  }\n  if (isArrayLike(collection)) {\n    return isString(collection) ? stringSize(collection) : collection.length;\n  }\n  var tag = getTag(collection);\n  if (tag == mapTag || tag == setTag) {\n    return collection.size;\n  }\n  return baseKeys(collection).length;\n}\n\nmodule.exports = size;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_stringSize.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_stringSize.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar asciiSize = require('./_asciiSize'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeSize = require('./_unicodeSize');\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the string size.\n */\nfunction stringSize(string) {\n  return hasUnicode(string)\n    ? unicodeSize(string)\n    : asciiSize(string);\n}\n\nmodule.exports = stringSize;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_asciiSize.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_asciiSize.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseProperty = require('./_baseProperty');\n\n/**\n * Gets the size of an ASCII `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nvar asciiSize = baseProperty('length');\n\nmodule.exports = asciiSize;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_unicodeSize.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_unicodeSize.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nfunction unicodeSize(string) {\n  var result = reUnicode.lastIndex = 0;\n  while (reUnicode.test(string)) {\n    ++result;\n  }\n  return result;\n}\n\nmodule.exports = unicodeSize;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"difference.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/difference.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseDifference = require('./_baseDifference'),\n    baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nmodule.exports = difference;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseDifference.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseDifference.js                                          //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseDifference;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"forOwn.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/forOwn.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseForOwn = require('./_baseForOwn'),\n    castFunction = require('./_castFunction');\n\n/**\n * Iterates over own enumerable string keyed properties of an object and\n * invokes `iteratee` for each property. The iteratee is invoked with three\n * arguments: (value, key, object). Iteratee functions may exit iteration\n * early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forOwnRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forOwn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forOwn(object, iteratee) {\n  return object && baseForOwn(object, castFunction(iteratee));\n}\n\nmodule.exports = forOwn;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"omitBy.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/omitBy.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseIteratee = require('./_baseIteratee'),\n    negate = require('./negate'),\n    pickBy = require('./pickBy');\n\n/**\n * The opposite of `_.pickBy`; this method creates an object composed of\n * the own and inherited enumerable string keyed properties of `object` that\n * `predicate` doesn't return truthy for. The predicate is invoked with two\n * arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omitBy(object, _.isNumber);\n * // => { 'b': '2' }\n */\nfunction omitBy(object, predicate) {\n  return pickBy(object, negate(baseIteratee(predicate)));\n}\n\nmodule.exports = omitBy;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"negate.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/negate.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nmodule.exports = negate;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"pickBy.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/pickBy.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    basePickBy = require('./_basePickBy'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nmodule.exports = pickBy;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_basePickBy.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_basePickBy.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet'),\n    castPath = require('./_castPath');\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = basePickBy;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseSet.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseSet.js                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nmodule.exports = baseSet;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"zipObject.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/zipObject.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar assignValue = require('./_assignValue'),\n    baseZipObject = require('./_baseZipObject');\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nmodule.exports = zipObject;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseZipObject.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseZipObject.js                                           //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n  return result;\n}\n\nmodule.exports = baseZipObject;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"mapKeys.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/mapKeys.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n\n/**\n * The opposite of `_.mapValues`; this method creates an object with the\n * same values as `object` and keys generated by running each own enumerable\n * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n * with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapValues\n * @example\n *\n * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n *   return key + value;\n * });\n * // => { 'a1': 1, 'b2': 2 }\n */\nfunction mapKeys(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, iteratee(value, key, object), value);\n  });\n  return result;\n}\n\nmodule.exports = mapKeys;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"omit.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/omit.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar arrayMap = require('./_arrayMap'),\n    baseClone = require('./_baseClone'),\n    baseUnset = require('./_baseUnset'),\n    castPath = require('./_castPath'),\n    copyObject = require('./_copyObject'),\n    customOmitClone = require('./_customOmitClone'),\n    flatRest = require('./_flatRest'),\n    getAllKeysIn = require('./_getAllKeysIn');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nmodule.exports = omit;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseUnset.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseUnset.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar castPath = require('./_castPath'),\n    last = require('./last'),\n    parent = require('./_parent'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nmodule.exports = baseUnset;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"last.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/last.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_parent.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_parent.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseGet = require('./_baseGet'),\n    baseSlice = require('./_baseSlice');\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nmodule.exports = parent;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseSlice.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseSlice.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nmodule.exports = baseSlice;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_customOmitClone.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_customOmitClone.js                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isPlainObject = require('./isPlainObject');\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nmodule.exports = customOmitClone;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_flatRest.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_flatRest.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"flatten.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/flatten.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseFlatten = require('./_baseFlatten');\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"range.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/range.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar createRange = require('./_createRange');\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nmodule.exports = range;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_createRange.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_createRange.js                                             //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseRange = require('./_baseRange'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nmodule.exports = createRange;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseRange.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseRange.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nmodule.exports = baseRange;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"noop.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/noop.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"union.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/union.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nmodule.exports = union;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseUniq.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseUniq.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_createSet.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_createSet.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"transform.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/transform.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar arrayEach = require('./_arrayEach'),\n    baseCreate = require('./_baseCreate'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee'),\n    getPrototype = require('./_getPrototype'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray');\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = transform;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isNull.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/isNull.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * Checks if `value` is `null`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n * @example\n *\n * _.isNull(null);\n * // => true\n *\n * _.isNull(void 0);\n * // => false\n */\nfunction isNull(value) {\n  return value === null;\n}\n\nmodule.exports = isNull;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"uniq.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/uniq.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseUniq = require('./_baseUniq');\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nmodule.exports = uniq;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"every.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/every.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar arrayEvery = require('./_arrayEvery'),\n    baseEvery = require('./_baseEvery'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = every;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_arrayEvery.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_arrayEvery.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = arrayEvery;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseEvery.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseEvery.js                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nmodule.exports = baseEvery;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isNaN.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/isNaN.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar isNumber = require('./isNumber');\n\n/**\n * Checks if `value` is `NaN`.\n *\n * **Note:** This method is based on\n * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n * `undefined` and other non-number values.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n * @example\n *\n * _.isNaN(NaN);\n * // => true\n *\n * _.isNaN(new Number(NaN));\n * // => true\n *\n * isNaN(undefined);\n * // => true\n *\n * _.isNaN(undefined);\n * // => false\n */\nfunction isNaN(value) {\n  // An `NaN` primitive is the only value that is not equal to itself.\n  // Perform the `toStringTag` check first to avoid errors with some\n  // ActiveX objects in IE.\n  return isNumber(value) && value != +value;\n}\n\nmodule.exports = isNaN;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"filter.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/filter.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseFilter.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseFilter.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"some.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/some.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar arraySome = require('./_arraySome'),\n    baseIteratee = require('./_baseIteratee'),\n    baseSome = require('./_baseSome'),\n    isArray = require('./isArray'),\n    isIterateeCall = require('./_isIterateeCall');\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = some;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseSome.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseSome.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nmodule.exports = baseSome;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isDate.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/isDate.js                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseIsDate = require('./_baseIsDate'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nmodule.exports = isDate;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"_baseIsDate.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/_baseIsDate.js                                              //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nmodule.exports = baseIsDate;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"isInteger.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/isInteger.js                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar toInteger = require('./toInteger');\n\n/**\n * Checks if `value` is an integer.\n *\n * **Note:** This method is based on\n * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n * @example\n *\n * _.isInteger(3);\n * // => true\n *\n * _.isInteger(Number.MIN_VALUE);\n * // => false\n *\n * _.isInteger(Infinity);\n * // => false\n *\n * _.isInteger('3');\n * // => false\n */\nfunction isInteger(value) {\n  return typeof value == 'number' && value == toInteger(value);\n}\n\nmodule.exports = isInteger;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"tail.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/tail.js                                                     //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseSlice = require('./_baseSlice');\n\n/**\n * Gets all but the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.tail([1, 2, 3]);\n * // => [2, 3]\n */\nfunction tail(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseSlice(array, 1, length) : [];\n}\n\nmodule.exports = tail;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"indexOf.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/indexOf.js                                                  //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseIndexOf = require('./_baseIndexOf'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nmodule.exports = indexOf;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"clone.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// node_modules/meteor/jagi_astronomy/node_modules/lodash/clone.js                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar baseClone = require('./_baseClone');\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = clone;\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}}}}}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\n\nvar exports = require(\"/node_modules/meteor/jagi:astronomy/lib/main.js\");\n\n/* Exports */\nPackage._define(\"jagi:astronomy\", exports);\n\n})();\n","servePath":"/packages/jagi_astronomy.js","sourceMap":{"version":3,"sources":["packages/jagi:astronomy/lib/main.js","packages/jagi:astronomy/lib/core/class.js","packages/jagi:astronomy/lib/core/config.js","packages/jagi:astronomy/lib/core/ejson.js","packages/jagi:astronomy/lib/core/module.js","packages/jagi:astronomy/lib/core/reserved_keywords.js","packages/jagi:astronomy/lib/modules/behaviors/behavior.js","packages/jagi:astronomy/lib/modules/behaviors/module.js","packages/jagi:astronomy/lib/modules/behaviors/class_static_methods/get_behavior.js","packages/jagi:astronomy/lib/modules/behaviors/class_static_methods/get_behaviors.js","packages/jagi:astronomy/lib/modules/behaviors/class_static_methods/has_behavior.js","packages/jagi:astronomy/lib/modules/behaviors/hooks/apply_definition.js","packages/jagi:astronomy/lib/modules/behaviors/hooks/init_class.js","packages/jagi:astronomy/lib/modules/behaviors/hooks/init_definition.js","packages/jagi:astronomy/lib/modules/behaviors/hooks/init_schema.js","packages/jagi:astronomy/lib/modules/behaviors/hooks/merge_definitions.js","packages/jagi:astronomy/lib/modules/behaviors/hooks/parse_definition.js","packages/jagi:astronomy/lib/modules/core/module.js","packages/jagi:astronomy/lib/modules/core/utils/cloneDefinition.js","packages/jagi:astronomy/lib/modules/core/utils/deprecated.js","packages/jagi:astronomy/lib/modules/core/utils/override_method.js","packages/jagi:astronomy/lib/modules/core/utils/throw_parse_error.js","packages/jagi:astronomy/lib/modules/core/utils/warn.js","packages/jagi:astronomy/lib/modules/events/event.js","packages/jagi:astronomy/lib/modules/events/module.js","packages/jagi:astronomy/lib/modules/events/class_prototype_methods/dispatch_event.js","packages/jagi:astronomy/lib/modules/events/class_static_methods/dispatch_event.js","packages/jagi:astronomy/lib/modules/events/class_static_methods/get_events.js","packages/jagi:astronomy/lib/modules/events/class_static_methods/hasEvent.js","packages/jagi:astronomy/lib/modules/events/hooks/apply_definition.js","packages/jagi:astronomy/lib/modules/events/hooks/init_class.js","packages/jagi:astronomy/lib/modules/events/hooks/init_definition.js","packages/jagi:astronomy/lib/modules/events/hooks/init_schema.js","packages/jagi:astronomy/lib/modules/events/hooks/merge_definitions.js","packages/jagi:astronomy/lib/modules/events/hooks/parse_definition.js","packages/jagi:astronomy/lib/modules/fields/Enum.js","packages/jagi:astronomy/lib/modules/fields/Field.js","packages/jagi:astronomy/lib/modules/fields/ListField.js","packages/jagi:astronomy/lib/modules/fields/ObjectField.js","packages/jagi:astronomy/lib/modules/fields/ScalarField.js","packages/jagi:astronomy/lib/modules/fields/Union.js","packages/jagi:astronomy/lib/modules/fields/module.js","packages/jagi:astronomy/lib/modules/fields/type.js","packages/jagi:astronomy/lib/modules/fields/class_events/from_json_value.js","packages/jagi:astronomy/lib/modules/fields/class_events/to_json_value.js","packages/jagi:astronomy/lib/modules/fields/class_prototype_methods/get.js","packages/jagi:astronomy/lib/modules/fields/class_prototype_methods/raw.js","packages/jagi:astronomy/lib/modules/fields/class_prototype_methods/set.js","packages/jagi:astronomy/lib/modules/fields/class_static_methods/get_field.js","packages/jagi:astronomy/lib/modules/fields/class_static_methods/get_fields.js","packages/jagi:astronomy/lib/modules/fields/class_static_methods/get_fields_names.js","packages/jagi:astronomy/lib/modules/fields/class_static_methods/get_list_fields.js","packages/jagi:astronomy/lib/modules/fields/class_static_methods/get_object_fields.js","packages/jagi:astronomy/lib/modules/fields/class_static_methods/get_scalar_fields.js","packages/jagi:astronomy/lib/modules/fields/class_static_methods/has_field.js","packages/jagi:astronomy/lib/modules/fields/hooks/apply_definition.js","packages/jagi:astronomy/lib/modules/fields/hooks/init_class.js","packages/jagi:astronomy/lib/modules/fields/hooks/init_definition.js","packages/jagi:astronomy/lib/modules/fields/hooks/init_schema.js","packages/jagi:astronomy/lib/modules/fields/hooks/merge_definitions.js","packages/jagi:astronomy/lib/modules/fields/hooks/parse_definition.js","packages/jagi:astronomy/lib/modules/fields/types/boolean.js","packages/jagi:astronomy/lib/modules/fields/types/date.js","packages/jagi:astronomy/lib/modules/fields/types/mongo_object_id.js","packages/jagi:astronomy/lib/modules/fields/types/number.js","packages/jagi:astronomy/lib/modules/fields/types/object.js","packages/jagi:astronomy/lib/modules/fields/types/string.js","packages/jagi:astronomy/lib/modules/fields/utils/castNested.js","packages/jagi:astronomy/lib/modules/fields/utils/castToClass.js","packages/jagi:astronomy/lib/modules/fields/utils/getAll.js","packages/jagi:astronomy/lib/modules/fields/utils/getChildClass.js","packages/jagi:astronomy/lib/modules/fields/utils/getMany.js","packages/jagi:astronomy/lib/modules/fields/utils/getOne.js","packages/jagi:astronomy/lib/modules/fields/utils/isNestedFieldName.js","packages/jagi:astronomy/lib/modules/fields/utils/rawAll.js","packages/jagi:astronomy/lib/modules/fields/utils/rawMany.js","packages/jagi:astronomy/lib/modules/fields/utils/rawOne.js","packages/jagi:astronomy/lib/modules/fields/utils/resolveValues.js","packages/jagi:astronomy/lib/modules/fields/utils/set_all.js","packages/jagi:astronomy/lib/modules/fields/utils/set_many.js","packages/jagi:astronomy/lib/modules/fields/utils/set_one.js","packages/jagi:astronomy/lib/modules/fields/utils/traverse.js","packages/jagi:astronomy/lib/modules/helpers/module.js","packages/jagi:astronomy/lib/modules/helpers/class_static_methods/getHelper.js","packages/jagi:astronomy/lib/modules/helpers/class_static_methods/getHelpers.js","packages/jagi:astronomy/lib/modules/helpers/class_static_methods/hasHelper.js","packages/jagi:astronomy/lib/modules/helpers/hooks/onApplyDefinition.js","packages/jagi:astronomy/lib/modules/helpers/hooks/onInitClass.js","packages/jagi:astronomy/lib/modules/helpers/hooks/onInitDefinition.js","packages/jagi:astronomy/lib/modules/helpers/hooks/onInitSchema.js","packages/jagi:astronomy/lib/modules/helpers/hooks/onMergeDefinitions.js","packages/jagi:astronomy/lib/modules/helpers/hooks/onParseDefinition.js","packages/jagi:astronomy/lib/modules/indexes/module.js","packages/jagi:astronomy/lib/modules/indexes/class_static_methods/get_index.js","packages/jagi:astronomy/lib/modules/indexes/class_static_methods/get_indexes.js","packages/jagi:astronomy/lib/modules/indexes/class_static_methods/has_index.js","packages/jagi:astronomy/lib/modules/indexes/hooks/apply_definition.js","packages/jagi:astronomy/lib/modules/indexes/hooks/init_class.js","packages/jagi:astronomy/lib/modules/indexes/hooks/init_definition.js","packages/jagi:astronomy/lib/modules/indexes/hooks/init_schema.js","packages/jagi:astronomy/lib/modules/indexes/hooks/merge_definitions.js","packages/jagi:astronomy/lib/modules/indexes/hooks/parse_definition.js","packages/jagi:astronomy/lib/modules/methods/module.js","packages/jagi:astronomy/lib/modules/methods/class_prototype_methods/applyMethod.js","packages/jagi:astronomy/lib/modules/methods/class_prototype_methods/callMethod.js","packages/jagi:astronomy/lib/modules/methods/class_static_methods/getMeteorMethod.js","packages/jagi:astronomy/lib/modules/methods/class_static_methods/getMeteorMethods.js","packages/jagi:astronomy/lib/modules/methods/class_static_methods/hasMeteorMethod.js","packages/jagi:astronomy/lib/modules/methods/hooks/onApplyDefinition.js","packages/jagi:astronomy/lib/modules/methods/hooks/onFinalizeClass.js","packages/jagi:astronomy/lib/modules/methods/hooks/onInitClass.js","packages/jagi:astronomy/lib/modules/methods/hooks/onInitDefinition.js","packages/jagi:astronomy/lib/modules/methods/hooks/onInitSchema.js","packages/jagi:astronomy/lib/modules/methods/hooks/onMergeDefinitions.js","packages/jagi:astronomy/lib/modules/methods/hooks/onParseDefinition.js","packages/jagi:astronomy/lib/modules/methods/meteor_methods/astronomyExecute.js","packages/jagi:astronomy/lib/modules/methods/utils/wrapMethod.js","packages/jagi:astronomy/lib/modules/storage/module.js","packages/jagi:astronomy/lib/modules/storage/class_events/fromJSONValue.js","packages/jagi:astronomy/lib/modules/storage/class_events/toJSONValue.js","packages/jagi:astronomy/lib/modules/storage/class_prototype_methods/copy.js","packages/jagi:astronomy/lib/modules/storage/class_prototype_methods/getModified.js","packages/jagi:astronomy/lib/modules/storage/class_prototype_methods/getModifiedValues.js","packages/jagi:astronomy/lib/modules/storage/class_prototype_methods/getModifier.js","packages/jagi:astronomy/lib/modules/storage/class_prototype_methods/isModified.js","packages/jagi:astronomy/lib/modules/storage/class_prototype_methods/reload.js","packages/jagi:astronomy/lib/modules/storage/class_prototype_methods/remove.js","packages/jagi:astronomy/lib/modules/storage/class_prototype_methods/save.js","packages/jagi:astronomy/lib/modules/storage/class_static_methods/find.js","packages/jagi:astronomy/lib/modules/storage/class_static_methods/get_collection.js","packages/jagi:astronomy/lib/modules/storage/class_static_methods/get_transform.js","packages/jagi:astronomy/lib/modules/storage/class_static_methods/get_type_field.js","packages/jagi:astronomy/lib/modules/storage/class_static_methods/insert.js","packages/jagi:astronomy/lib/modules/storage/class_static_methods/is_secured.js","packages/jagi:astronomy/lib/modules/storage/class_static_methods/remove.js","packages/jagi:astronomy/lib/modules/storage/class_static_methods/update.js","packages/jagi:astronomy/lib/modules/storage/class_static_methods/upsert.js","packages/jagi:astronomy/lib/modules/storage/hooks/apply_definition.js","packages/jagi:astronomy/lib/modules/storage/hooks/init_class.js","packages/jagi:astronomy/lib/modules/storage/hooks/init_definition.js","packages/jagi:astronomy/lib/modules/storage/hooks/init_schema.js","packages/jagi:astronomy/lib/modules/storage/hooks/merge_definitions.js","packages/jagi:astronomy/lib/modules/storage/hooks/parse_definition.js","packages/jagi:astronomy/lib/modules/storage/meteor_methods/insert.js","packages/jagi:astronomy/lib/modules/storage/meteor_methods/remove.js","packages/jagi:astronomy/lib/modules/storage/meteor_methods/update.js","packages/jagi:astronomy/lib/modules/storage/meteor_methods/upsert.js","packages/jagi:astronomy/lib/modules/storage/utils/already_in_simulation.js","packages/jagi:astronomy/lib/modules/storage/utils/apply_modifier.js","packages/jagi:astronomy/lib/modules/storage/utils/call_meteor_method.js","packages/jagi:astronomy/lib/modules/storage/utils/class_insert.js","packages/jagi:astronomy/lib/modules/storage/utils/class_remove.js","packages/jagi:astronomy/lib/modules/storage/utils/class_update.js","packages/jagi:astronomy/lib/modules/storage/utils/class_upsert.js","packages/jagi:astronomy/lib/modules/storage/utils/diff.js","packages/jagi:astronomy/lib/modules/storage/utils/document_insert.js","packages/jagi:astronomy/lib/modules/storage/utils/document_remove.js","packages/jagi:astronomy/lib/modules/storage/utils/document_update.js","packages/jagi:astronomy/lib/modules/storage/utils/getModified.js","packages/jagi:astronomy/lib/modules/storage/utils/getModifier.js","packages/jagi:astronomy/lib/modules/storage/utils/has_meteor_method.js","packages/jagi:astronomy/lib/modules/storage/utils/isModified.js","packages/jagi:astronomy/lib/modules/storage/utils/is_remote.js","packages/jagi:astronomy/lib/modules/storage/utils/omit_undefined.js","packages/jagi:astronomy/lib/modules/storage/utils/throw_if_selector_is_not_id.js","packages/jagi:astronomy/lib/modules/storage/utils/transformToClass.js","packages/jagi:astronomy/lib/modules/storage/utils/trigger_after_insert.js","packages/jagi:astronomy/lib/modules/storage/utils/trigger_after_remove.js","packages/jagi:astronomy/lib/modules/storage/utils/trigger_after_save.js","packages/jagi:astronomy/lib/modules/storage/utils/trigger_after_update.js","packages/jagi:astronomy/lib/modules/storage/utils/trigger_before_insert.js","packages/jagi:astronomy/lib/modules/storage/utils/trigger_before_remove.js","packages/jagi:astronomy/lib/modules/storage/utils/trigger_before_save.js","packages/jagi:astronomy/lib/modules/storage/utils/trigger_before_update.js","packages/jagi:astronomy/lib/modules/storage/utils/wrapTransform.js","packages/jagi:astronomy/lib/modules/validators/module.js","packages/jagi:astronomy/lib/modules/validators/validator.js","packages/jagi:astronomy/lib/modules/validators/validators.js","packages/jagi:astronomy/lib/modules/validators/class_prototype_methods/validate.js","packages/jagi:astronomy/lib/modules/validators/class_prototype_methods/validate_all.js","packages/jagi:astronomy/lib/modules/validators/class_static_methods/getCheckPattern.js","packages/jagi:astronomy/lib/modules/validators/class_static_methods/get_resolve_error.js","packages/jagi:astronomy/lib/modules/validators/class_static_methods/get_validation_order.js","packages/jagi:astronomy/lib/modules/validators/class_static_methods/get_validators.js","packages/jagi:astronomy/lib/modules/validators/class_static_methods/validate.js","packages/jagi:astronomy/lib/modules/validators/class_static_methods/validateAll.js","packages/jagi:astronomy/lib/modules/validators/hooks/apply_definition.js","packages/jagi:astronomy/lib/modules/validators/hooks/init_class.js","packages/jagi:astronomy/lib/modules/validators/hooks/init_definition.js","packages/jagi:astronomy/lib/modules/validators/hooks/init_schema.js","packages/jagi:astronomy/lib/modules/validators/hooks/merge_definitions.js","packages/jagi:astronomy/lib/modules/validators/hooks/parse_definition.js","packages/jagi:astronomy/lib/modules/validators/meteor_methods/validate.js","packages/jagi:astronomy/lib/modules/validators/utils/document_validate.js","packages/jagi:astronomy/lib/modules/validators/utils/parse_validators.js","packages/jagi:astronomy/lib/modules/validators/validators/comparison/choice.js","packages/jagi:astronomy/lib/modules/validators/validators/comparison/email.js","packages/jagi:astronomy/lib/modules/validators/validators/comparison/equal.js","packages/jagi:astronomy/lib/modules/validators/validators/comparison/not_equal.js","packages/jagi:astronomy/lib/modules/validators/validators/comparison/regexp.js","packages/jagi:astronomy/lib/modules/validators/validators/existence/not_null.js","packages/jagi:astronomy/lib/modules/validators/validators/existence/null.js","packages/jagi:astronomy/lib/modules/validators/validators/existence/required.js","packages/jagi:astronomy/lib/modules/validators/validators/logical/and.js","packages/jagi:astronomy/lib/modules/validators/validators/logical/or.js","packages/jagi:astronomy/lib/modules/validators/validators/nested/every.js","packages/jagi:astronomy/lib/modules/validators/validators/nested/has.js","packages/jagi:astronomy/lib/modules/validators/validators/nested/includes.js","packages/jagi:astronomy/lib/modules/validators/validators/size/gt.js","packages/jagi:astronomy/lib/modules/validators/validators/size/gte.js","packages/jagi:astronomy/lib/modules/validators/validators/size/length.js","packages/jagi:astronomy/lib/modules/validators/validators/size/lt.js","packages/jagi:astronomy/lib/modules/validators/validators/size/lte.js","packages/jagi:astronomy/lib/modules/validators/validators/size/max_length.js","packages/jagi:astronomy/lib/modules/validators/validators/size/min_length.js","packages/jagi:astronomy/lib/modules/validators/validators/type/array.js","packages/jagi:astronomy/lib/modules/validators/validators/type/boolean.js","packages/jagi:astronomy/lib/modules/validators/validators/type/class.js","packages/jagi:astronomy/lib/modules/validators/validators/type/date.js","packages/jagi:astronomy/lib/modules/validators/validators/type/integer.js","packages/jagi:astronomy/lib/modules/validators/validators/type/mongo_object_id.js","packages/jagi:astronomy/lib/modules/validators/validators/type/number.js","packages/jagi:astronomy/lib/modules/validators/validators/type/object.js","packages/jagi:astronomy/lib/modules/validators/validators/type/string.js"],"names":["module1","module","export","Astro","Module","Class","Enum","Union","Type","Field","ScalarField","ObjectField","ListField","Behavior","Validator","Validators","ValidationError","Event","reservedKeywords","watch","require","Config","v","config","_concat","_defaults","_each","_has","_includes","_intersection","_isNumber","EJSON","throwParseError","cloneDefinition","castNested","warn","initClass","definition","schema","children","forEach","onInitSchema","getName","onInitDefinition","onInitClass","rawDoc","options","defaults","clone","cast","doc","constructor","Error","getCollection","_isNew","dispatchEvent","getFieldsNames","set","fieldName","typeName","toJSONValue","args","json","className","getParent","parentClassName","get","getChildren","depth","classes","push","Child","create","name","extend","validate","param","class","inherit","Parent","extendDefinition","onlyModules","Match","test","String","method","length","aliases","parsedDefinition","onParseDefinition","onApplyDefinition","onMergeDefinitions","onFinalizeClass","ChildClass","has","includes","isParentOf","prototype","isPrototypeOf","isChildOf","isNew","arguments","exportDefault","verbose","resolving","AstroClass","addType","Object","Maybe","hookName","undefined","Function","utils","methodName","targetDefinition","sourceDefinition","modules","modulesOrder","moduleName","iteratee","reservedNames","_extend","checkDefinition","behaviors","createClassDefinition","apply","behaviorName","getBehavior","getBehaviors","hasBehavior","behaviorsOptions","BehaviorClass","behaviorOptions","behavior","ClassName","OneOf","Array","deprecated","overrideMethod","_cloneDeepWith","_isPlainObject","_isArray","value","message","_toArray","object","overridingMethod","originalMethod","call","_isObject","details","detail","key","TypeError","warning","console","error","type","data","cancelable","propagates","toLowerCase","timeStamp","Date","now","target","currentTarget","defaultPrevented","propagationStopped","immediatePropagationStopped","preventDefault","stopPropagation","stopImmediatePropagation","_every","returnFromDispatchEvent","event","eventHandlers","getEvents","eventHandler","getObjectFields","field","getListFields","isClass","element","eventName","events","_get","hasEvent","_uniq","dispatchEventProto","trgDefinition","srcDefinition","_zipObject","_range","_forOwn","_isNil","_values","_keys","_indexOf","check","enumDefinitionPattern","identifiers","i","values","keys","identifier","getValues","getIdentifiers","getIdentifier","index","defineProperty","writable","enumerable","choice","enums","optional","immutable","getDefault","default","castValue","getOptional","required","resolveValue","resolve","_map","castToClass","resolveValues","array","resolvedValues","nestedRawDoc","_clone","_some","unionDefinitionPattern","types","Optional","caughtErrors","TypeClass","AstroType","find","err","unions","getAll","getMany","getOne","isNestedFieldName","rawAll","rawMany","rawOne","setAll","setMany","setOne","traverse","_find","typeDefinitionPattern","Any","fromJSONValue","e","parse","stringify","raw","merge","result","fieldValue","nestedFieldValue","nestedFieldName","getField","fields","getFields","fieldsNames","transient","_filter","classOnly","getScalarFields","hasField","checkTypeExistence","fieldDefinition","typePattern","Boolean","boolean","_isNaN","parseInt","time","date","Mongo","ObjectID","mongoObjectID","Number","number","string","getChildClass","typeField","getTypeField","_omitBy","nestedDoc","fieldPattern","indexOf","_fromPairs","_difference","fieldsValues","setValue","callback","segments","split","lastIndex","next","segmentIndex","segment","getHelper","helperName","helpers","getHelpers","hasHelper","helper","getMethod","getMethods","hasMethod","methods","getIndex","indexName","indexes","getIndexes","hasIndex","_mapKeys","Collection","Meteor","isServer","_connection","prefixIndexes","checkedClasses","collectNestedIndexes","_ensureIndex","fieldDefinitionPattern","ObjectIncluding","indexDefinition","callMeteorMethod","applyMethod","methodArgs","meteorMethodArgs","_last","callMethod","pop","meteorMethods","wrapMethod","hasMeteorMethod","astronomyExecute","collection","connection","server","getMeteorMethod","getMeteorMethods","meteorMethod","meteorMethodName","_id","findOne","applyModifier","classInsert","classUpdate","classRemove","documentInsert","documentUpdate","documentRemove","getModified","getModifier","isModified","isRemote","omitUndefined","throwIfSelectorIsNotId","transformToClass","triggerBeforeSave","triggerBeforeInsert","triggerBeforeUpdate","triggerBeforeRemove","triggerAfterSave","triggerAfterInsert","triggerAfterUpdate","triggerAfterRemove","wrapTransform","copy","save","utilGetModified","getModifiedValues","old","modified","utilGetModifier","utilIsModified","pattern","reload","transform","remove","simulation","selector","trusted","_omit","DDP","stopOnFirstError","forceUpdate","inserting","generateId","_isRemoteCollection","enclosing","_CurrentInvocation","_makeNewID","modifier","_isNull","createMethod","_rewriteSelector","disableEvents","$in","classTransform","getTransform","insert","isSecured","operation","secured","common","update","classUpsert","upsert","protoSave","protoRemove","protoReload","protoCopy","protoGetModifier","protoGetModified","protoGetModifiedValues","protoIsModified","meteorInsert","meteorUpdate","meteorUpsert","meteorRemove","id","IdType","afterInit","alreadyInSimulation","isSimulation","_size","LocalCollection","_modify","_name","methodOptions","throwStubExceptions","returnStubValue","docs","Minimongo","oldDocs","multi","fetch","oldDoc","limit","matcher","Matcher","queryResult","documentMatches","arrayIndices","numberAffected","insertedId","count","_createUpsertDocument","_removeDollarOperators","isInsert","_noop","_union","diff","newDoc","prefix","onDiff","onObjectDiff","onListDiff","onScalarDiff","oldValue","newValue","equals","nestedPrefix","oldList","newList","documentValidate","_collection","toString","handlers","maxLength","Math","max","arrayPrefix","oldElement","newElement","opts","$set","$push","$each","slice","$inc","$unset","methodHandlers","_methodHandlers","method_handlers","_transform","obj","_selectorIsIdPerhapsAsObject","parseValidators","parseParam","isValid","resolveError","nestedName","resolveParam","validator","throwError","classResolveError","getResolveError","DEFAULT_REASON","validators","getValidationOrder","validateAll","getCheckPattern","Where","is","firstError","matchError","sanitizedError","getValidators","validationOrder","concat","_tail","meteorValidate","validateStatic","validateAllStatic","getCheckPatternStatic","errors","catchValidationError","func","substr","lastIndexOf","validationFunction","validatorsPattern","parseContext","choices","join","re","RegExp","_isDate","_isInteger"],"mappings":"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","file":"/packages/jagi_astronomy.js","sourcesContent":["import './core/ejson.js';\nimport './modules/core/module.js';\nimport './modules/storage/module.js';\nimport './modules/behaviors/module.js';\nimport './modules/events/module.js';\nimport './modules/methods/module.js';\nimport './modules/helpers/module.js';\nimport './modules/fields/module.js';\nimport './modules/indexes/module.js';\nimport './modules/validators/module.js';\n\nimport Config from './core/config.js';\nimport Module from './core/module.js';\nimport Class from './core/class.js';\nimport reservedKeywords from './core/reserved_keywords.js';\nimport Enum from './modules/fields/Enum.js';\nimport Union from './modules/fields/Union.js';\nimport Type from './modules/fields/type.js';\nimport Field from './modules/fields/Field';\nimport ScalarField from './modules/fields/ScalarField';\nimport ObjectField from './modules/fields/ObjectField';\nimport ListField from './modules/fields/ListField';\nimport Behavior from './modules/behaviors/behavior.js';\nimport Validator from './modules/validators/validator.js';\nimport Validators from './modules/validators/validators.js';\nimport { ValidationError } from 'meteor/mdg:validation-error';\nimport Event from './modules/events/event.js';\n\nconst Astro = {\n  config: Config,\n  Config,\n  Module,\n  Class,\n  Enum,\n  Union,\n  Type,\n  Field,\n  ScalarField,\n  ObjectField,\n  ListField,\n  Behavior,\n  Validator,\n  Validators,\n  ValidationError,\n  Event,\n  reservedKeywords\n};\n\nexport {\n  Astro,\n  Module,\n  Class,\n  Enum,\n  Union,\n  Type,\n  Field,\n  ScalarField,\n  ObjectField,\n  ListField,\n  Behavior,\n  Validator,\n  Validators,\n  ValidationError,\n  Event,\n  reservedKeywords\n};","import _concat from \"lodash/concat\";\nimport _defaults from \"lodash/defaults\";\nimport _each from \"lodash/each\";\nimport _has from \"lodash/has\";\nimport _includes from \"lodash/includes\";\nimport _intersection from \"lodash/intersection\";\nimport _isNumber from \"lodash/isNumber\";\nimport { EJSON } from \"meteor/ejson\";\nimport config from \"./config\";\nimport throwParseError from \"../modules/core/utils/throw_parse_error\";\nimport cloneDefinition from \"../modules/core/utils/cloneDefinition\";\nimport castNested from \"../modules/fields/utils/castNested\";\nimport Module from \"./module\";\nimport Event from \"../modules/events/event\";\nimport Type from \"../modules/fields/type\";\nimport Validators from \"../modules/validators/validators\";\nimport warn from \"../modules/core/utils/warn\";\n\nlet initClass = function(Class) {\n  // Create and store the schema \"definition\" object in the class constructor.\n  // It's a combination of all parent definitions and a definition that\n  // created this class. It's used to create child classes.\n  Class.definition = {};\n  // Create and store the \"schema\" object in the class constructor. It's an\n  // object that contains all the data related with a given class. The\n  // \"schema\" object contains \"computed\" data of the schema \"definition\".\n  // Thanks to that, Astronomy does not need to compute data on the fly and\n  // everything works faster.\n  Class.schema = {};\n  // Create empty array for storing child classes.\n  Class.children = [];\n  // Init the class schema and schema definition.\n  Module.forEach(module => {\n    module.onInitSchema(Class.schema, Class.getName());\n    module.onInitDefinition(Class.definition, Class.getName());\n  });\n  // We have to call the \"onInitClass\" hooks in the separate loop after\n  // initiation of the schema and schema definition, because some\n  // \"onInitClass\" hooks can execute the \"Class.extend\" method which requires\n  // schema and schama definition to be initalized.\n  Module.forEach(module => {\n    module.onInitClass(Class, Class.getName());\n  });\n};\n\nclass Class {\n  constructor(rawDoc = {}, options = {}) {\n    // Set default options.\n    _defaults(options, {\n      // From version 2.3.0, we can turn off setting default values on fetching\n      // so it will not populate fields that were excluded on find.\n      defaults: config.defaults,\n      // We clone values on document construction, but this option is overridden\n      // in the \"find\" method and set to false, so it does not unnecessary clone\n      // clone raw values.\n      clone: true,\n      cast: false\n    });\n\n    const doc = this;\n    const Class = doc.constructor;\n\n    if (!Class.getName()) {\n      throw new Error('Can not create instance of the \"Class\" class');\n    }\n\n    // If there is the \"_isNew\" property passed to the class constructor, the\n    // we use it to determine if a document is stored in collection. Otherwise\n    // document is a new one.\n    if (Class.getCollection()) {\n      doc._isNew = _has(rawDoc, \"_isNew\") ? rawDoc._isNew : true;\n    }\n\n    // Trigger the \"beforeInit\" event handlers.\n    doc.dispatchEvent(new Event(\"beforeInit\"));\n\n    // Set values in a document.\n    _each(Class.getFieldsNames(), fieldName => {\n      doc.set(fieldName, rawDoc[fieldName], options);\n    });\n\n    // Trigger the \"afterInit\" event handlers.\n    doc.dispatchEvent(new Event(\"afterInit\"));\n  }\n\n  // Method needed for EJSONification.\n  typeName() {\n    return \"Astronomy\";\n  }\n\n  toJSONValue(args) {\n    let doc = this;\n    let Class = doc.constructor;\n\n    let json = {\n      class: Class.getName()\n    };\n\n    // Trigger the \"toJSONValue\" event handlers.\n    doc.dispatchEvent(\n      new Event(\"toJSONValue\", {\n        json: json\n      })\n    );\n\n    return json;\n  }\n\n  static getName() {\n    return this.className;\n  }\n\n  static getParent() {\n    if (this.parentClassName) {\n      return this.get(this.parentClassName);\n    }\n  }\n\n  /**\n   * @param {(Number|Boolean)} depth - The depth to which look for children, or \"true\" to get all children.\n   */\n  static getChildren(depth = 1) {\n    const classes = [];\n    if (!depth) {\n      return classes;\n    }\n    classes.push(...this.children);\n    if (_isNumber(depth)) {\n      depth--;\n    }\n    _each(this.children, Child => {\n      classes.push(...Child.getChildren(depth));\n    });\n    return classes;\n  }\n\n  static create(definition) {\n    // Get class name.\n    let className = definition.name;\n    // Warn about class duplicate.\n    if (_has(this.classes, className)) {\n      warn(`Duplicate of the \"${className}\" class`);\n    }\n    // Extend the Class class.\n    let Class = (this.classes[className] = class Class extends this {});\n    // Store the class name in the constructor.\n    Class.className = className;\n    // Initialize class.\n    initClass(Class);\n    // Extend class with a definition.\n    Class.extend(definition);\n    // Register a new type.\n    Type.create({\n      name: className,\n      class: Class,\n      validate(args) {\n        // Add current class as a param of validator.\n        args.param = Class;\n        Validators.class(args);\n      }\n    });\n\n    return Class;\n  }\n\n  static inherit(definition) {\n    const Parent = this;\n    const className = definition.name;\n    // Warn about class duplicate.\n    if (_has(this.classes, className)) {\n      warn(`Duplicate of the \"${className}\" class`);\n    }\n    // Extend the parent class.\n    const Class = (this.classes[className] = class Class extends Parent {});\n    // Store the class name in the constructor.\n    Class.className = className;\n    // Store the parent class name in the constructor.\n    Class.parentClassName = Parent.getName();\n    // Initialize class.\n    initClass(Class);\n    // Store child class in the parent class.\n    Parent.children.push(Class);\n    // Extend class with the parent class definition.\n    Class.extend(Parent.definition);\n    // Extend class with the definition.\n    Class.extend(definition);\n    // Register a new type.\n    Type.create({\n      name: className,\n      class: Class,\n      validate(args) {\n        // Add current class as a param of validator.\n        args.param = Class;\n        Validators.class(args);\n      }\n    });\n\n    return Class;\n  }\n\n  static extend(extendDefinition, onlyModules = []) {\n    if (typeof onlyModules === \"string\") {\n      onlyModules = [onlyModules];\n    }\n\n    if (!Match.test(onlyModules, [String])) {\n      throwParseError([\n        {\n          class: this.getName()\n        },\n        {\n          method: \"extend\"\n        },\n        \"The second argument has to be a string or an array of strings\"\n      ]);\n    }\n\n    // Clone definition to not modify the original one.\n    extendDefinition = cloneDefinition(extendDefinition);\n\n    Module.forEach(module => {\n      // If the second argument was passed, then we only run module hooks for\n      // modules that were listed in the second argument.\n      if (\n        onlyModules.length > 0 &&\n        !_includes(onlyModules, module.name) &&\n        _intersection(onlyModules, module.aliases).length === 0\n      ) {\n        return;\n      }\n      // Initialize parsed definition.\n      let parsedDefinition = {};\n      module.onInitDefinition(parsedDefinition, Class.getName());\n      // Parse the extending definition and put parsed properties in the parsed\n      // definition.\n      module.onParseDefinition(\n        parsedDefinition,\n        extendDefinition,\n        this.getName()\n      );\n      // Apply parsed definition.\n      module.onApplyDefinition(this, parsedDefinition, this.getName());\n      // Merge parsed definition with a class definition.\n      module.onMergeDefinitions(\n        this.definition,\n        parsedDefinition,\n        this.getName()\n      );\n      // Finalize class creation.\n      module.onFinalizeClass(this, this.getName());\n    });\n\n    // Extend children.\n    const children = this.getChildren();\n    _each(children, ChildClass => {\n      ChildClass.extend(extendDefinition, onlyModules);\n    });\n  }\n\n  static get(className) {\n    return this.classes[className];\n  }\n\n  static has(className) {\n    return _has(this.classes, className);\n  }\n\n  static includes(Class) {\n    return _includes(this.classes, Class);\n  }\n\n  static isParentOf(Class) {\n    if (!Class || !Class.prototype) {\n      return false;\n    }\n    return this.prototype.isPrototypeOf(Class.prototype);\n  }\n\n  static isChildOf(Class) {\n    if (!Class || !Class.prototype) {\n      return false;\n    }\n    return Class.prototype.isPrototypeOf(this.prototype);\n  }\n\n  static isNew(doc, isNew) {\n    if (arguments.length === 2) {\n      doc._isNew = isNew;\n    } else {\n      return doc._isNew;\n    }\n  }\n}\n\nClass.classes = {};\n\nexport default Class;\n","const Config = {\n  verbose: true,\n  resolving: true,\n  defaults: true\n};\n\nexport default Config;","import AstroClass from './class.js';\nimport Event from '../modules/events/event.js';\n\nEJSON.addType('Astronomy', function(json) {\n  let Class = AstroClass.get(json.class);\n  let doc = new Class();\n\n  // Trigger the \"fromJSONValue\" event handlers.\n  doc.dispatchEvent(new Event('fromJSONValue', {\n    json: json\n  }));\n\n  return doc;\n});","import _each from 'lodash/each';\nimport throwParseError from '../modules/core/utils/throw_parse_error.js';\n\nclass Module {\n  constructor(definition) {\n    if (!Match.test(definition, Object)) {\n      throwParseError([\n        'Module definition has to be an object'\n      ]);\n    }\n\n    // Set module name.\n    if (!Match.test(definition.name, String)) {\n      throwParseError([\n        'Module name has to be a string'\n      ]);\n    }\n    this.name = definition.name;\n\n    // Set module aliases.\n    if (!Match.test(definition.aliases, Match.Maybe([String]))) {\n      throwParseError([\n        `Module aliases has to be an array of strings in the \"${this.name}\" module`\n      ]);\n    }\n    this.aliases = definition.aliases;\n\n    // Set module hooks.\n    _each([\n      'onInitSchema', 'onInitDefinition', 'onInitClass', 'onParseDefinition',\n      'onApplyDefinition', 'onMergeDefinitions', 'onFinalizeClass'\n    ], (hookName) => {\n      if (definition[hookName] === undefined) {\n        return;\n      }\n      if (!Match.test(definition[hookName], Function)) {\n        throwParseError([{\n            'module': this.name\n          }, {\n            'property': hookName\n          },\n          `The \"${hookName}\" hook has to be a function`\n        ]);\n      }\n      this[hookName] = definition[hookName];\n    });\n\n    // Set module utils.\n    if (definition.utils) {\n      if (!Match.test(definition.utils, Object)) {\n        throwParseError([{\n            'module': this.name\n          }, {\n            'property': 'utils'\n          },\n          'Utilities definition has to be an object'\n        ]);\n      }\n      this.utils = {};\n      _each(definition.utils, (method, methodName) => {\n        if (!Match.test(method, Function)) {\n          throwParseError([{\n              'module': this.name\n            }, {\n              'property': 'utils'\n            }, {\n              'method': methodName\n            },\n            'Utility has to be a function'\n          ]);\n        }\n        this.utils[methodName] = method;\n      });\n    }\n  }\n\n  onInitSchema(schema, className) {}\n  onInitDefinition(definition, className) {}\n\n  onInitClass(Class, className) {}\n\n  onParseDefinition(parsedDefinition, definition, className) {}\n  onApplyDefinition(Class, definition, className) {}\n  onMergeDefinitions(targetDefinition, sourceDefinition, className) {}\n\n  onFinalizeClass(Class, className) {}\n\n  static create(definition) {\n    let module = new this(definition);\n    this.modules[module.name] = module;\n    this.modulesOrder.push(module.name);\n    return module;\n  }\n\n  static get(moduleName) {\n    return this.modules[moduleName];\n  }\n\n  static forEach(iteratee) {\n    if (!Match.test(iteratee, Function)) {\n      throwParseError([\n        'The first argument of the \"Module.forEach\" method has to be a function'\n      ]);\n    }\n    _each(this.modulesOrder, (moduleName) => {\n      iteratee(this.modules[moduleName]);\n    });\n  }\n};\n\nModule.modules = {};\nModule.modulesOrder = [];\n\nexport default Module;","const reservedNames = [\n  '_isNew',\n  'copy',\n  'dispatchEvent',\n  'get',\n  'getModified',\n  'getModifiedValues',\n  'getModifier',\n  'isModified',\n  'raw',\n  'reload',\n  'remove',\n  'save',\n  'set',\n  'toJSONValue',\n  'typeName',\n  'validate',\n  'validateAll'\n];\n\nexport default reservedNames;","import _has from 'lodash/has';\nimport _extend from 'lodash/extend';\nimport throwParseError from '../core/utils/throw_parse_error.js';\n\nconst checkDefinition = function(definition) {\n  // Check parameters validity.\n  if (!Match.test(definition, Object)) {\n    throwParseError([\n      'Behavior definition has to be an object'\n    ]);\n  }\n\n  // Check if behavior name is provided and is a string.\n  if (!Match.test(definition.name, String)) {\n    throwParseError([\n      'Behavior has to be named'\n    ]);\n  }\n\n  // Check if behavior with a given name already exists.\n  if (_has(Behavior.behaviors, definition.name)) {\n    throwParseError([{\n        'behavior': definition.name\n      },\n      'Behavior already exists'\n    ]);\n  }\n};\n\nclass Behavior {\n  constructor(options) {\n    this.options = _extend({}, this.options, options);\n  }\n\n  createClassDefinition() {}\n\n  apply(Class) {\n    let definition = this.createClassDefinition();\n    if (definition) {\n      Class.extend(definition);\n    }\n  }\n\n  static create(definition) {\n    checkDefinition(definition);\n\n    // Get behavior name.\n    let behaviorName = definition.name;\n    // Extend the Behavior class.\n    let Behavior = this.behaviors[behaviorName] = class Behavior extends this {};\n    // Store definition in behavior class.\n    Behavior.definition = definition;\n    // Extend prototype with a definition.\n    _extend(Behavior.prototype, definition);\n\n    return Behavior;\n  }\n\n  static get(behaviorName) {\n    return this.behaviors[behaviorName];\n  }\n\n  static has(behaviorName) {\n    return _has(this.behaviors, behaviorName);\n  }\n};\n\nBehavior.behaviors = {};\n\nexport default Behavior;","import Module from '../../core/module.js';\n// Hooks.\nimport onInitSchema from './hooks/init_schema.js';\nimport onInitDefinition from './hooks/init_definition.js';\nimport onParseDefinition from './hooks/parse_definition.js';\nimport onMergeDefinitions from './hooks/merge_definitions.js';\nimport onApplyDefinition from './hooks/apply_definition.js';\nimport onInitClass from './hooks/init_class.js';\n\nModule.create({\n\tname: 'behaviors',\n\tonInitSchema: onInitSchema,\n\tonInitDefinition: onInitDefinition,\n\tonParseDefinition: onParseDefinition,\n\tonMergeDefinitions: onMergeDefinitions,\n\tonApplyDefinition: onApplyDefinition,\n\tonInitClass: onInitClass\n});","function getBehavior(behaviorName) {\n  return this.schema.behaviors[behaviorName];\n};\n\nexport default getBehavior;","function getBehaviors() {\n  return this.schema.behaviors;\n};\n\nexport default getBehaviors;","import _has from 'lodash/has';\n\nfunction hasBehavior(behaviorName) {\n  return _has(this.schema.behaviors, behaviorName);\n};\n\nexport default hasBehavior;","import _each from 'lodash/each';\nimport Behavior from '../behavior.js';\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n  let schema = Class.schema;\n\n  // Add behaviors to the class.\n  _each(parsedDefinition.behaviors, (behaviorsOptions, behaviorName) => {\n    // Get the behavior class.\n    let BehaviorClass = Behavior.get(behaviorName);\n    _each(behaviorsOptions, (behaviorOptions) => {\n      // Create the behavior instance passing behavior options.\n      let behavior = new BehaviorClass(behaviorOptions);\n      // Add behavior to the schema.\n      schema.behaviors[behaviorName] = schema.behaviors[behaviorName] || [];\n      schema.behaviors[behaviorName].push(behavior);\n      // Apply behavior to the class.\n      behavior.apply(Class);\n    });\n  });\n};\n\nexport default onApplyDefinition;","import getBehavior from '../class_static_methods/get_behavior.js';\nimport getBehaviors from '../class_static_methods/get_behaviors.js';\nimport hasBehavior from '../class_static_methods/has_behavior.js';\n\nfunction onInitClass(Class, className) {\n\tClass.getBehavior = getBehavior;\n\tClass.getBehaviors = getBehaviors;\n\tClass.hasBehavior = hasBehavior;\n};\n\nexport default onInitClass;","function onInitDefinition(definition, className) {\n\tdefinition.behaviors = {};\n};\n\nexport default onInitDefinition;","function onInitSchema(schema, className) {\n\tschema.behaviors = {};\n};\n\nexport default onInitSchema;","import _each from 'lodash/each';\n\nfunction onMergeDefinitions(targetDefinition, sourceDefinition, ClassName) {\n  _each(sourceDefinition.behaviors, (behaviors, behaviorName) => {\n    targetDefinition.behaviors[behaviorName] =\n      targetDefinition.behaviors[behaviorName] || [];\n    targetDefinition.behaviors[behaviorName].push(...behaviors);\n  });\n};\n\nexport default onMergeDefinitions;","import _each from 'lodash/each';\nimport throwParseError from '../../core/utils/throw_parse_error.js';\nimport Behavior from '../behavior.js';\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  // Check existence of the \"behaviors\" property.\n  if (definition.behaviors !== undefined) {\n    if (!Match.test(definition.behaviors, Match.OneOf([String], Object))) {\n      throwParseError([{\n          'class': className\n        }, {\n          'property': 'behaviors'\n        },\n        `Behaviors definition has to be an array of behaviors' names or an ` +\n        `object with behaviors' options`\n      ]);\n    }\n    _each(definition.behaviors, function(behaviorOptions, behaviorName) {\n      // If we deal with an array of behaviors' names, then behavior options is\n      // an empty object.\n      if (typeof behaviorOptions === 'string') {\n        behaviorName = behaviorOptions;\n        behaviorOptions = [{}];\n      }\n      // Check if behavior with a given name exists.\n      if (!Behavior.has(behaviorName)) {\n        throwParseError([{\n            'class': className\n          }, {\n            'behavior': behaviorName\n          },\n          'Behavior does not exist'\n        ]);\n      }\n      // Behavior options has to be an object or an array of objects, when we\n      // are adding multiple behaviors of the same type.\n      if (!Match.test(behaviorOptions, Match.OneOf(Object, [Object]))) {\n        throwParseError([{\n            'class': className\n          }, {\n            'behavior': behaviorName\n          },\n          'Behavior options have to be an object or an array of objects'\n        ]);\n      }\n      // Make sure that behavior options is an array of objects.\n      if (!Match.test(behaviorOptions, Array)) {\n        behaviorOptions = [behaviorOptions];\n      }\n      parsedDefinition.behaviors[behaviorName] = behaviorOptions;\n    });\n  }\n};\n\nexport default onParseDefinition;","import Module from '../../core/module.js';\n// Utils.\nimport cloneDefinition from './utils/cloneDefinition';\nimport deprecated from './utils/deprecated.js';\nimport overrideMethod from './utils/override_method.js';\nimport throwParseError from './utils/throw_parse_error.js';\nimport warn from './utils/warn.js';\n\nModule.create({\n  name: 'core',\n  utils: {\n    cloneDefinition,\n    deprecated,\n    overrideMethod,\n    throwParseError,\n    warn\n  }\n});","import _cloneDeepWith from 'lodash/cloneDeepWith';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _isArray from 'lodash/isArray';\n\nfunction cloneDefinition(definition) {\n  return _cloneDeepWith(definition, (value) => {\n    if (!_isPlainObject(value) && !_isArray(value)) {\n      return value;\n    }\n  });\n}\n\nexport default cloneDefinition;","import config from '../../../core/config';\nimport warn from './warn';\n\nfunction deprecated(message) {\n  // Be silent and do not log any warnings.\n  if (!config.verbose) {\n    return;\n  }\n  // Print message to the console.\n  warn(`Deprecation warning: ${message}`);\n}\n\nexport default deprecated;","import _toArray from 'lodash/toArray';\n\nfunction overrideMethod(object, methodName, overridingMethod, param) {\n  // Get original method.\n  let originalMethod = object[methodName];\n\n  // Override original method.\n  object[methodName] = function() {\n    // Convert arguments to array.\n    let args = _toArray(arguments);\n\n    // Execute overriding method passing arguments, original method and extra\n    // parameters.\n    return overridingMethod.call(this, args, originalMethod, param);\n  };\n};\n\nexport default overrideMethod;","import _each from 'lodash/each';\nimport _isObject from 'lodash/isObject';\n\nfunction throwParseError(details) {\n  let message = '';\n\n  _each(details, (detail) => {\n    if (_isObject(detail)) {\n      _each(detail, (value, key) => {\n        message += '[\"' + value + '\" ' + key + ']'\n      });\n    }\n    else if (typeof detail === 'string') {\n      message += ' ' + detail;\n    }\n  });\n\n  throw new TypeError(message);\n};\n\nexport default throwParseError;","import config from \"../../../core/config.js\";\n\nfunction warn(warning) {\n  // Be silent and do not log any warnings.\n  if (!config.verbose) {\n    return;\n  }\n  try {\n    console.warn(warning);\n  } catch (error) {}\n}\n\nexport default warn;\n","import _extend from 'lodash/extend';\n\nclass Event {\n  constructor(type, data) {\n    this.cancelable = false;\n    this.propagates = false;\n\n    _extend(this, data);\n\n    this.type = type.toLowerCase();\n    this.timeStamp = Date.now();\n\n    this.target = null;\n    this.currentTarget = null;\n\n    this.defaultPrevented = false;\n    this.propagationStopped = false;\n    this.immediatePropagationStopped = false;\n  }\n\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n\n  stopImmediatePropagation() {\n    this.immediatePropagationStopped = true;\n    this.stopPropagation();\n  }\n};\n\nexport default Event;","import Module from '../../core/module.js';\n\nimport onInitSchema from './hooks/init_schema.js';\nimport onInitDefinition from './hooks/init_definition.js';\nimport onParseDefinition from './hooks/parse_definition.js';\nimport onMergeDefinitions from './hooks/merge_definitions.js';\nimport onApplyDefinition from './hooks/apply_definition.js';\nimport onInitClass from './hooks/init_class.js';\n\nModule.create({\n\tname: 'events',\n\tonInitSchema: onInitSchema,\n\tonInitDefinition: onInitDefinition,\n\tonParseDefinition: onParseDefinition,\n\tonMergeDefinitions: onMergeDefinitions,\n\tonApplyDefinition: onApplyDefinition,\n\tonInitClass: onInitClass\n});","import _each from 'lodash/each';\nimport _every from 'lodash/every';\nimport _isArray from 'lodash/isArray';\nimport Event from '../event.js';\nimport throwParseError from '../../core/utils/throw_parse_error.js';\nimport { default as AstroClass } from '../../../core/class.js';\n\nfunction returnFromDispatchEvent(event) {\n  // If an event is cancelable and it had been canceled with the\n  // \"preventDefault\" method call, then we return false.\n  if (event.cancelable) {\n    return !event.defaultPrevented;\n  }\n  return true;\n}\n\nfunction dispatchEvent(event) {\n  const doc = this;\n  const Class = doc.constructor;\n\n  if (!Match.test(event, Event)) {\n    throwParseError([{\n        'class': Class.getName()\n      }, {\n        'method': 'dispatchEvent'\n      },\n      'The first argument has to be an event object'\n    ]);\n  }\n\n  // Attach a document to the event as a target.\n  if (event.target === null) {\n    event.target = doc;\n  }\n  if (event.currentTarget === null) {\n    event.currentTarget = doc;\n  }\n\n  // Get all event handlers of a given type.\n  const eventHandlers = Class.getEvents(event.type);\n\n  _every(eventHandlers, function(eventHandler) {\n    eventHandler(event);\n\n    // Stop execution of the following event handlers, if a flag is set.\n    return !event.immediatePropagationStopped;\n  });\n\n  // If propagation was stopped or bubbling is turned off, then we don't go\n  // deeper into nested fields.\n  if (event.propagationStopped || !event.propagates) {\n    return returnFromDispatchEvent(event);\n  }\n\n  // Object fields.\n  _each(Class.getObjectFields(), function(field) {\n    let value = doc[field.name];\n    if (value instanceof AstroClass) {\n      event.currentTarget = value;\n      value.dispatchEvent(event);\n    }\n  });\n\n  // List fields.\n  _each(Class.getListFields(), function(field) {\n    let value = doc[field.name];\n    if (field.isClass && _isArray(value)) {\n      _each(value, function(element) {\n        if (element instanceof AstroClass) {\n          event.currentTarget = element;\n          element.dispatchEvent(event);\n        }\n      });\n    }\n  });\n\n  return returnFromDispatchEvent(event);\n}\n\nexport default dispatchEvent;","import _every from 'lodash/every';\nimport Event from '../event';\nimport throwParseError from '../../core/utils/throw_parse_error';\n\nfunction returnFromDispatchEvent(event) {\n  // If an event is cancelable and it had been canceled with the\n  // \"preventDefault\" method call, then we return false.\n  if (event.cancelable) {\n    return !event.defaultPrevented;\n  }\n  return true;\n}\n\nfunction dispatchEvent(event) {\n  const Class = this;\n\n  // Get all event handlers of a given type.\n  const eventHandlers = Class.getEvents(event.type);\n\n  // If there are no event of a fiven type, then just return true.\n  if (eventHandlers.length === 0) {\n    return true;\n  }\n\n  // Attach a document to the event as a target.\n  if (event.target === null) {\n    event.target = Class;\n  }\n  if (event.currentTarget === null) {\n    event.currentTarget = Class;\n  }\n\n  _every(eventHandlers, (eventHandler) => {\n    eventHandler(event);\n\n    // Stop execution of the following event handlers, if a flag is set.\n    return !event.immediatePropagationStopped;\n  });\n\n  return returnFromDispatchEvent(event);\n}\n\nexport default dispatchEvent;","function getEvents(eventName) {\n  let Class = this;\n\n  if (eventName) {\n    eventName = eventName.toLowerCase();\n    return Class.schema.events[eventName] || [];\n  }\n  return Class.schema.events;\n}\n\nexport default getEvents;","import _get from 'lodash/get';\nimport _has from 'lodash/has';\nimport _includes from 'lodash/includes';\n\nfunction hasEvent(eventName, eventHandler) {\n  const Class = this;\n\n  eventName = eventName.toLowerCase();\n\n  if (arguments.length === 2) {\n    return _includes(_get(Class.schema.events, eventName), eventHandler);\n  }\n  else if (arguments.length === 1) {\n    return _has(Class.schema.events, eventName);\n  }\n}\n\nexport default hasEvent;","import _defaults from 'lodash/defaults';\nimport _each from 'lodash/each';\nimport _uniq from 'lodash/uniq';\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n  const schema = Class.schema;\n\n  // Add events to the event manager.\n  _each(parsedDefinition.events, function(eventHandlers, eventName) {\n    eventName = eventName.toLowerCase();\n    // By default events list should be an empty array.\n    _defaults(schema.events, {\n      [eventName]: []\n    });\n    // Add all events to the list.\n    schema.events[eventName].push(...eventHandlers);\n    // Make sure that there are no duplicates.\n    schema.events[eventName] = _uniq(schema.events[eventName]);\n  });\n};\n\nexport default onApplyDefinition;","// Class static methods.\nimport dispatchEvent from '../class_static_methods/dispatch_event.js';\nimport getEvents from '../class_static_methods/get_events.js';\nimport hasEvent from '../class_static_methods/hasEvent';\n// Class prototype methods.\nimport { default as dispatchEventProto } from '../class_prototype_methods/dispatch_event.js';\n\nfunction onInitClass(Class, className) {\n  // Class static methods.\n  Class.dispatchEvent = dispatchEvent;\n  Class.getEvents = getEvents;\n  Class.hasEvent = hasEvent;\n  // Class prototype methods.\n  Class.prototype.dispatchEvent = dispatchEventProto;\n}\n\nexport default onInitClass;","function onInitDefinition(definition, className) {\n\tdefinition.events = {};\n};\n\nexport default onInitDefinition;","function onInitSchema(schema, className) {\n\tschema.events = {};\n};\n\nexport default onInitSchema;","import _defaults from 'lodash/defaults';\nimport _each from 'lodash/each';\nimport _uniq from 'lodash/uniq';\n\nfunction onMergeDefinitions(trgDefinition, srcDefinition, ClassName) {\n  _each(srcDefinition.events, function(eventHandlers, eventName) {\n    eventName = eventName.toLowerCase();\n    // By default events list should be an empty array.\n    _defaults(trgDefinition.events, {\n      [eventName]: []\n    });\n    // Add all events to the list.\n    trgDefinition.events[eventName].push(...eventHandlers);\n    // Make sure that there are no duplicates.\n    trgDefinition.events[eventName] = _uniq(trgDefinition.events[eventName]);\n  });\n};\n\nexport default onMergeDefinitions;","import _each from 'lodash/each';\nimport throwParseError from '../../core/utils/throw_parse_error.js';\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  // Check existence and validity of the \"events\" property.\n  if (definition.events !== undefined) {\n    _each(definition.events, function(eventHandlers, eventName) {\n      eventName = eventName.toLowerCase();\n      // Check if the event definition is an array of functions.\n      if (!Match.test(eventHandlers, Match.OneOf(Function, [Function]))) {\n        throwParseError([{\n            'class': className\n          }, {\n            'event': eventName\n          },\n          'Event handler has to be a function or an array of functions'\n        ]);\n      }\n      // Convert function to array of functions.\n      if (Match.test(eventHandlers, Function)) {\n        eventHandlers = [eventHandlers];\n      }\n      parsedDefinition.events[eventName] = eventHandlers;\n    });\n  }\n};\n\nexport default onParseDefinition;","import _zipObject from 'lodash/zipObject';\nimport _range from 'lodash/range';\nimport _forOwn from 'lodash/forOwn';\nimport _isNil from 'lodash/isNil';\nimport _isNumber from 'lodash/isNumber';\nimport _values from 'lodash/values';\nimport _keys from 'lodash/keys';\nimport _indexOf from 'lodash/indexOf';\nimport _each from 'lodash/each';\nimport Type from './type.js';\nimport Validators from '../validators/validators.js';\nimport { check, Match } from 'meteor/check';\n\nconst enumDefinitionPattern = {\n  name: String,\n  identifiers: Match.OneOf(Array, Object)\n};\n\nconst Enum = {\n  create(definition) {\n    check(definition, enumDefinitionPattern);\n\n    // Get identifiers and values.\n    let identifiers;\n    if (Match.test(definition.identifiers, Array)) {\n      identifiers = _zipObject(\n        definition.identifiers, _range(definition.identifiers.length)\n      );\n    }\n    else if (Match.test(definition.identifiers, Object)) {\n      identifiers = definition.identifiers;\n      let i = 0;\n      _forOwn(identifiers, function(value, key) {\n        if (_isNil(value)) {\n          identifiers[key] = i;\n          i++;\n        }\n        else if (_isNumber(value)) {\n          i = value + 1;\n        }\n      });\n    }\n    const values = _values(identifiers);\n    const keys = _keys(identifiers);\n    // Create a new Enum constructor.\n    const Enum = function Enum(identifier) {\n      return Enum[identifier];\n    };\n    Enum.getValues = function() {\n        return values;\n    };\n    Enum.getIdentifiers = function() {\n      return keys;\n    };\n    Enum.getIdentifier = function(value) {\n      const index = _indexOf(values, value);\n      return keys[index];\n    };\n    // Set identifiers properties in the class.\n    _each(identifiers, (value, name) => {\n      if (Object.defineProperty) {\n        Object.defineProperty(Enum, name, {\n          writable: false,\n          enumerable: true,\n          value\n        });\n      }\n      else {\n        Enum[name] = value;\n      }\n    });\n    // Create type definition for the given enum.\n    Type.create({\n      name: definition.name,\n      class: Enum,\n      validate(args) {\n        args.param = values;\n        Validators.choice(args);\n      }\n    });\n    // Store enum in the enums list.\n    this.enums[definition.name] = Enum;\n\n    return Enum;\n  },\n  enums: {}\n};\n\nexport default Enum;","import _defaults from 'lodash/defaults';\nimport _extend from 'lodash/extend';\nimport _isNil from 'lodash/isNil';\nimport Validators from '../validators/validators.js';\n\nclass Field {\n  constructor(definition = {}) {\n    _defaults(definition, {\n      optional: false,\n      immutable: false,\n      transient: false\n    });\n    _extend(this, definition);\n  }\n\n  getDefault(doc) {\n    const value = typeof this.default === 'function'\n      ? this.default(doc)\n      : this.default;\n    return this.castValue(value, {\n      cast: true\n    });\n  }\n\n  getOptional(doc) {\n    if (typeof this.optional === 'function') {\n      return this.optional(doc);\n    }\n    return this.optional;\n  }\n\n  validate(args) {\n    // If a field is not optional (required) then it has to have value.\n    if (!this.getOptional(args.doc)) {\n      Validators.required(args);\n    }\n  }\n\n  castValue(value, options) {\n    if (!_isNil(value)) {\n      return this.cast(value, options);\n    }\n    return value;\n  }\n\n  resolveValue(rawDoc) {\n    if (!rawDoc) {\n      return;\n    }\n    if (typeof this.resolve === 'function') {\n      return this.resolve(rawDoc);\n    }\n    return rawDoc[this.name];\n  }\n};\n\nexport default Field;","import _each from 'lodash/each';\nimport _isArray from 'lodash/isArray';\nimport _isNil from 'lodash/isNil';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _map from 'lodash/map';\nimport Field from './Field';\nimport AstroClass from '../../core/class';\nimport Validators from '../validators/validators';\nimport castToClass from './utils/castToClass';\nimport resolveValues from './utils/resolveValues';\n\nclass ListField extends Field {\n  constructor(definition = {}) {\n    super(definition);\n    this.isClass = AstroClass.isParentOf(this.type.class);\n  }\n\n  validate(args) {\n    super.validate(args);\n    var {\n      doc,\n      name,\n      value\n    } = args;\n    // If a value is not empty.\n    if (!_isNil(value)) {\n      Validators.array(args);\n      _each(value, (element, index) => {\n        this.type.validate({\n          doc,\n          name: name + '.' + index,\n          value: element\n        });\n      });\n    }\n  }\n\n  cast(value, options) {\n    if (options.element) {\n      return this.type.cast(value, options);\n    }\n    if (value === '' && this.optional) {\n      return null;\n    }\n    else if (_isArray(value)) {\n      return _map(value, (element) => {\n        // Class type.\n        if (this.isClass) {\n          // We only cast if a value is a plain object.\n          if (_isPlainObject(element)) {\n            // Cast value to an instance of the class.\n            return castToClass({\n              Class: this.type.class,\n              rawDoc: element,\n              options\n            });\n          }\n          return element;\n        }\n        // Scalar type.\n        else {\n          // The \"cast\" option is only passed to the ObjectFields and ListFields.\n          // Here we have to check if it's set, so we don't cast if user don't\n          // want to.\n          if (options.cast) {\n            return this.type.cast.call(this, element);\n          }\n          return element;\n        }\n      });\n    }\n    return value;\n  }\n\n  resolveValue(rawDoc) {\n    const resolvedValues = super.resolveValue(rawDoc);\n    if (!this.isClass) {\n      return resolvedValues;\n    }\n    return _map(resolvedValues, (nestedRawDoc) => {\n      return resolveValues({\n        Class: this.type.class,\n        rawDoc: nestedRawDoc\n      });\n    });\n  }\n};\n\nexport default ListField;\n","import _isPlainObject from 'lodash/isPlainObject';\nimport Field from './Field';\nimport castToClass from './utils/castToClass';\nimport resolveValues from './utils/resolveValues';\n\nclass ObjectField extends Field {\n  validate(args) {\n    super.validate(args);\n    this.type.validate(args);\n  }\n\n  cast(value, options) {\n    if (value === '' && this.optional) {\n      return null;\n    }\n    // We only cast if a value is a plain object.\n    else if (_isPlainObject(value)) {\n      // Cast value to an instance of the class.\n      return castToClass({\n        Class: this.type.class,\n        rawDoc: value,\n        options\n      });\n    }\n    return value;\n  }\n\n  resolveValue(rawDoc) {\n    return resolveValues({\n      Class: this.type.class,\n      rawDoc: super.resolveValue(rawDoc)\n    });\n  }\n};\n\nexport default ObjectField;","import _isNil from 'lodash/isNil';\nimport Field from './Field';\n\nclass ScalarField extends Field {\n  cast(value) {\n    return this.type.cast.call(this, value);\n  }\n\n  validate(args) {\n    super.validate(args);\n    var {\n      value\n    } = args;\n\n    if (!_isNil(value)) {\n      return this.type.validate(args);\n    }\n  }\n};\n\nexport default ScalarField;","import _clone from 'lodash/clone';\nimport _some from 'lodash/some';\nimport Type from './type.js';\nimport Validators from '../validators/validators.js';\nimport { check, Match } from 'meteor/check';\n\nconst unionDefinitionPattern = {\n  name: String,\n  types: [Function],\n  cast: Match.Optional(Function)\n};\n\nconst Union = {\n  create(definition) {\n    check(definition, unionDefinitionPattern);\n\n    // Create a new Union constructor.\n    const Union = function Union(identifier) {\n      return Union[identifier];\n    };\n\n    // Copy list of types to the union constructor.\n    Union.types = _clone(definition.types);\n    // Copy casting function to the union constructor if defined.\n    if (typeof definition.cast === 'function') {\n      Union.cast = definition.cast;\n    }\n\n    // Create type definition for the given enum.\n    Type.create({\n      name: definition.name,\n      class: Union,\n      cast(value) {\n        return Union.cast ? Union.cast(value) : value;\n      },\n      validate(args) {\n        const caughtErrors = [];\n        // Check if a value will pass validation executed by any of the union\n        // types.\n        if (!_some(Union.types, (TypeClass) => {\n          const AstroType = Type.find(TypeClass);\n          try {\n            AstroType.validate(args);\n            return true;\n          }\n          catch (err) {\n            caughtErrors.push(err);\n            return false;\n          }\n        })) {\n          throw caughtErrors[0];\n        }\n      }\n    });\n    // Store enum in the unions list.\n    this.unions[definition.name] = Union;\n\n    return Union;\n  },\n  unions: {}\n};\n\nexport default Union;","import Module from '../../core/module.js';\n// Types.\nimport './types/boolean.js';\nimport './types/date.js';\nimport './types/mongo_object_id.js';\nimport './types/number.js';\nimport './types/object.js';\nimport './types/string.js';\n// Utils.\nimport castNested from './utils/castNested';\nimport getAll from './utils/getAll';\nimport getMany from './utils/getMany';\nimport getOne from './utils/getOne';\nimport isNestedFieldName from './utils/isNestedFieldName';\nimport rawAll from './utils/rawAll';\nimport rawMany from './utils/rawMany';\nimport rawOne from './utils/rawOne';\nimport setAll from './utils/set_all.js';\nimport setMany from './utils/set_many.js';\nimport setOne from './utils/set_one.js';\nimport traverse from './utils/traverse.js';\n// Hooks.\nimport onInitSchema from './hooks/init_schema.js';\nimport onInitDefinition from './hooks/init_definition.js';\nimport onParseDefinition from './hooks/parse_definition.js';\nimport onMergeDefinitions from './hooks/merge_definitions.js';\nimport onApplyDefinition from './hooks/apply_definition.js';\nimport onInitClass from './hooks/init_class.js';\n\nModule.create({\n  name: 'fields',\n  onInitSchema,\n  onInitDefinition,\n  onParseDefinition,\n  onMergeDefinitions,\n  onApplyDefinition,\n  onInitClass,\n  utils: {\n    castNested,\n    getAll,\n    getMany,\n    getOne,\n    isNestedFieldName,\n    rawAll,\n    rawMany,\n    rawOne,\n    setAll,\n    setMany,\n    setOne,\n    traverse\n  }\n});","import _find from \"lodash/find\";\nimport _has from \"lodash/has\";\nimport Validators from \"../validators/validators.js\";\nimport warn from \"../core/utils/warn\";\n\nconst typeDefinitionPattern = {\n  name: String,\n  class: Match.Any,\n  cast: Match.Optional(Function),\n  validate: Match.Optional(Function)\n};\n\nconst enumDefinitionPattern = {\n  name: String,\n  options: Object\n};\n\nclass Type {\n  constructor(definition) {\n    check(definition, typeDefinitionPattern);\n\n    this.name = definition.name;\n    this.class = definition.class;\n\n    if (typeof definition.validate === \"function\") {\n      this.validate = definition.validate;\n    }\n\n    if (typeof definition.cast === \"function\") {\n      this.cast = definition.cast;\n    }\n  }\n\n  cast(value) {\n    return value;\n  }\n\n  validate(doc, fieldName) {\n    return true;\n  }\n\n  static create(definition) {\n    let type = new Type(definition);\n    // Warn about class duplicate.\n    if (_has(this.types, type.name)) {\n      warn(`Duplicate of the \"${type.name}\" type`);\n    }\n    this.types[type.name] = type;\n  }\n\n  static get(name) {\n    return this.types[name];\n  }\n\n  static has(name) {\n    return _has(this.types, name);\n  }\n\n  static find(Class) {\n    return _find(this.types, type => {\n      return type.class.prototype === Class.prototype;\n    });\n  }\n}\n\nType.types = {};\n\nexport default Type;\n","function fromJSONValue(e) {\n  let doc = e.currentTarget;\n  doc.set(EJSON.parse(e.json.values), {\n    defaults: false,\n    clone: false,\n    cast: false\n  });\n}\n\nexport default fromJSONValue;","import getAll from '../utils/getAll';\n\nfunction toJSONValue(e) {\n\tlet doc = e.currentTarget;\n\te.json.values = EJSON.stringify(getAll(doc));\n};\n\nexport default toJSONValue;","import _isArray from 'lodash/isArray';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport getAll from '../utils/getAll';\nimport getMany from '../utils/getMany';\nimport getOne from '../utils/getOne';\n\nfunction get(...args) {\n  if (args.length === 0) {\n    return getAll(this);\n  }\n  else if (args.length >= 1) {\n    if (typeof args[0] === 'string') {\n      return getOne(this, ...args);\n    }\n    else if (_isArray(args[0])) {\n      return getMany(this, ...args);\n    }\n    else if (_isPlainObject(args[0])) {\n      return getAll(this, ...args);\n    }\n  }\n};\n\nexport default get;","import _isArray from 'lodash/isArray';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport rawAll from '../utils/rawAll';\nimport rawMany from '../utils/rawMany';\nimport rawOne from '../utils/rawOne';\n\nfunction raw(...args) {\n  if (args.length === 0) {\n    return rawAll(this);\n  }\n  else if (args.length >= 1) {\n    if (typeof args[0] === 'string') {\n      return rawOne(this, ...args);\n    }\n    else if (_isArray(args[0])) {\n      return rawMany(this, ...args);\n    }\n    else if (_isPlainObject(args[0])) {\n      return rawAll(this, ...args);\n    }\n  }\n};\n\nexport default raw;","import _each from 'lodash/each';\nimport _extend from 'lodash/extend';\nimport _isArray from 'lodash/isArray';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport config from '../../../core/config';\nimport setMany from '../utils/set_many';\nimport setOne from '../utils/set_one';\nimport castNested from '../utils/castNested';\n\nfunction merge(doc) {\n  const result = {};\n  _each(doc, (fieldValue, fieldName) => {\n    // If a field value is an object then we prefix each nested field name with\n    // a field name of the parent object. However, we can not do it for arrays\n    // as it's not obvious how we would like to merge arrays - concat/replace?\n    if (_isPlainObject(fieldValue) && !_isArray(fieldValue)) {\n      _each(merge(fieldValue), (nestedFieldValue, nestedFieldName) => {\n        result[`${fieldName}.${nestedFieldName}`] = nestedFieldValue;\n      });\n    }\n    else {\n      result[fieldName] = fieldValue;\n    }\n  });\n  return result;\n}\n\nfunction set(...args) {\n  const doc = this;\n\n  // Default options.\n  const options = {\n    defaults: config.defaults,\n    clone: true,\n    cast: false,\n    merge: false\n  };\n\n  // Setting single field.\n  if (typeof args[0] === 'string' && args.length >= 2) {\n    // The last argument is an options object.\n    if (_isPlainObject(args[2])) {\n      _extend(options, args[2]);\n    }\n    // Do not override values if the \"merge\" option is set and instead merge\n    // nested objects.\n    if (options.merge && _isPlainObject(args[1])) {\n      setMany(doc, merge({\n        [args[0]]: args[1]\n      }), options);\n    }\n    else {\n      setOne(doc, args[0], args[1], options);\n    }\n  }\n  // Setting multiple fields at once.\n  else if (_isPlainObject(args[0]) && args.length >= 1) {\n    // The last argument is an options object.\n    if (_isPlainObject(args[1])) {\n      _extend(options, args[1]);\n    }\n    // Do not override values if the \"merge\" option is set and instead merge\n    // nested objects.\n    if (options.merge) {\n      setMany(doc, merge(args[0]), options);\n    }\n    else {\n      setMany(doc, args[0], options);\n    }\n  }\n};\n\nexport default set;","function getField(fieldName) {\n  return this.schema.fields[fieldName];\n}\n\nexport default getField;","import _values from 'lodash/values';\n\nfunction getFields() {\n  return _values(this.schema.fields);\n};\n\nexport default getFields;","import _defaults from 'lodash/defaults';\nimport _each from 'lodash/each';\n\nfunction getFieldsNames(options = {}) {\n  // Prepare options.\n  _defaults(options, {\n    transient: true,\n    immutable: true\n  });\n\n  const fieldsNames = [];\n  _each(this.schema.fields, (field, name) => {\n    // Don't get a transient field.\n    if (!options.transient && field.transient) {\n      return;\n    }\n    // Don't get an immutable field.\n    if (!options.immutable && field.immutable) {\n      return;\n    }\n    fieldsNames.push(name);\n  });\n\n  return fieldsNames;\n};\n\nexport default getFieldsNames;","import _filter from 'lodash/filter';\n\nimport ListField from '../ListField';\n\nfunction getListFields(classOnly = false) {\n  return _filter(this.getFields(), function(field) {\n    if (classOnly) {\n      return field instanceof ListField && field.isClass;\n    }\n    return field instanceof ListField;\n  });\n};\n\nexport default getListFields;","import _filter from 'lodash/filter';\n\nimport ObjectField from '../ObjectField';\n\nfunction getObjectFields() {\n\treturn _filter(this.getFields(), function(field) {\n\t\treturn field instanceof ObjectField;\n\t});\n};\n\nexport default getObjectFields;","import _filter from 'lodash/filter';\n\nimport ScalarField from '../ScalarField';\n\nfunction getScalarFields() {\n\treturn _filter(this.getFields(), function(field) {\n\t\treturn field instanceof ScalarField;\n\t});\n};\n\nexport default getScalarFields;","import _has from 'lodash/has';\n\nfunction hasField(fieldName) {\n  return _has(this.schema.fields, fieldName);\n};\n\nexport default hasField;","import _each from 'lodash/each';\nimport _extend from 'lodash/extend';\nimport throwParseError from '../../core/utils/throw_parse_error.js';\nimport Type from '../type.js';\nimport AstroClass from '../../../core/class.js';\nimport ScalarField from '../ScalarField';\nimport ObjectField from '../ObjectField';\nimport ListField from '../ListField';\n\nfunction checkTypeExistence(type, className, fieldName) {\n  if (!type) {\n    throwParseError([{\n        'class': className\n      }, {\n        'property': 'fields'\n      }, {\n        'field': fieldName\n      },\n      'Type does not exist'\n    ]);\n  }\n}\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n  _each(parsedDefinition.fields, function(fieldDefinition, fieldName) {\n    // Prepare field variable.\n    let field;\n    // List field.\n    if (Match.test(fieldDefinition.type, Array)) {\n      let type = Type.find(fieldDefinition.type[0]);\n      checkTypeExistence(type, className, fieldDefinition.name);\n      if (AstroClass.isParentOf(type.class)) {\n        field = new ListField(\n          _extend({}, fieldDefinition, {\n            type: type\n          })\n        );\n      }\n      else {\n        field = new ListField(\n          _extend({}, fieldDefinition, {\n            type: type\n          })\n        );\n      }\n    }\n    // Scalar or object field.\n    else {\n      let type = Type.find(fieldDefinition.type);\n      checkTypeExistence(type, className, fieldDefinition.name);\n      if (AstroClass.isParentOf(type.class)) {\n        field = new ObjectField(\n          _extend({}, fieldDefinition, {\n            type: type\n          })\n        );\n      }\n      else {\n        field = new ScalarField(\n          _extend({}, fieldDefinition, {\n            type: type\n          })\n        );\n      }\n    }\n\n    // Add a field object to the fields list.\n    Class.schema.fields[fieldName] = field;\n    Class.schema.fieldsNames.push(fieldName);\n  });\n}\n\nexport default onApplyDefinition;","// Class static methods.\nimport getField from '../class_static_methods/get_field.js';\nimport getFieldsNames from '../class_static_methods/get_fields_names.js';\nimport getFields from '../class_static_methods/get_fields.js';\nimport getObjectFields from '../class_static_methods/get_object_fields.js';\nimport getListFields from '../class_static_methods/get_list_fields.js';\nimport getScalarFields from '../class_static_methods/get_scalar_fields.js';\nimport hasField from '../class_static_methods/has_field.js';\n// Class prototype methods.\nimport get from '../class_prototype_methods/get.js';\nimport raw from '../class_prototype_methods/raw.js';\nimport set from '../class_prototype_methods/set.js';\n// Class events.\nimport fromJSONValue from '../class_events/from_json_value.js';\nimport toJSONValue from '../class_events/to_json_value.js';\n\nfunction onInitClass(Class, className) {\n  // Class static methods.\n  Class.getField = getField;\n  Class.getFieldsNames = getFieldsNames;\n  Class.getFields = getFields;\n  Class.getObjectFields = getObjectFields;\n  Class.getListFields = getListFields;\n  Class.getScalarFields = getScalarFields;\n  Class.hasField = hasField;\n  // Class prototype methods.\n  Class.prototype.get = get;\n  Class.prototype.raw = raw;\n  Class.prototype.set = set;\n  // Class events.\n  Class.extend({\n    events: {\n      fromJSONValue,\n      toJSONValue\n    }\n  }, ['events']);\n};\n\nexport default onInitClass;","function onInitDefinition(definition, className) {\n\tdefinition.fields = {};\n};\n\nexport default onInitDefinition;","function onInitSchema(schema, className) {\n  schema.fields = {};\n  schema.fieldsNames = [];\n};\n\nexport default onInitSchema;","import _each from 'lodash/each';\n\nfunction onMergeDefinitions(targetDefinition, sourceDefinition, className) {\n  _each(sourceDefinition.fields, function(fieldDefinition, fieldName) {\n    targetDefinition.fields[fieldName] = fieldDefinition;\n  });\n};\n\nexport default onMergeDefinitions;","import _each from 'lodash/each';\nimport _extend from 'lodash/extend';\nimport _includes from 'lodash/includes';\nimport throwParseError from '../../core/utils/throw_parse_error.js';\nimport Class from '../../../core/class.js';\nimport Type from '../type.js';\nimport reservedKeywords from '../../../core/reserved_keywords.js';\n\nconst typePattern = Match.OneOf(Function, [Function]);\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  if (definition.fields === undefined) {\n    return;\n  }\n\n  // Fields definition has to be an object.\n  if (!Match.test(definition.fields, Object)) {\n    throwParseError([{\n        'class': className\n      }, {\n        'property': 'fields'\n      },\n      'Fields definition has to be an object'\n    ]);\n  }\n\n  _each(definition.fields, function(fieldDefinition, fieldName) {\n    if (Match.test(fieldDefinition, typePattern)) {\n      fieldDefinition = {\n        name: fieldName,\n        type: fieldDefinition\n      };\n    }\n    else if (Match.test(fieldDefinition, Object)) {\n      fieldDefinition = _extend(fieldDefinition, {\n        name: fieldName\n      });\n    }\n    else {\n      throwParseError([{\n          'class': className\n        }, {\n          'property': 'fields'\n        }, {\n          'field': fieldName\n        },\n        'Field definition has to be an object or type'\n      ]);\n    }\n\n    // Check if a field name is not reserved keyword.\n    if (_includes(reservedKeywords, fieldName)) {\n      throwParseError([{\n          'class': className\n        }, {\n          'method': fieldName\n        },\n        'Reserved keyword'\n      ]);\n    }\n\n    parsedDefinition.fields[fieldDefinition.name] = fieldDefinition;\n  });\n};\n\nexport default onParseDefinition;","import _isObject from 'lodash/isObject';\nimport Type from '../type.js';\nimport Validators from '../../validators/validators.js';\n\nType.create({\n  name: 'Boolean',\n  class: Boolean,\n  cast(value) {\n    if (typeof value === 'boolean' && _isObject(value)) {\n      return value;\n    }\n    else if (typeof value === 'string') {\n      if (value === '') {\n        // The \"this\" context is a field.\n        if (this.optional) {\n          return null;\n        }\n        else {\n          return false;\n        }\n      }\n      else if (value.toLowerCase() === 'false' || value === '0') {\n        return false;\n      }\n    }\n    return Boolean(value);\n  },\n  validate(args) {\n    Validators.boolean(args);\n  }\n});","import _isNaN from 'lodash/isNaN';\nimport _isNumber from 'lodash/isNumber';\nimport Type from '../type.js';\nimport Validators from '../../validators/validators.js';\n\nType.create({\n  name: 'Date',\n  class: Date,\n  cast(value) {\n    if (_isNumber(value)) {\n      return new Date(value);\n    }\n    else if (typeof value === 'string') {\n      if (value === '') {\n        // The \"this\" context is a field.\n        if (this.optional) {\n          return null;\n        }\n      }\n      else if (/^[0-9]+$/.test(value)) {\n        return new Date(parseInt(value, 10));\n      }\n      else {\n        const time = Date.parse(value);\n        if (!_isNaN(time)) {\n          return new Date(time);\n        }\n      }\n    }\n    return value;\n  },\n  validate(args) {\n    Validators.date(args);\n  }\n});","import Type from '../type.js';\nimport Validators from '../../validators/validators.js';\nimport { Mongo } from 'meteor/mongo';\n\nType.create({\n  name: 'MongoObjectID',\n  class: Mongo.ObjectID,\n  validate(args) {\n    Validators.mongoObjectID(args);\n  }\n});","import _isNaN from 'lodash/isNaN';\nimport _isNumber from 'lodash/isNumber';\nimport _isObject from 'lodash/isObject';\nimport Type from '../type.js';\nimport Validators from '../../validators/validators.js';\n\nType.create({\n  name: 'Number',\n  class: Number,\n  cast(value) {\n    if (typeof value === 'string') {\n      if (value === '') {\n        // The \"this\" context is a field.\n        if (this.optional) {\n          return null;\n        }\n        else {\n          return 0;\n        }\n      }\n    }\n    else if (_isObject(value)) {\n      return value;\n    }\n    else if (!_isNaN(value) && _isNumber(value)) {\n      return value; \n    }\n    const number = Number(value);\n    return !_isNaN(number) ? number : value;\n  },\n  validate(args) {\n    Validators.number(args);\n  }\n});\n","import Type from '../type.js';\nimport Validators from '../../validators/validators.js';\n\nType.create({\n  name: 'Object',\n  class: Object,\n  validate(args) {\n    Validators.object(args);\n  }\n});","import _isObject from 'lodash/isObject';\nimport Type from '../type.js';\nimport Validators from '../../validators/validators.js';\n\nType.create({\n  name: 'String',\n  class: String,\n  cast(value) {\n    if (typeof value === 'string' || _isObject(value)) {\n      return value;\n    }\n    return String(value);\n  },\n  validate(args) {\n    Validators.string(args);\n  }\n});","import _each from 'lodash/each';\nimport ObjectField from '../ObjectField';\nimport ListField from '../ListField';\n\nfunction castNested(args = {}) {\n  const {\n    doc,\n    options\n  } = args;\n  const Class = doc.constructor;\n\n  _each(Class.getFields(), (field) => {\n    if (\n      (field instanceof ObjectField) ||\n      (field instanceof ListField && field.isClass)\n    ) {\n      doc[field.name] = field.castValue(doc[field.name], options);\n    }\n  });\n};\n\nexport default castNested;","import getChildClass from './getChildClass';\n\nfunction castToClass(args = {}) {\n  const {\n    Class,\n    rawDoc,\n    options\n  } = args;\n  // If the class has a type field, then we have to check if we are\n  // casting to some of the nested classes.\n  const ChildClass = getChildClass({\n    Class,\n    rawDoc\n  });\n  // Create instance of an original class or some of its childs.\n  return new ChildClass(rawDoc, options);\n}\n\nexport default castToClass;","import _defaults from 'lodash/defaults';\nimport getMany from './getMany';\n\nfunction getAll(doc, options = {}) {\n  // Prepare default options values.\n  _defaults(options, {\n    transient: true,\n    immutable: true,\n    undefined: true\n  });\n\n  const Class = doc.constructor;\n\n  // Get list of fields and their values.\n  return getMany(doc, Class.getFieldsNames(options), options);\n};\n\nexport default getAll;","import config from '../../../core/config';\n\nfunction getChildClass(args = {}) {\n  const {\n    Class,\n    rawDoc\n  } = args;\n\n  const typeField = Class.getTypeField();\n  // If a class does not have a type field, then we just return an original\n  // class.\n  if (!typeField) {\n    return Class;\n  }\n  // If a class has a type field, then we have to check if a raw document\n  // contains information about child class type.\n  const ChildClass = Class.get(rawDoc[typeField]);\n  // Return a child class if it exists and in fact it's a child of an original\n  // class.\n  if (ChildClass && ChildClass.isChildOf(Class)) {\n    return ChildClass;\n  }\n  // Otherwise just return original class.\n  return Class;\n}\n\nexport default getChildClass;","import _defaults from 'lodash/defaults';\nimport _map from 'lodash/map';\nimport _omitBy from 'lodash/omitBy';\nimport _zipObject from 'lodash/zipObject';\nimport getOne from './getOne';\n\nfunction getMany(doc, fieldsNames, options = {}) {\n  // Prepare default options values.\n  _defaults(options, {\n    transient: true,\n    immutable: true,\n    undefined: true\n  });\n\n  const values = _zipObject(\n    fieldsNames,\n    _map(fieldsNames, (fieldName) => {\n      return getOne(doc, fieldName, options);\n    })\n  );\n\n  if (options.undefined) {\n    return values;\n  }\n  else {\n    return _omitBy(values, (value) => value === undefined);\n  }\n};\n\nexport default getMany;","import _defaults from 'lodash/defaults';\nimport traverse from './traverse.js';\n\nfunction getOne(doc, fieldName, options = {}) {\n  // Prepare default options values.\n  _defaults(options, {\n    transient: true,\n    immutable: true\n  });\n\n  return traverse(\n    doc, fieldName,\n    function(nestedDoc, nestedFieldName, field) {\n      // If a field does not exist than we don't return anything.\n      if (!field) {\n        return;\n      }\n\n      // Don't get a transient field.\n      if (!options.transient && field.transient) {\n        return;\n      }\n\n      // Don't get an immutable field.\n      if (!options.immutable && field.immutable) {\n        return;\n      }\n\n      // Just return value.\n      return nestedDoc[nestedFieldName];\n    }\n  );\n};\n\nexport default getOne;","function isNestedFieldName(fieldPattern) {\n  return fieldPattern.indexOf('.') !== -1;\n};\n\nexport default isNestedFieldName;","import _defaults from 'lodash/defaults';\nimport rawMany from './rawMany';\n\nfunction rawAll(doc, options = {}) {\n  // Prepare default options values.\n  _defaults(options, {\n    transient: true,\n    immutable: true,\n    undefined: true\n  });\n\n  const Class = doc.constructor;\n\n  // Get list of fields and their values.\n  return rawMany(doc, Class.getFieldsNames(options), options);\n};\n\nexport default rawAll;","import _defaults from 'lodash/defaults';\nimport _map from 'lodash/map';\nimport _omitBy from 'lodash/omitBy';\nimport _zipObject from 'lodash/zipObject';\nimport rawOne from './rawOne';\n\nfunction rawMany(doc, fieldsNames, options = {}) {\n  // Prepare default options values.\n  _defaults(options, {\n    transient: true,\n    immutable: true,\n    undefined: true\n  });\n\n  const values = _zipObject(\n    fieldsNames,\n    _map(fieldsNames, (fieldName) => {\n      return rawOne(doc, fieldName, options);\n    })\n  );\n\n  if (options.undefined) {\n    return values;\n  }\n  else {\n    return _omitBy(values, (value) => value === undefined);\n  }\n};\n\nexport default rawMany;","import _defaults from 'lodash/defaults';\nimport _isArray from 'lodash/isArray';\nimport _map from 'lodash/map';\nimport AstroClass from '../../../core/class.js';\nimport traverse from './traverse.js';\nimport rawAll from './rawAll';\n\nfunction rawOne(doc, fieldName, options = {}) {\n  // Prepare default options values.\n  _defaults(options, {\n    transient: true,\n    immutable: true,\n    // We still need the \"undefined\" options in the \"rawOne\" util, because we\n    // might want to get nested document that may have undefined fields.\n    undefined: true\n  });\n\n  return traverse(\n    doc, fieldName,\n    function(nestedDoc, nestedFieldName, field) {\n      // If a field does not exist than we don't return anything.\n      if (!field) {\n        return;\n      }\n\n      // Don't get a transient field.\n      if (!options.transient && field.transient) {\n        return;\n      }\n\n      // Don't get an immutable field.\n      if (!options.immutable && field.immutable) {\n        return;\n      }\n\n      // Get field's value.\n      const fieldValue = nestedDoc[nestedFieldName];\n\n      if (fieldValue instanceof AstroClass) {\n        return rawAll(fieldValue, options);\n      }\n      else if (_isArray(fieldValue)) {\n        return _map(fieldValue, function(element) {\n          if (element instanceof AstroClass) {\n            return rawAll(element, options);\n          }\n          else {\n            return element;\n          }\n        });\n      }\n      else {\n        return fieldValue;\n      }\n    }\n  );\n};\n\nexport default rawOne;","import _fromPairs from 'lodash/fromPairs';\nimport _map from 'lodash/map';\nimport config from '../../../core/config.js';\nimport getChildClass from './getChildClass';\n\nfunction resolveValues(args = {}) {\n  const {\n    Class,\n    rawDoc\n  } = args;\n\n  // We can not resolve when dealing with non object value or the \"resolving\"\n  // config param is turned off.\n  if (!rawDoc || !config.resolving) {\n    return rawDoc;\n  }\n\n  // When resolving values, we need to get resolve method for a child class\n  // if a given document is actually an instance of child class.\n  const ChildClass = getChildClass({\n    Class,\n    rawDoc\n  });\n\n  // Construct resolved document from key-value pairs.\n  return _fromPairs(\n    _map(ChildClass.getFields(), (field) => {\n      return [\n        field.name,\n        field.resolveValue(rawDoc)\n      ];\n    })\n  );\n}\n\nexport default resolveValues;","import _difference from 'lodash/difference';\nimport _each from 'lodash/each';\nimport _forOwn from 'lodash/forOwn';\nimport _keys from 'lodash/keys';\nimport setOne from './set_one.js';\n\nfunction setAll(doc, fieldsValues, options) {\n  const Class = doc.constructor;\n\n  // Get names of the fields that are not present in the fieldsValues variable.\n  const fieldsNames = _difference(Class.getFieldsNames(), _keys(fieldsValues));\n\n  _each(fieldsNames, (fieldName) => {\n    setOne(doc, fieldName, undefined, options);\n  });\n\n  _forOwn(fieldsValues, (fieldValue, fieldName) => {\n    setOne(doc, fieldName, fieldValue, options);\n  });\n};\n\nexport default setAll;","import _forOwn from 'lodash/forOwn';\nimport setOne from './set_one.js';\n\nfunction setMany(doc, fieldsValues, options) {\n  // Set multiple fields.\n  _forOwn(fieldsValues, (setValue, fieldName) => {\n    setOne(doc, fieldName, setValue, options);\n  });\n};\n\nexport default setMany;","import _isObject from 'lodash/isObject';\nimport { EJSON } from 'meteor/ejson';\nimport traverse from '../utils/traverse';\nimport warn from '../../core/utils/warn';\nimport ObjectField from '../ObjectField';\nimport ListField from '../ListField';\n\nfunction setOne(doc, fieldPattern, fieldValue, options) {\n  // If the \"clone\" option was set and the value being set is an object,\n  // then we clone value using the \"EJSON.clone\" function.\n  if (options.clone && _isObject(fieldValue)) {\n    fieldValue = EJSON.clone(fieldValue);\n  }\n\n  return traverse(\n    doc, fieldPattern,\n    (nestedDoc, nestedFieldName, field) => {\n      // If a field does not exist than we don't return anything.\n      if (!field) {\n        const Class = doc.constructor;\n        const className = Class.getName();\n        warn(\n          `[\"${className}\" class][\"${fieldPattern}\" field] ` +\n          'Trying to set a value of the field that does not exist in the class'\n        );\n        return;\n      }\n\n      // Cast value if the \"cast\" option was set or if a field is instance of\n      // ObjectField or ListField.\n      if (\n        (options.cast) ||\n        (field instanceof ObjectField) ||\n        (field instanceof ListField && field.isClass)\n      ) {\n        // If the \"cast\" option is set and we're casting array's element.\n        if (\n          (options.cast) &&\n          (field instanceof ListField) &&\n          (/\\d+/.test(nestedFieldName))\n        ) {\n          options.element = true;\n        }\n        fieldValue = field.castValue(fieldValue, options);\n      }\n\n      // Set default value if the \"defualts\" option was set.\n      if (fieldValue === undefined && options.defaults) {\n        fieldValue = field.getDefault(nestedDoc);\n      }\n\n      // Finally set casted/cloned/untouched value.\n      nestedDoc[nestedFieldName] = fieldValue;\n    }\n  );\n}\n\nexport default setOne;","import _isObject from 'lodash/isObject';\nimport isNestedFieldName from './isNestedFieldName';\nimport AstroClass from '../../../core/class';\n\nfunction traverse(doc, name, callback) {\n  if (!doc) {\n    return;\n  }\n\n  let Class;\n  let field;\n\n  // Check whether the given field name is a nested field name.\n  if (!isNestedFieldName(name)) {\n    // Get a class.\n    let Class = doc.constructor;\n    // Get a field definition.\n    let field = Class.getField(name);\n    // Execute the callback function passing the last nested document, the last\n    // segment name and a field object.\n    return callback(doc, name, field);\n  }\n\n  // Split the nested field pattern name by the \".\" character.\n  let segments = name.split('.');\n  // Get the last and one before the last index.\n  let lastIndex = segments.length - 1;\n\n  // Traverse nested fields until reaching the last one from the pattern.\n  let next = function(nestedDoc, segmentIndex) {\n    segmentIndex = segmentIndex || 0;\n    // Get a nested field name under the given index.\n    let segment = segments[segmentIndex];\n    // Check if a nested document is an instance of the Astronomy class and get\n    // a field object for a given field name;\n    if (nestedDoc instanceof AstroClass) {\n      // Get a class for of a nested document.\n      Class = nestedDoc.constructor;\n      // Get a field object from the nested class.\n      field = Class.getField(segment);\n    }\n    if (segmentIndex === lastIndex) {\n      // Execute the callback function, if we reached the last nested document.\n      return callback(nestedDoc, segment, field);\n    }\n    else if (_isObject(nestedDoc[segment])) {\n      // Go deeper if a value of the current nested document is an object.\n      return next(nestedDoc[segment], segmentIndex + 1);\n    }\n  };\n\n  // Start traversing nested fields.\n  return next(doc);\n};\n\nexport default traverse;","import Module from '../../core/module.js';\n// Hooks.\nimport onInitSchema from './hooks/onInitSchema.js';\nimport onInitDefinition from './hooks/onInitDefinition.js';\nimport onParseDefinition from './hooks/onParseDefinition.js';\nimport onMergeDefinitions from './hooks/onMergeDefinitions.js';\nimport onApplyDefinition from './hooks/onApplyDefinition.js';\nimport onInitClass from './hooks/onInitClass.js';\n\nModule.create({\n  name: 'methods',\n  aliases: ['helpers'],\n  onInitSchema: onInitSchema,\n  onInitDefinition: onInitDefinition,\n  onParseDefinition: onParseDefinition,\n  onMergeDefinitions: onMergeDefinitions,\n  onApplyDefinition: onApplyDefinition,\n  onInitClass: onInitClass\n});","function getHelper(helperName) {\n  return this.schema.helpers[helperName];\n};\n\nexport default getHelper;","function getHelpers() {\n  return this.schema.helpers;\n};\n\nexport default getHelpers;","import _has from 'lodash/has';\n\nfunction hasHelper(helperName) {\n  return _has(this.schema.helpers, helperName);\n};\n\nexport default hasHelper;","import _each from 'lodash/each';\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n  let schema = Class.schema;\n\n  // Add helpers to the class.\n  _each(parsedDefinition.helpers, (helper, helperName) => {\n    schema.helpers[helperName] = helper;\n    Class.prototype[helperName] = helper;\n  });\n};\n\nexport default onApplyDefinition;","import deprecated from '../../core/utils/deprecated';\n// Class static helpers.\nimport getHelper from '../class_static_methods/getHelper.js';\nimport getHelpers from '../class_static_methods/getHelpers.js';\nimport hasHelper from '../class_static_methods/hasHelper.js';\n\nfunction onInitClass(Class, className) {\n  Class.getHelper = getHelper;\n  Class.getHelpers = getHelpers;\n  Class.hasHelper = hasHelper;\n  // Class static helpers.\n  Class.getMethod = function(...args) {\n    deprecated(\n      `Methods have been renamed to helpers. Please use the ` +\n      `\"${className}.getHelper\" function.`\n    );\n    return this.getHelper.apply(this, args);\n  };\n  Class.getMethods = function(...args) {\n    deprecated(\n      `Methods have been renamed to helpers. Please use the ` +\n      `\"${className}.getHelpers\" function.`\n    );\n    return this.getHelpers.apply(this, args);\n  };\n  Class.hasMethod = function(...args) {\n    deprecated(\n      `Methods have been renamed to helpers. Please use the ` +\n      `\"${className}.hasHelper\" function.`\n    );\n    return this.hasHelper.apply(this, args);\n  };\n};\n\nexport default onInitClass;","function onInitDefinition(definition, className) {\n  definition.helpers = {};\n};\n\nexport default onInitDefinition;","function onInitSchema(schema, className) {\n  schema.helpers = {};\n};\n\nexport default onInitSchema;","import _each from 'lodash/each';\n\nfunction onMergeDefinitions(targetDefinition, sourceDefinition, ClassName) {\n  _each(sourceDefinition.helpers, function(helper, helperName) {\n    targetDefinition.helpers[helperName] = helper;\n  });\n};\n\nexport default onMergeDefinitions;","import _has from 'lodash/has';\nimport _each from 'lodash/each';\nimport _includes from 'lodash/includes';\nimport deprecated from '../../core/utils/deprecated';\nimport throwParseError from '../../core/utils/throw_parse_error.js';\nimport reservedKeywords from '../../../core/reserved_keywords.js';\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  if (definition.methods) {\n    definition.helpers = definition.helpers || {};\n    deprecated(\n      `Methods have been renamed to helpers. Please use the \"helpers\" ` +\n      `section in the \"${className}\" class definition.`\n    );\n    _each(definition.methods, (method, methodName) => {\n      if (_has(definition.helpers, methodName)) {\n        deprecated(\n          `Methods have been renamed to helpers. Please move the ` +\n          `\"${methodName}\" method to the \"helpers\" section in the ` +\n          `\"${className}\" class definition.`\n        );\n      }\n      else {\n        definition.helpers[methodName] = method;\n      }\n    });\n  }\n  // Check existence and validity of the \"helpers\" property.\n  if (definition.helpers !== undefined) {\n    if (!Match.test(definition.helpers, Object)) {\n      throwParseError([{\n          'class': className\n        }, {\n          'property': 'helpers'\n        },\n        'Helpers definition has to be an object'\n      ]);\n    }\n\n    _each(definition.helpers, (helper, helperName) => {\n      if (!Match.test(helper, Function)) {\n        throwParseError([{\n            'class': className\n          }, {\n            'helper': helperName\n          },\n          'Helper has to be a function'\n        ]);\n      }\n\n      if (_includes(reservedKeywords, helperName)) {\n        throwParseError([{\n            'class': className\n          }, {\n            'helper': helperName\n          },\n          'Reserved keyword'\n        ]);\n      }\n      parsedDefinition.helpers[helperName] = helper;\n    });\n  }\n};\n\nexport default onParseDefinition;","import Module from '../../core/module.js';\n// Hooks.\nimport onInitSchema from './hooks/init_schema.js';\nimport onInitDefinition from './hooks/init_definition.js';\nimport onParseDefinition from './hooks/parse_definition.js';\nimport onMergeDefinitions from './hooks/merge_definitions.js';\nimport onApplyDefinition from './hooks/apply_definition.js';\nimport onInitClass from './hooks/init_class.js';\n\nModule.create({\n\tname: 'indexes',\n\tonInitSchema: onInitSchema,\n\tonInitDefinition: onInitDefinition,\n\tonParseDefinition: onParseDefinition,\n\tonMergeDefinitions: onMergeDefinitions,\n\tonApplyDefinition: onApplyDefinition,\n\tonInitClass: onInitClass\n});","function getIndex(indexName) {\n\treturn this.schema.indexes[indexName];\n};\n\nexport default getIndex;","function getIndexes() {\n\treturn this.schema.indexes;\n};\n\nexport default getIndexes;","import _has from 'lodash/has';\n\nfunction hasIndex(indexName) {\n\treturn _has(this.schema.indexes, indexName);\n};\n\nexport default hasIndex;","import _concat from 'lodash/concat';\nimport _each from 'lodash/each';\nimport _extend from 'lodash/extend';\nimport _includes from 'lodash/includes';\nimport _mapKeys from 'lodash/mapKeys';\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n  const Collection = Class.getCollection();\n\n  if (\n    !Meteor.isServer ||\n    !Collection ||\n    (Collection && !Collection._connection)\n  ) {\n    return;\n  }\n\n  const schema = Class.schema;\n\n  function prefixIndexes(indexes, fieldName) {\n    // Prefix the fields property.\n    _each(indexes, (index, indexName) => {\n      index.fields = _mapKeys(index.fields, (value, key) => {\n        return `${fieldName}.${key}`;\n      });\n      _extend(index.options, {\n        name: `${fieldName}.${indexName}`\n      });\n    });\n    // Prefix object keys.\n    indexes = _mapKeys(indexes, (index, indexName) => {\n      return `${fieldName}.${indexName}`;\n    });\n    return indexes;\n  }\n\n  // Add indexes to the collection from nested classes.\n  const checkedClasses = [];\n  function collectNestedIndexes(Class) {\n    // Stop checking if a given class was already checked.\n    if (_includes(checkedClasses, Class)) {\n      return;\n    }\n    checkedClasses.push(Class);\n    const indexes = {};\n    const fields = _concat(\n      Class.getObjectFields(), Class.getListFields(true)\n    );\n    _each(fields, (field) => {\n      _extend(\n        indexes,\n        prefixIndexes(field.type.class.definition.indexes, field.name),\n        prefixIndexes(collectNestedIndexes(field.type.class), field.name)\n      );\n    });\n    return indexes;\n  }\n\n  const indexes = _extend(\n    {},\n    parsedDefinition.indexes,\n    collectNestedIndexes(Class)\n  );\n\n  _each(indexes, (index, indexName) => {\n    schema.indexes[indexName] = index;\n    Collection._ensureIndex(index.fields, index.options);\n  });\n};\n\nexport default onApplyDefinition;","// Class static methods.\nimport getIndex from '../class_static_methods/get_index.js';\nimport getIndexes from '../class_static_methods/get_indexes.js';\nimport hasIndex from '../class_static_methods/has_index.js';\n\nfunction onInitClass(Class, className) {\n\t// Class static methods.\n\tClass.getIndex = getIndex;\n\tClass.getIndexes = getIndexes;\n\tClass.hasIndex = hasIndex;\n};\n\nexport default onInitClass;","function onInitDefinition(definition, className) {\n\tdefinition.indexes = {};\n};\n\nexport default onInitDefinition;","function onInitSchema(schema, className) {\n\tschema.indexes = {};\n};\n\nexport default onInitSchema;","import _each from 'lodash/each';\n\nfunction onMergeDefinitions(targetDefinition, sourceDefinition, ClassName) {\n  _each(sourceDefinition.indexes, function(index, indexName) {\n    targetDefinition.indexes[indexName] = index;\n  });\n};\n\nexport default onMergeDefinitions;","import _each from 'lodash/each';\nimport throwParseError from '../../core/utils/throw_parse_error.js';\n\nconst fieldDefinitionPattern = Match.ObjectIncluding({\n  index: Match.OneOf(1, -1, String)\n});\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  // Check existence and validity of the \"indexes\" property.\n  if (definition.indexes !== undefined) {\n    _each(definition.indexes, (index, indexName) => {\n      if (!Match.test(index, Object)) {\n        throwParseError([{\n            'class': className\n          }, {\n            'index': indexName\n          },\n          'Indexes definition has to be an object'\n        ]);\n      }\n      index = {\n        fields: index.fields,\n        options: index.options || {}\n      };\n      index.options.name = index.options.name || indexName;\n      parsedDefinition.indexes[indexName] = index;\n    });\n  }\n\n  if (definition.fields !== undefined) {\n    _each(definition.fields, (fieldDefinition, fieldName) => {\n      // Stop if a field definition does not contain index information.\n      if (!Match.test(fieldDefinition, fieldDefinitionPattern)) {\n        return;\n      }\n      // Prepare an index definition.\n      let indexDefinition = {\n        fields: {},\n        options: {\n          name: fieldName\n        }\n      };\n      indexDefinition.fields[fieldName] = fieldDefinition.index;\n      parsedDefinition.indexes[fieldName] = indexDefinition;\n    });\n  }\n};\n\nexport default onParseDefinition;","import Module from '../../core/module.js';\n// Hooks.\nimport onInitSchema from './hooks/onInitSchema.js';\nimport onInitDefinition from './hooks/onInitDefinition.js';\nimport onParseDefinition from './hooks/onParseDefinition.js';\nimport onMergeDefinitions from './hooks/onMergeDefinitions.js';\nimport onApplyDefinition from './hooks/onApplyDefinition.js';\nimport onInitClass from './hooks/onInitClass.js';\nimport onFinalizeClass from './hooks/onFinalizeClass.js';\n\nModule.create({\n  name: 'meteorMethods',\n  onInitSchema,\n  onInitDefinition,\n  onParseDefinition,\n  onMergeDefinitions,\n  onApplyDefinition,\n  onInitClass,\n  onFinalizeClass\n});","import callMeteorMethod from \"../../storage/utils/call_meteor_method\";\nimport rawAll from \"../../fields/utils/rawAll\";\n\nfunction applyMethod(methodName, methodArgs, callback) {\n  const doc = this;\n  const Class = doc.constructor;\n\n  // Prepare arguments to be sent to the \"/Astronomy/execute\" method.\n  const meteorMethodArgs = {\n    className: Class.getName(),\n    methodName,\n    methodArgs,\n    rawDoc: rawAll(doc, {\n      transient: false\n    })\n  };\n\n  try {\n    return callMeteorMethod(\n      Class,\n      \"/Astronomy/execute\",\n      [meteorMethodArgs],\n      callback\n    );\n  } catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n    throw err;\n  }\n}\n\nexport default applyMethod;\n","import _last from 'lodash/last';\nimport applyMethod from './applyMethod';\n\nfunction callMethod(methodName, ...methodArgs) {\n  // Get the last argument.\n  let callback = _last(methodArgs);\n  // If the last argument is a callback function, then remove the last\n  // argument.\n  if (typeof callback === 'function') {\n    methodArgs.pop();\n  }\n  // If the last argument is not a callback function, then clear the\n  // \"callback\" variable.\n  else {\n    callback = undefined;\n  }\n  return applyMethod.call(this, methodName, methodArgs, callback);\n};\n\nexport default callMethod;","function getMethod(methodName) {\n\treturn this.schema.methods[methodName];\n};\n\nexport default getMethod;","function getMethods() {\n\treturn this.schema.methods;\n};\n\nexport default getMethods;","import _has from 'lodash/has';\n\nfunction hasMethod(methodName) {\n  return _has(this.schema.methods, methodName);\n};\n\nexport default hasMethod;","import _each from 'lodash/each';\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n  const schema = Class.schema;\n\n  // Add Meteor methods to the class schema.\n  _each(parsedDefinition.meteorMethods, (method, methodName) => {\n    schema.methods[methodName] = method;\n  });\n};\n\nexport default onApplyDefinition;","import _zipObject from \"lodash/zipObject\";\nimport _each from \"lodash/each\";\nimport wrapMethod from \"../utils/wrapMethod\";\nimport hasMeteorMethod from \"../../storage/utils/has_meteor_method\";\nimport astronomyExecute from \"../meteor_methods/astronomyExecute\";\nimport applyMethod from \"../class_prototype_methods/applyMethod\";\nimport callMethod from \"../class_prototype_methods/callMethod\";\n\nfunction onFinalizeClass(Class, className) {\n  const schema = Class.schema;\n\n  if (schema.collection) {\n    const Collection = schema.collection;\n    const connection =\n      Collection._connection || Meteor.connection || Meteor.server;\n    if (connection) {\n      if (!hasMeteorMethod(connection, \"/Astronomy/execute\")) {\n        // Add Meteor method.\n        connection.methods({\n          \"/Astronomy/execute\": astronomyExecute\n        });\n      }\n    }\n\n    // Add Meteor methods to the class.\n    _each(schema.methods, (method, methodName) => {\n      Class.prototype[methodName] = wrapMethod(methodName);\n    });\n\n    // Add universal \"applyMethod\" and \"callMethod\" methods that can invoke any\n    // method even if only defined on the server.\n    Class.prototype.applyMethod = applyMethod;\n    Class.prototype.callMethod = callMethod;\n  }\n}\n\nexport default onFinalizeClass;\n","// Class static methods.\nimport getMeteorMethod from '../class_static_methods/getMeteorMethod.js';\nimport getMeteorMethods from '../class_static_methods/getMeteorMethods.js';\nimport hasMeteorMethod from '../class_static_methods/hasMeteorMethod.js';\n\nfunction onInitClass(Class, className) {\n  // Class static methods.\n  Class.getMeteorMethod = getMeteorMethod;\n  Class.getMeteorMethods = getMeteorMethods;\n  Class.hasMeteorMethod = hasMeteorMethod;\n};\n\nexport default onInitClass;","function onInitDefinition(definition, className) {\n  definition.meteorMethods = {};\n};\n\nexport default onInitDefinition;","function onInitSchema(schema, className) {\n  schema.methods = {};\n};\n\nexport default onInitSchema;","import _each from 'lodash/each';\n\nfunction onMergeDefinitions(targetDefinition, sourceDefinition, className) {\n  _each(sourceDefinition.meteorMethods, function(method, methodName) {\n    targetDefinition.meteorMethods[methodName] = method;\n  });\n};\n\nexport default onMergeDefinitions;","import _each from 'lodash/each';\nimport _includes from 'lodash/includes';\nimport throwParseError from '../../core/utils/throw_parse_error.js';\nimport reservedKeywords from '../../../core/reserved_keywords.js';\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  // Check existence and validity of the \"meteorMethods\" property.\n  if (definition.meteorMethods !== undefined) {\n    if (!Match.test(definition.meteorMethods, Object)) {\n      throwParseError([{\n          'class': className\n        }, {\n          'property': 'meteorMethods'\n        },\n        'meteorMethods definition has to be an object'\n      ]);\n    }\n\n    _each(definition.meteorMethods, function(meteorMethod, meteorMethodName) {\n      if (!Match.test(meteorMethod, Function)) {\n        throwParseError([{\n            'class': className\n          }, {\n            'meteorMethod': meteorMethodName\n          },\n          'Meteor method has to be a function'\n        ]);\n      }\n\n      if (_includes(reservedKeywords, meteorMethodName)) {\n        throwParseError([{\n            'class': className\n          }, {\n            'meteorMethod': meteorMethodName\n          },\n          'Reserved keyword'\n        ]);\n      }\n      parsedDefinition.meteorMethods[meteorMethodName] = meteorMethod;\n    });\n  }\n};\n\nexport default onParseDefinition;","import AstroClass from '../../../core/class';\n\nfunction astronomyExecute(args = {}) {\n  check(args, Match.Any);\n\n  const {\n    className,\n    rawDoc,\n    methodName,\n    methodArgs\n  } = args;\n\n  const Class = AstroClass.get(className);\n  let doc;\n  if (rawDoc._id) {\n    doc = Class.findOne(rawDoc._id);\n  }\n  if (doc) {\n    doc.set(rawDoc);\n  }\n  else {\n    doc = new Class(rawDoc, {\n      clone: false\n    });\n  }\n\n  // Get a method from the class. In some cases method may not be present,\n  // because it might be defined only on the server.\n  const method = Class.getMeteorMethod(methodName);\n  if (!method) {\n    return;\n  }\n\n  return method.apply(doc, methodArgs);\n};\n\nexport default astronomyExecute;","import _last from \"lodash/last\";\nimport callMeteorMethod from \"../../storage/utils/call_meteor_method\";\nimport rawAll from \"../../fields/utils/rawAll\";\n\nfunction wrapMethod(methodName) {\n  return function(...methodArgs) {\n    const doc = this;\n    const Class = doc.constructor;\n\n    // Get the last argument.\n    let callback = _last(methodArgs);\n    // If the last argument is a callback function, then remove the last\n    // argument.\n    if (typeof callback === \"function\") {\n      methodArgs.pop();\n    } else {\n      // If the last argument is not a callback function, then clear the\n      // \"callback\" variable.\n      callback = undefined;\n    }\n    // Call the \"/Astronomy/execute\" method.\n    return doc.applyMethod(methodName, methodArgs, callback);\n  };\n}\n\nexport default wrapMethod;\n","import Module from \"../../core/module.js\";\n// Utils.\nimport applyModifier from \"./utils/apply_modifier.js\";\nimport callMeteorMethod from \"./utils/call_meteor_method.js\";\nimport classInsert from \"./utils/class_insert.js\";\nimport classUpdate from \"./utils/class_update.js\";\nimport classRemove from \"./utils/class_remove.js\";\nimport documentInsert from \"./utils/document_insert.js\";\nimport documentUpdate from \"./utils/document_update.js\";\nimport documentRemove from \"./utils/document_remove.js\";\nimport getModified from \"./utils/getModified\";\nimport getModifier from \"./utils/getModifier\";\nimport hasMeteorMethod from \"./utils/has_meteor_method.js\";\nimport isModified from \"./utils/isModified\";\nimport isRemote from \"./utils/is_remote.js\";\nimport omitUndefined from \"./utils/omit_undefined.js\";\nimport throwIfSelectorIsNotId from \"./utils/throw_if_selector_is_not_id.js\";\nimport transformToClass from \"./utils/transformToClass\";\nimport triggerBeforeSave from \"./utils/trigger_before_save.js\";\nimport triggerBeforeInsert from \"./utils/trigger_before_insert.js\";\nimport triggerBeforeUpdate from \"./utils/trigger_before_update.js\";\nimport triggerBeforeRemove from \"./utils/trigger_before_remove.js\";\nimport triggerAfterSave from \"./utils/trigger_after_save.js\";\nimport triggerAfterInsert from \"./utils/trigger_after_insert.js\";\nimport triggerAfterUpdate from \"./utils/trigger_after_update.js\";\nimport triggerAfterRemove from \"./utils/trigger_after_remove.js\";\nimport wrapTransform from \"./utils/wrapTransform.js\";\n// Hooks.\nimport onInitSchema from \"./hooks/init_schema.js\";\nimport onInitDefinition from \"./hooks/init_definition.js\";\nimport onParseDefinition from \"./hooks/parse_definition.js\";\nimport onMergeDefinitions from \"./hooks/merge_definitions.js\";\nimport onApplyDefinition from \"./hooks/apply_definition.js\";\nimport onInitClass from \"./hooks/init_class.js\";\n\nModule.create({\n  name: \"storage\",\n  onInitSchema: onInitSchema,\n  onInitDefinition: onInitDefinition,\n  onParseDefinition: onParseDefinition,\n  onMergeDefinitions: onMergeDefinitions,\n  onApplyDefinition: onApplyDefinition,\n  onInitClass: onInitClass,\n  utils: {\n    applyModifier,\n    callMeteorMethod,\n    classInsert,\n    classUpdate,\n    classRemove,\n    documentInsert,\n    documentUpdate,\n    documentRemove,\n    getModified,\n    getModifier,\n    hasMeteorMethod,\n    isModified,\n    isRemote,\n    omitUndefined,\n    throwIfSelectorIsNotId,\n    transformToClass,\n    triggerBeforeSave,\n    triggerBeforeInsert,\n    triggerBeforeUpdate,\n    triggerBeforeRemove,\n    triggerAfterSave,\n    triggerAfterInsert,\n    triggerAfterUpdate,\n    triggerAfterRemove,\n    wrapTransform\n  }\n});\n","function fromJSONValue(e) {\n  const doc = e.currentTarget;\n  doc._isNew = e.json.isNew;\n};\n\nexport default fromJSONValue;","function toJSONValue(e) {\n  const doc = e.currentTarget;\n  e.json.isNew = doc._isNew;\n};\n\nexport default toJSONValue;","function copy(save) {\n  const doc = this;\n  save = save || false;\n\n  // Use EJSON to clone object.\n  const copy = EJSON.clone(doc);\n\n  // Clear the \"_id\" field so when saving it will store it as a new document\n  // instead of updating the old one.\n  copy._id = null;\n  copy._isNew = true;\n\n  if (save) {\n    copy.save();\n  }\n\n  return copy;\n};\n\nexport default copy;","import utilGetModified from '../utils/getModified';\n\nfunction getModified() {\n  let doc = this;\n\n  return utilGetModified({\n    doc,\n    transient: true\n  });\n};\n\nexport default getModified;","import _each from 'lodash/each';\nimport utilGetModified from '../utils/getModified';\nimport rawOne from '../../fields/utils/rawOne';\n\nfunction getModifiedValues(options = {}) {\n  let {\n    old = false,\n    raw = false\n  } = options;\n\n  let doc = this;\n  const Class = doc.constructor;\n\n  // Get list of modified fields.\n  const modified = utilGetModified({\n    doc,\n    transient: true\n  });\n\n  // Get old or new values of a document.\n  if (old) {\n    doc = Class.findOne(doc._id);\n    if (!doc) {\n      doc = new Class();\n    }\n  }\n\n  // Collect values for each field.\n  const values = {};\n  _each(modified, (name) => {\n    if (raw) {\n      values[name] = rawOne(doc, name);\n    }\n    else {\n      values[name] = doc.get(name);\n    }\n  });\n\n  return values;\n};\n\nexport default getModifiedValues;","import utilGetModifier from '../utils/getModifier';\n\nfunction getModifier() {\n  let doc = this;\n\n  return utilGetModifier({\n    doc\n  });\n};\n\nexport default getModifier;","import utilIsModified from '../utils/isModified';\n\nfunction isModified(pattern) {\n\tlet doc = this;\n\n\treturn utilIsModified({\n\t\tdoc,\n\t\tpattern,\n\t\ttransient: true\n\t});\n};\n\nexport default isModified;","import castNested from '../../fields/utils/castNested';\nimport resolveValues from '../../fields/utils/resolveValues';\nimport Event from '../../events/event';\n\nfunction reload() {\n  const doc = this;\n  const Class = doc.constructor;\n\n  // The document has to be already saved in the collection.\n  // Get a document from the collection without transformation.\n  const rawDoc = Class.findOne(doc._id, {\n    transform: null\n  });\n  if (rawDoc) {\n    // Trigger the \"beforeInit\" event handlers.\n    doc.dispatchEvent(new Event('beforeInit'));\n\n    // Set all fields.\n    doc.set(resolveValues({\n      Class,\n      rawDoc\n    }));\n\n    // Trigger the \"afterInit\" event handlers.\n    doc.dispatchEvent(new Event('afterInit'));\n  }\n};\n\nexport default reload;","import documentRemove from '../utils/document_remove.js';\nimport isRemote from '../utils/is_remote.js';\nimport callMeteorMethod from '../utils/call_meteor_method.js';\n\nfunction remove(args = {}, callback) {\n  let doc = this;\n  let Class = doc.constructor;\n\n  // If the first argument is callback function then reassign values.\n  if (arguments.length === 1 && Match.test(args, Function)) {\n    callback = args;\n    args = {};\n  }\n  // Get variables from the first argument.\n  let {\n    simulation = true\n  } = args;\n\n  // If we are dealing with a remote collection and we are not on the server.\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    let methodName = '/Astronomy/remove';\n    // Prepare arguments for the meteor method.\n    let methodArgs = {\n      className: Class.getName(),\n      selector: {\n        _id: doc._id\n      },\n      simulation\n    };\n\n    try {\n      // Run meteor method.\n      let result = callMeteorMethod(\n        Class, methodName, [methodArgs], callback\n      );\n      // Change the \"_isNew\" flag to \"true\". After removing a document can be\n      // saved again as a new one.\n      doc._isNew = true;\n      // Return result of the meteor method call.\n      return result;\n    }\n    // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n      throw err;\n    }\n  }\n\n  // If we can just remove a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n  try {\n    // Prepare arguments.\n    let methodArgs = {\n      doc,\n      simulation,\n      trusted: true\n    };\n    let result = documentRemove(methodArgs);\n    if (callback) {\n      callback(undefined, result);\n    }\n    return result;\n  }\n  catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n    throw err;\n  }\n}\n\nexport default remove;","import _defaults from 'lodash/defaults';\nimport _each from 'lodash/each';\nimport _extend from 'lodash/extend';\nimport _omit from 'lodash/omit';\nimport { DDP } from 'meteor/ddp';\nimport documentInsert from '../utils/document_insert';\nimport documentUpdate from '../utils/document_update';\nimport isRemote from '../utils/is_remote';\nimport callMeteorMethod from '../utils/call_meteor_method';\nimport rawAll from '../../fields/utils/rawAll';\nimport castNested from '../../fields/utils/castNested';\nimport getModifier from '../../storage/utils/getModifier';\n\nfunction save(options = {}, callback) {\n  const doc = this;\n  const Class = doc.constructor;\n  const Collection = Class.getCollection();\n\n  // If the first argument is callback function then reassign values.\n  if (arguments.length === 1 && Match.test(options, Function)) {\n    callback = options;\n    options = {};\n  }\n\n  // Set default options.\n  _defaults(options, {\n    stopOnFirstError: true,\n    simulation: true,\n    forceUpdate: false\n  });\n\n  // Cast all fields.\n  if (options.cast) {\n    _each(Class.getFields(), (field) => {\n      doc[field.name] = field.castValue(doc[field.name], {\n        clone: false,\n        cast: true\n      });\n    });\n  }\n  // Cast only nested fields.\n  else {\n    castNested({\n      doc,\n      options: {\n        clone: false\n      }\n    });\n  }\n\n  // Detect which operation we are executing.\n  const inserting = doc._isNew;\n\n  // Generate ID if not provided.\n  if (inserting && !doc._id) {\n    let generateId = true;\n    // Don't generate the id if we're the client and the 'outermost' call.\n    // This optimization saves us passing both the randomSeed and the id.\n    // Passing both is redundant.\n    if (Collection._isRemoteCollection()) {\n      const enclosing = DDP._CurrentInvocation.get();\n      if (!enclosing) {\n        generateId = false;\n      }\n    }\n    if (generateId) {\n      doc._id = Collection._makeNewID();\n    }\n  }\n\n  // If we are dealing with a remote collection and we are not on the server.\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    const methodName = '/Astronomy/' + (inserting ? 'insert' : 'update');\n    // Prepare arguments for meteor method.\n    const methodArgs = {\n      className: Class.getName(),\n      stopOnFirstError: options.stopOnFirstError,\n      simulation: options.simulation,\n    };\n    // Inserting.\n    if (inserting) {\n      _extend(methodArgs, {\n        rawDoc: rawAll(doc, {\n          transient: false\n        })\n      });\n    }\n    // Updating.\n    else {\n      // If the \"forceUpdate\" option was set then we don't run the \"getModifier\"\n      // function to get modifier and instead we just take entire raw object and\n      // remove the \"_id\" field as we can't update it.\n      const modifier = options.forceUpdate ? _omit(doc.raw(), ['_id']) : getModifier({doc});\n      _extend(methodArgs, {\n        selector: {\n          _id: doc._id\n        },\n        modifier,\n        options: {},\n        fields: options.fields\n      });\n    }\n\n    try {\n      // Run Meteor method.\n      const result = callMeteorMethod(\n        Class, methodName, [methodArgs], callback\n      );\n      if (result && inserting) {\n        // In the insert operation the value return from the meteor method is\n        // a document ID.\n        doc._id = result;\n      }\n      // Document is not new anymore.\n      doc._isNew = false;\n      return result;\n    }\n    // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n      throw err;\n    }\n  }\n\n  // If we can just insert a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n  try {\n    // Prepare arguments.\n    let methodArgs = {\n      doc,\n      stopOnFirstError: options.stopOnFirstError,\n      simulation: options.simulation,\n      trusted: true\n    };\n    if (inserting) {\n      let result = documentInsert(methodArgs);\n      if (callback) {\n        callback(undefined, result);\n      }\n      return result;\n    }\n    else {\n      methodArgs.fields = options.fields;\n      let result = documentUpdate(methodArgs);\n      if (callback) {\n        callback(undefined, result);\n      }\n      return result;\n    }\n  }\n  catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n    throw err;\n  }\n}\n\nexport default save;","import _defaults from 'lodash/defaults';\nimport _has from 'lodash/has';\nimport _isNull from 'lodash/isNull';\nimport _map from 'lodash/map';\nimport config from '../../../core/config';\nimport wrapTransform from '../utils/wrapTransform';\nimport transformToClass from '../utils/transformToClass';\nimport Event from '../../events/event';\nimport { Mongo } from 'meteor/mongo';\n\nfunction createMethod(methodName) {\n  return function(selector, options) {\n    let Class = this;\n    let Collection = Class.getCollection();\n\n    // Get selector from arguments.\n    if (arguments.length === 0) {\n      selector = {};\n    }\n    else {\n      selector = arguments[0];\n    }\n    // If selector is null then just proceed to collection's find method.\n    if (_isNull(selector)) {\n      return Collection[methodName](selector, options);\n    }\n    // Rewrite selector to make it an object.\n    selector = Mongo.Collection._rewriteSelector(selector);\n\n    // Set default options.\n    options = _defaults({}, options, {\n      defaults: config.defaults,\n      children: true,\n      // We don't want to clone raw object in the \"find\" method.\n      clone: false\n    });\n\n    // Modify selector and options using the \"beforeFind\" event handlers.\n    if (!options.disableEvents) {\n      Class.dispatchEvent(new Event('beforeFind', {\n        selector,\n        options\n      }));\n    }\n\n    const typeField = Class.getTypeField();\n    if (\n      // If it's an inherited class, then get only documents being instances of\n      // the subclass...\n      typeField &&\n      // ... however do not override a type property in selector when\n      // developer provided it and wants to deal with it by him/herself.\n      !_has(selector, typeField)\n    ) {\n      // If a class has child classes then we have to fetch document being\n      // instances of the parent and child classes depending on a value of\n      // the \"children\" option.\n      const children = Class.getChildren(options.children);\n      if (options.children && children.length > 0) {\n        children.push(Class);\n        selector[typeField] = {\n          $in: _map(children, (Child) => Child.getName())\n        };\n      }\n      else {\n        selector[typeField] = Class.getName();\n      }\n    }\n\n    const classTransform = Class.getTransform();\n    if (options.transform !== null && classTransform !== null) {\n      // Wrap the transform function with the \"wrapTransform\" function, which\n      // resolves values.\n      options.transform = wrapTransform({\n        Class,\n        // First, try getting the transform function passed to the \"find\"\n        // method. Later, check if the transform function is defined in the\n        // class definition. If none of them contains a transform function, then\n        // get the default one.\n        transform: options.transform || classTransform || transformToClass({\n          Class,\n          options\n        })\n      });\n    }\n\n    // Execute the original method.\n    let result = Collection[methodName](selector, options);\n\n    // Modify a query result using the \"afterFind\" event handlers.\n    if (!options.disableEvents) {\n      Class.dispatchEvent(new Event('afterFind', {\n        selector,\n        options,\n        result\n      }));\n    }\n\n    return result;\n  };\n}\n\nconst find = createMethod('find');\nconst findOne = createMethod('findOne');\n\nexport { find, findOne };","function getCollection() {\n\treturn this.schema.collection;\n};\n\nexport default getCollection;","import Class from '../../../core/class';\n\nfunction getTransform() {\n  return this.schema.transform;\n}\n\nexport default getTransform;","function getTypeField() {\n\treturn this.schema.typeField;\n};\n\nexport default getTypeField;","import isRemote from '../utils/is_remote.js';\nimport callMeteorMethod from '../utils/call_meteor_method.js';\nimport classInsert from '../utils/class_insert.js';\n\nfunction insert(rawDoc, callback) {\n  const Class = this;\n  const Collection = Class.getCollection();\n\n  // Prepare arguments.\n  const args = {\n    className: Class.getName(),\n    rawDoc\n  };\n\n  // Generate ID if not provided.\n  if (!rawDoc._id) {\n    let generateId = true;\n    // Don't generate the id if we're the client and the 'outermost' call.\n    // This optimization saves us passing both the randomSeed and the id.\n    // Passing both is redundant.\n    if (Collection._isRemoteCollection()) {\n      const enclosing = DDP._CurrentInvocation.get();\n      if (!enclosing) {\n        generateId = false;\n      }\n    }\n    if (generateId) {\n      rawDoc._id = Collection._makeNewID();\n    }\n  }\n\n  // If we are dealing with a remote collection and we are not on the server.\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    const methodName = '/Astronomy/insert';\n\n    try {\n      // Run Meteor method.\n      return callMeteorMethod(\n        Class, methodName, [args], callback\n      );\n    }\n    // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n      throw err;\n    }\n  }\n\n  // If we can just insert a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n  try {\n    // Set the \"trusted\" argument to true.\n    args.trusted = true;\n    // Insert a document.\n    let result = classInsert(args);\n    if (callback) {\n      callback(undefined, result);\n    }\n    return result;\n  }\n  catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n    throw err;\n  }\n}\n\nexport default insert;","import _has from 'lodash/has';\n\nfunction isSecured(operation) {\n  if (_has(this.schema.secured, operation)) {\n    return this.schema.secured[operation];\n  }\n  else {\n    let common = this.schema.secured.common;\n    return common !== undefined ? common : true;\n  }\n};\n\nexport default isSecured;","import isRemote from '../utils/is_remote.js';\nimport callMeteorMethod from '../utils/call_meteor_method.js';\nimport classRemove from '../utils/class_remove.js';\n\nfunction remove(selector, options, callback) {\n  const Class = this;\n\n  // If we omit options argument then it may be a callback function.\n  if (options instanceof Function) {\n    callback = options;\n    options = {};\n  }\n  // Make sure that options is at least an empty object.\n  options = options || {};\n  // Prepare arguments.\n  const args = {\n    className: Class.getName(),\n    selector,\n    options\n  };\n\n  // If we are dealing with a remote collection and we are not on the server.\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    const methodName = '/Astronomy/remove';\n\n    try {\n      // Run Meteor method.\n      return callMeteorMethod(\n        Class, methodName, [args], callback\n      );\n    }\n    // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n      throw err;\n    }\n  }\n\n  // If we can just remove a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n  try {\n    // Set the \"trusted\" argument to true.\n    args.trusted = true;\n    // Remove a document.\n    let result = classRemove(args);\n    if (callback) {\n      callback(undefined, result);\n    }\n    return result;\n  }\n  catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n    throw err;\n  }\n}\n\nexport default remove;","import isRemote from '../utils/is_remote.js';\nimport callMeteorMethod from '../utils/call_meteor_method.js';\nimport classUpdate from '../utils/class_update.js';\n\nfunction update(selector, modifier, options, callback) {\n  const Class = this;\n\n  // If we omit options argument then it may be a callback function.\n  if (options instanceof Function) {\n    callback = options;\n    options = {};\n  }\n  // Make sure that options is at least an empty object.\n  options = options || {};\n  // Prepare arguments.\n  const args = {\n    className: Class.getName(),\n    selector,\n    modifier,\n    options\n  };\n\n  // If we are dealing with a remote collection and we are not on the server.\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    const methodName = '/Astronomy/update';\n\n    try {\n      // Run Meteor method.\n      return callMeteorMethod(\n        Class, methodName, [args], callback\n      );\n    }\n    // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n      throw err;\n    }\n  }\n\n  // If we can just remove a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n  try {\n    // Set the \"trusted\" argument to true.\n    args.trusted = true;\n    // Remove a document.\n    let result = classUpdate(args);\n    if (callback) {\n      callback(undefined, result);\n    }\n    return result;\n  }\n  catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n    throw err;\n  }\n}\n\nexport default update;","import isRemote from '../utils/is_remote.js';\nimport callMeteorMethod from '../utils/call_meteor_method.js';\nimport classUpsert from '../utils/class_upsert.js';\n\nfunction upsert(selector, modifier, options, callback) {\n  const Class = this;\n\n  // If we omit options argument then it may be a callback function.\n  if (options instanceof Function) {\n    callback = options;\n    options = {};\n  }\n  // Make sure that options is at least an empty object.\n  options = options || {};\n  // Prepare arguments.\n  const args = {\n    className: Class.getName(),\n    selector,\n    modifier,\n    options\n  };\n\n  // If we are dealing with a remote collection and we are not on the server.\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    const methodName = '/Astronomy/upsert';\n\n    try {\n      // Run Meteor method.\n      return callMeteorMethod(\n        Class, methodName, [args], callback\n      );\n    }\n    // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n      throw err;\n    }\n  }\n\n  // If we can just remove a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n  try {\n    // Set the \"trusted\" argument to true.\n    args.trusted = true;\n    // Remove a document.\n    let result = classUpsert(args);\n    if (callback) {\n      callback(undefined, result);\n    }\n    return result;\n  }\n  catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n    throw err;\n  }\n}\n\nexport default upsert;","import _each from 'lodash/each';\nimport _extend from 'lodash/extend';\nimport _zipObject from 'lodash/zipObject';\n// Utils.\nimport resolveValues from '../../fields/utils/resolveValues';\nimport hasMeteorMethod from '../utils/has_meteor_method';\n// Class static methods.\nimport { find, findOne } from '../class_static_methods/find';\nimport insert from '../class_static_methods/insert';\nimport update from '../class_static_methods/update';\nimport upsert from '../class_static_methods/upsert';\nimport remove from '../class_static_methods/remove';\n// Class prototype methods.\nimport protoSave from '../class_prototype_methods/save';\nimport protoRemove from '../class_prototype_methods/remove';\nimport protoReload from '../class_prototype_methods/reload';\nimport protoCopy from '../class_prototype_methods/copy';\nimport protoGetModifier from '../class_prototype_methods/getModifier';\nimport protoGetModified from '../class_prototype_methods/getModified';\nimport protoGetModifiedValues from '../class_prototype_methods/getModifiedValues';\nimport protoIsModified from '../class_prototype_methods/isModified';\n// Meteor methods.\nimport meteorInsert from '../meteor_methods/insert';\nimport meteorUpdate from '../meteor_methods/update';\nimport meteorUpsert from '../meteor_methods/upsert';\nimport meteorRemove from '../meteor_methods/remove';\n// Class events.\nimport fromJSONValue from '../class_events/fromJSONValue';\nimport toJSONValue from '../class_events/toJSONValue';\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n  const schema = Class.schema;\n\n  if (parsedDefinition.collection) {\n    const Collection = schema.collection = parsedDefinition.collection;\n    // Get type of the \"_id\" field.\n    const id = Collection._makeNewID();\n    const IdType = id.constructor;\n\n    Class.extend({\n      // Add the \"_id\" field if not already added.\n      fields: {\n        _id: {\n          name: '_id',\n          type: IdType,\n          optional: true\n        }\n      },\n      // Add storage events.\n      events: {\n        toJSONValue: [toJSONValue],\n        fromJSONValue: [fromJSONValue]\n      }\n    }, ['fields', 'events']);\n\n    // If it's a remote collection then we register methods on the connection\n    // object of the collection.\n    const connection = Collection._connection;\n    if (connection) {\n      // Prepare meteor methods to be added.\n      const meteorMethods = {\n        '/Astronomy/insert': meteorInsert,\n        '/Astronomy/update': meteorUpdate,\n        '/Astronomy/upsert': meteorUpsert,\n        '/Astronomy/remove': meteorRemove,\n      };\n      _each(meteorMethods, (meteorMethod, methodName) => {\n        if (!hasMeteorMethod(connection, methodName)) {\n          // Add meteor method.\n          connection.methods(_zipObject([methodName], [meteorMethod]));\n        }\n      });\n    }\n\n    // Class static methods.\n    Class.find = find;\n    Class.findOne = findOne;\n    Class.insert = insert;\n    Class.update = update;\n    Class.upsert = upsert;\n    Class.remove = remove;\n    // Class prototype methods.\n    Class.prototype.save = protoSave;\n    Class.prototype.remove = protoRemove;\n    Class.prototype.reload = protoReload;\n    Class.prototype.copy = protoCopy;\n    Class.prototype.getModifier = protoGetModifier;\n    Class.prototype.getModified = protoGetModified;\n    Class.prototype.getModifiedValues = protoGetModifiedValues;\n    Class.prototype.isModified = protoIsModified;\n  }\n\n  // Apply type field.\n  if (parsedDefinition.typeField) {\n    const typeField = schema.typeField = parsedDefinition.typeField;\n    // Add the type field if not already added.\n    if (!Class.hasField(typeField)) {\n      Class.extend({\n        fields: {\n          [typeField]: {\n            type: String,\n            index: 1\n          }\n        },\n        events: {\n          afterInit(e) {\n            const doc = e.currentTarget;\n            const Class = doc.constructor;\n            doc[typeField] = Class.getName();\n          }\n        }\n      }, ['fields', 'events']);\n    }\n\n    if (parsedDefinition.typeField) {\n      schema.typeField = parsedDefinition.typeField;\n    }\n  }\n\n  // If class has already assigned collection.\n  const Collection = Class.getCollection();\n  if (Collection) {\n    // Apply the \"transform\" property only if it's a function or equal null.\n    if (\n      typeof parsedDefinition.transform === 'function' ||\n      parsedDefinition.transform === null\n    ) {\n      schema.transform = parsedDefinition.transform;\n    }\n\n    if (parsedDefinition.secured !== undefined) {\n      _extend(schema.secured, parsedDefinition.secured);\n    }\n  }\n};\n\nexport default onApplyDefinition;","// Class static methods.\nimport getCollection from '../class_static_methods/get_collection.js';\nimport getTypeField from '../class_static_methods/get_type_field.js';\nimport getTransform from '../class_static_methods/get_transform.js';\nimport isSecured from '../class_static_methods/is_secured.js';\n\nfunction onInitClass(Class, className) {\n  // Class static methods.\n  Class.getCollection = getCollection;\n  Class.getTypeField = getTypeField;\n  Class.getTransform = getTransform;\n  Class.isSecured = isSecured;\n};\n\nexport default onInitClass;","function onInitDefinition(definition, className) {\n  definition.collection = undefined;\n  definition.typeField = undefined;\n  definition.transform = undefined;\n  definition.secured = undefined;\n};\n\nexport default onInitDefinition;","function onInitSchema(schema, className) {\n  schema.collection = undefined;\n  schema.typeField = undefined;\n  schema.transform = undefined;\n  schema.secured = {\n    common: true\n  };\n};\n\nexport default onInitSchema;","import _extend from 'lodash/extend';\n\nfunction onMergeDefinitions(targetDefinition, sourceDefinition, ClassName) {\n  if (sourceDefinition.collection) {\n    targetDefinition.collection = sourceDefinition.collection;\n  }\n  if (sourceDefinition.typeField) {\n    targetDefinition.typeField = sourceDefinition.typeField;\n  }\n  if (sourceDefinition.transform !== undefined) {\n    targetDefinition.transform = sourceDefinition.transform;\n  }\n  if (sourceDefinition.secured !== undefined) {\n    targetDefinition.secured = _extend(\n      {},\n      targetDefinition.secured,\n      sourceDefinition.secured\n    );\n  }\n};\n\nexport default onMergeDefinitions;","import throwParseError from '../../core/utils/throw_parse_error.js';\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  // Check existence and validity of the \"collection\" property.\n  if (definition.collection !== undefined) {\n    // The \"collection\" property has to be an instance of the\n    // \"Mongo.Collection\".\n    if (!(definition.collection instanceof Mongo.Collection)) {\n      throwParseError([{\n          'class': className\n        }, {\n          'property': 'collection'\n        },\n        'Property value has to be an instance of \"Mongo.Collection\"'\n      ]);\n    }\n    parsedDefinition.collection = definition.collection;\n  }\n\n  // Check existence and validity of the \"typeField\" property.\n  if (definition.typeField !== undefined) {\n    // The \"typeField\" property has to be a string.\n    if (!Match.test(definition.typeField, String)) {\n      throwParseError([{\n          'class': className\n        }, {\n          'property': 'typeField'\n        },\n        'Property value has to be a string'\n      ]);\n    }\n    parsedDefinition.typeField = definition.typeField;\n  }\n\n  // Check existence and validity of the \"transform\" property.\n  if (definition.transform !== undefined) {\n    // The \"transform\" property has to be a function.\n    if (!Match.test(definition.transform, Match.OneOf(Function, null))) {\n      throwParseError([{\n          'class': className\n        }, {\n          'property': 'transform'\n        },\n        'Property value has to be a function or null'\n      ]);\n    }\n    parsedDefinition.transform = definition.transform;\n  }\n\n  // Check existence and validity of the \"secured\" property.\n  if (definition.secured !== undefined) {\n    if (!Match.test(definition.secured, Match.OneOf(Boolean, Object))) {\n      throwParseError([{\n          'class': className\n        }, {\n          'property': 'secured'\n        },\n        'Property value has to be a boolean or an object with keys being ' +\n        'method name and values being boolean'\n      ]);\n    }\n    if (typeof definition.secured === 'boolean') {\n      parsedDefinition.secured = {\n        common: definition.secured\n      };\n    }\n    else {\n      parsedDefinition.secured = definition.secured;\n    }\n  }\n};\n\nexport default onParseDefinition;","import classInsert from '../utils/class_insert.js';\nimport { check, Match } from 'meteor/check';\n\nfunction insert(args) {\n  check(args, Match.Any);\n\n  return classInsert(args);\n};\n\nexport default insert;","import classRemove from '../utils/class_remove.js';\nimport { check, Match } from 'meteor/check';\n\nfunction remove(args) {\n  check(args, Match.Any);\n\n  return classRemove(args);\n};\n\nexport default remove;","import classUpdate from '../utils/class_update.js';\nimport { check, Match } from 'meteor/check';\n\nfunction update(args) {\n  check(args, Match.Any);\n\n  return classUpdate(args);\n};\n\nexport default update;","import classUpsert from '../utils/class_upsert.js';\nimport { check, Match } from 'meteor/check';\n\nfunction upsert(args) {\n  check(args, Match.Any);\n\n  return classUpsert(args);\n};\n\nexport default upsert;","import { DDP } from 'meteor/ddp';\n\nfunction alreadyInSimulation() {\n  const enclosing = DDP._CurrentInvocation.get();\n  return enclosing && enclosing.isSimulation;\n}\n\nexport default alreadyInSimulation;","import _size from 'lodash/size';\nimport config from '../../../core/config';\nimport castNested from '../../fields/utils/castNested';\nimport setAll from '../../fields/utils/set_all';\nimport { LocalCollection } from 'meteor/minimongo';\n\nfunction applyModifier(args = {}) {\n  const {\n    doc,\n    modifier,\n    options\n  } = args;\n  // Apply modifier only if provided.\n  if (modifier && _size(modifier) > 0) {\n    // Get raw object because the \"_modify\" method can only work with plain\n    // objects.\n    const rawDoc = doc.raw();\n    // Use Minimongo's the \"_modify\" method to apply modifier.\n    LocalCollection._modify(rawDoc, modifier, options);\n    // Set all values back again on a document.\n    setAll(doc, rawDoc, {\n      defaults: config.defaults,\n      clone: false,\n      cast: false\n    });\n  }\n};\n\nexport default applyModifier;","const callMeteorMethod = (Class, methodName, methodArgs, callback) => {\n  const Collection = Class.getCollection();\n  let connection = Collection && Collection._connection;\n  if (!connection && (!Collection || !Collection._name)) {\n    connection = Meteor.connection || Meteor.server;\n  }\n  // Prepare meteor method options.\n  const methodOptions = {\n    throwStubExceptions: true,\n    returnStubValue: true\n  };\n  return connection.apply(methodName, methodArgs, methodOptions, callback);\n};\n\nexport default callMeteorMethod;\n","import AstroClass from '../../../core/class.js';\nimport documentInsert from './document_insert.js';\n\nfunction classInsert(args = {}) {\n  const {\n    className,\n    rawDoc,\n    stopOnFirstError,\n    fields,\n    simulation = true,\n    trusted = false,\n  } = args;\n\n  // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  const Class = AstroClass.get(className);\n  // Create a new document.\n  const doc = new Class(rawDoc);\n\n  // Insert a document.\n  return documentInsert({\n    doc,\n    stopOnFirstError,\n    simulation,\n    trusted,\n  });\n};\n\nexport default classInsert;","import AstroClass from '../../../core/class.js';\nimport alreadyInSimulation from './already_in_simulation.js';\nimport throwIfSelectorIsNotId from './throw_if_selector_is_not_id.js';\nimport documentRemove from './document_remove.js';\n\nfunction classRemove(args = {}) {\n  const {\n    className,\n    selector,\n    options,\n    simulation = true,\n    trusted = false\n  } = args;\n\n  // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  // Throw exception if we are trying to perform an operation on more than one\n  // document at once and it's not trusted call.\n  if (!trusted && !alreadyInSimulation()) {\n    throwIfSelectorIsNotId(selector, 'remove');\n  }\n\n  const Class = AstroClass.get(className);\n  // Get all documents matching selector.\n  const docs = Class.find(selector, options);\n  // Prepare result of the method execution.\n  let result = 0;\n\n  docs.forEach((doc) => {\n    // Update a document.\n    result += documentRemove({\n      doc,\n      simulation,\n      trusted\n    });\n  });\n\n  return result;\n};\n\nexport default classRemove;","import _extend from 'lodash/extend';\nimport _mapKeys from 'lodash/mapKeys';\nimport AstroClass from '../../../core/class.js';\nimport alreadyInSimulation from './already_in_simulation.js';\nimport throwIfSelectorIsNotId from './throw_if_selector_is_not_id.js';\nimport documentUpdate from './document_update.js';\nimport applyModifier from './apply_modifier.js';\nimport { Minimongo } from 'meteor/minimongo';\n\nfunction classUpdate(args = {}) {\n  const {\n    className,\n    selector,\n    modifier,\n    options,\n    stopOnFirstError,\n    fields,\n    simulation = true,\n    trusted = false\n  } = args;\n\n  // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  // Throw exception if we are trying to perform an operation on more than one\n  // document at once and it's not trusted call.\n  if (!trusted && !alreadyInSimulation()) {\n    throwIfSelectorIsNotId(selector, 'update');\n  }\n\n  const Class = AstroClass.get(className);\n  // Get all documents matching selector.\n  let docs;\n  let oldDocs;\n  if (options.multi) {\n    docs = Class.find(selector, options);\n    // Get all old documents in one batched query so that performance is\n    // improved when updating many documents. Map all documents to an object\n    // where properites are documents' IDs.\n    oldDocs = _mapKeys(Class.find(selector, _extend(options, {\n      defaults: false\n    })).fetch(), oldDoc => oldDoc._id);\n  }\n  else {\n    docs = Class.find(selector, _extend(options, {\n      limit: 1\n    }));\n    // Get all old documents in one batched query so that performance is\n    // improved when updating many documents. Map all documents to an object\n    // where properites are documents' IDs.\n    oldDocs = _mapKeys(Class.find(selector, _extend(options, {\n      limit: 1,\n      defaults: false\n    })).fetch(), oldDoc => oldDoc._id);\n  }\n\n  // Create a minimongo matcher object to find array indexes on the projection\n  // operator use.\n  const matcher = new Minimongo.Matcher(selector);\n\n  // Prepare result of the method execution.\n  let result = 0;\n\n  docs.forEach((doc) => {\n    const oldDoc = oldDocs[doc._id];\n    // Use matcher to find array indexes in a given document that needs updating\n    // on the projection operator use.\n    let queryResult = matcher.documentMatches(doc);\n\n    // Apply modifier.\n    applyModifier({\n      doc,\n      modifier,\n      options: queryResult.arrayIndices ? {\n        arrayIndices: queryResult.arrayIndices\n      } : {}\n    });\n\n    // Update a document.\n    result += documentUpdate({\n      doc,\n      stopOnFirstError,\n      simulation,\n      fields,\n      trusted,\n      oldDoc\n    });\n  });\n\n  return result;\n};\n\nexport default classUpdate;","import _extend from 'lodash/extend';\nimport AstroClass from '../../../core/class.js';\nimport alreadyInSimulation from './already_in_simulation.js';\nimport throwIfSelectorIsNotId from './throw_if_selector_is_not_id.js';\nimport documentInsert from './document_insert.js';\nimport documentUpdate from './document_update.js';\nimport applyModifier from './apply_modifier.js';\nimport { Minimongo, LocalCollection } from 'meteor/minimongo';\n\nfunction classUpsert(args = {}) {\n  const {\n    className,\n    selector,\n    modifier,\n    options,\n    stopOnFirstError,\n    fields,\n    simulation = true,\n    trusted = false,\n  } = args;\n\n  // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  // Throw exception if we are trying to perform an operation on more than one\n  // document at once and it's not trusted call.\n  if (!trusted && !alreadyInSimulation()) {\n    throwIfSelectorIsNotId(selector, 'upsert');\n  }\n\n  const Class = AstroClass.get(className);\n  // Get all documents matching selector.\n  let docs;\n  if (options.multi) {\n    docs = Class.find(selector, options);\n  }\n  else {\n    docs = Class.find(selector, _extend(options, {\n      limit: 1\n    }));\n  }\n\n  // Create a minimongo matcher object to find array indexes on the projection\n  // operator use.\n  const matcher = new Minimongo.Matcher(selector);\n\n  // Prepare result of the method execution.\n  const result = {\n    numberAffected: 0,\n    insertedId: null\n  };\n\n  if (docs.count() > 0) {\n    docs.forEach((doc) => {\n      // Use matcher to find array indexes in a given document that needs updating\n      // on the projection operator use.\n      let queryResult = matcher.documentMatches(doc);\n\n      // Apply modifier.\n      applyModifier({\n        doc,\n        modifier,\n        options: queryResult.arrayIndices ? {\n          arrayIndices: queryResult.arrayIndices\n        } : {}\n      });\n\n      // Update a document.\n      result.numberAffected += documentUpdate({\n        doc,\n        stopOnFirstError,\n        simulation,\n        fields,\n        trusted\n      });\n    });\n  }\n  else {\n    let doc;\n    // Create a new document from selector.\n    if (LocalCollection._createUpsertDocument) {\n      doc = new Class(LocalCollection._createUpsertDocument(selector, modifier));\n    }\n    else if (LocalCollection._removeDollarOperators) {\n      doc = new Class(LocalCollection._removeDollarOperators(selector));\n      // Apply modifier for the insert operation.\n      applyModifier({\n        doc,\n        modifier,\n        options: {\n          isInsert: true\n        }\n      });\n    }\n\n    // Insert a document.\n    result.insertedId = documentInsert({\n      doc,\n      stopOnFirstError,\n      simulation,\n      trusted,\n    });\n  }\n\n  return result;\n};\n\nexport default classUpsert;","import _each from 'lodash/each';\nimport _isArray from 'lodash/isArray';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _keys from 'lodash/keys';\nimport _noop from 'lodash/noop';\nimport _union from 'lodash/union';\nimport { EJSON } from 'meteor/ejson';\n\nfunction diff(args = {}) {\n  const {\n    fieldName,\n    newDoc,\n    oldDoc,\n    prefix = '',\n    result,\n    onDiff = _noop,\n    onObjectDiff = _noop,\n    onListDiff = _noop,\n    onScalarDiff = _noop,\n  } = args;\n\n  // Combine fields from old and new document.\n  const fieldsNames = _union(_keys(oldDoc), _keys(newDoc));\n\n  // Loop through all fields and check if they differ.\n  _each(fieldsNames, function(fieldName) {\n    const oldValue = oldDoc[fieldName];\n    const newValue = newDoc[fieldName];\n\n    if (!EJSON.equals(oldValue, newValue)) {\n      const nestedPrefix = (prefix && prefix + '.') + fieldName;\n\n      onDiff({\n        oldValue,\n        newValue,\n        prefix: nestedPrefix,\n        result\n      });\n\n      // Compare two objects.\n      if (_isPlainObject(oldValue) && _isPlainObject(newValue)) {\n        onObjectDiff({\n          oldDoc: oldValue,\n          newDoc: newValue,\n          prefix: nestedPrefix,\n          result\n        });\n      }\n      // Compare two lists.\n      else if (_isArray(oldValue) && _isArray(newValue)) {\n        onListDiff({\n          oldList: oldValue,\n          newList: newValue,\n          prefix: nestedPrefix,\n          result\n        });\n      }\n      // Compare two scalars.\n      else {\n        onScalarDiff({\n          oldValue,\n          newValue,\n          prefix: nestedPrefix,\n          result\n        });\n      }\n    }\n  });\n}\n\nexport default diff;","import _omitBy from 'lodash/omitBy';\nimport castNested from '../../fields/utils/castNested';\nimport rawAll from '../../fields/utils/rawAll';\nimport triggerBeforeSave from './trigger_before_save';\nimport triggerBeforeInsert from './trigger_before_insert';\nimport triggerAfterSave from './trigger_after_save';\nimport triggerAfterInsert from './trigger_after_insert';\nimport documentValidate from '../../validators/utils/document_validate';\n\nfunction documentInsert(args = {}) {\n  const {\n    doc,\n    stopOnFirstError,\n    fields,\n    simulation = true,\n    trusted = false\n  } = args;\n\n  // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  const Class = doc.constructor;\n  const Collection = Class.getCollection();\n\n  // Generate ID if not provided.\n  if (!doc._id) {\n    doc._id = Collection._makeNewID();\n  }\n\n  // Check if a class is secured.\n  if (Class.isSecured('insert') && Meteor.isServer && !trusted) {\n    throw new Meteor.Error(403, 'Inserting from the client is not allowed');\n  }\n\n  // Cast nested documents.\n  castNested({\n    doc,\n    options: {\n      clone: false\n    }\n  });\n\n  // Trigger before events.\n  triggerBeforeSave(doc, trusted);\n  triggerBeforeInsert(doc, trusted);\n\n  // Cast nested documents.\n  castNested({\n    doc,\n    options: {\n      clone: false\n    }\n  });\n\n  // Validate a document.\n  documentValidate({\n    doc,\n    fields,\n    stopOnFirstError,\n    simulation\n  });\n\n  // Get plain values of all fields. Pick only values that we want to save.\n  let values = rawAll(doc, {\n    transient: false\n  });\n  values = _omitBy(values, (value) => value === undefined);\n\n  // Insert a document.\n  try {\n    // There is a difference in what the insert method returns depending on the\n    // environment. On the client it returns an inserted document id, on the\n    // server it returns array of inserted documents. So we always return the\n    // generated id. We can't send an entire document because it could be a\n    // security issue if we are not subscribed to all fields of a document.\n    Collection._collection.insert(values);\n\n    // Change the \"_isNew\" flag to \"false\". Mark a document as not new.\n    doc._isNew = false;\n\n    // Trigger after events.\n    triggerAfterInsert(doc, trusted);\n    triggerAfterSave(doc, trusted);\n\n    return doc._id;\n  }\n  catch(err) {\n    if (err.name === 'MongoError' || err.name === 'MinimongoError') {\n      throw new Meteor.Error(409, err.toString());\n    }\n    else {\n      throw err;\n    }\n  }\n};\n\nexport default documentInsert;\n","import triggerBeforeRemove from './trigger_before_remove.js';\nimport triggerAfterRemove from './trigger_after_remove.js';\n\nfunction documentRemove(args = {}) {\n  const {\n    doc,\n    simulation = true,\n    trusted = false\n  } = args;\n\n  // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  const Class = doc.constructor;\n  const Collection = Class.getCollection();\n\n  // Remove only when document has the \"_id\" field (it's persisted).\n  if (doc._isNew) {\n    return 0;\n  }\n\n  // Check if a class is secured.\n  if (Class.isSecured('remove') && Meteor.isServer && !trusted) {\n    throw new Meteor.Error(403, 'Removing from the client is not allowed');\n  }\n\n  // Trigger before events.\n  triggerBeforeRemove(doc, trusted);\n\n  // Remove a document.\n  try {\n    const result = Collection._collection.remove({\n      _id: doc._id\n    });\n\n    // Mark a document as new, so it will be possible to save it again.\n    doc._isNew = true;\n\n    // Trigger after events.\n    triggerAfterRemove(doc, trusted);\n\n    return result;\n  }\n  catch(err) {\n    if (err.name === 'MongoError' || err.name === 'MinimongoError') {\n      throw new Meteor.Error(409, err.toString());\n    }\n    else {\n      throw err;\n    }\n  }\n};\n\nexport default documentRemove;","import _omit from 'lodash/omit';\nimport _size from 'lodash/size';\nimport castNested from '../../fields/utils/castNested';\nimport triggerBeforeSave from './trigger_before_save';\nimport triggerBeforeUpdate from './trigger_before_update';\nimport triggerAfterSave from './trigger_after_save';\nimport triggerAfterUpdate from './trigger_after_update';\nimport isModified from './isModified';\nimport getModifier from './getModifier';\nimport documentValidate from '../../validators/utils/document_validate';\n\nfunction documentUpdate(args = {}) {\n  let {\n    doc,\n    stopOnFirstError,\n    fields,\n    simulation = true,\n    forceUpdate = false,\n    trusted = false,\n    oldDoc\n  } = args;\n\n  // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  let Class = doc.constructor;\n  let Collection = Class.getCollection();\n\n  // Return if there were no modifications.\n  if (!isModified({\n      doc,\n      fields\n    })) {\n    // Validate a document even if there were no modifications.\n    documentValidate({\n      doc,\n      fields,\n      stopOnFirstError,\n      simulation\n    });\n    // 0 documents were modified.\n    return 0;\n  }\n\n  // Check if a class is secured.\n  if (Class.isSecured('update') && Meteor.isServer && !trusted) {\n    throw new Meteor.Error(403, 'Updating from the client is not allowed');\n  }\n\n  // Cast nested documents.\n  castNested({\n    doc,\n    options: {\n      clone: false\n    }\n  });\n\n  // Trigger before events.\n  triggerBeforeSave(doc, trusted);\n  triggerBeforeUpdate(doc, trusted);\n\n  // Cast nested documents.\n  castNested({\n    doc,\n    options: {\n      clone: false\n    }\n  });\n\n  // Validate a document.\n  documentValidate({\n    doc,\n    fields,\n    stopOnFirstError,\n    simulation\n  });\n\n  // Get modifier.\n  // If the \"forceUpdate\" option was set then we don't run the \"getModifier\"\n  // function to get modifier and instead we just take entire raw object and\n  // remove the \"_id\" field as we can't update it.\n  const modifier = forceUpdate ? _omit(doc.raw(), ['_id']) : getModifier({\n    doc,\n    fields,\n    oldDoc\n  });\n  // Stop execution is a modifier is empty.\n  if (_size(modifier) === 0) {\n    return 0;\n  }\n  // Update a document.\n  try {\n    const result = Collection._collection.update({\n      _id: doc._id\n    }, modifier);\n\n    // Trigger after events.\n    triggerAfterUpdate(doc, trusted);\n    triggerAfterSave(doc, trusted);\n\n    return result;\n  }\n  catch(err) {\n    if (err.name === 'MongoError' || err.name === 'MinimongoError') {\n      throw new Meteor.Error(409, err.toString());\n    }\n    else {\n      throw err;\n    }\n  }\n};\n\nexport default documentUpdate;\n","import _each from 'lodash/each';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _range from 'lodash/range';\nimport { EJSON } from 'meteor/ejson';\nimport throwParseError from '../../core/utils/throw_parse_error.js';\nimport rawMany from '../../fields/utils/rawMany';\nimport diff from './diff';\n\nconst handlers = {};\n\nhandlers.onDiff = function({prefix, result}) {\n  result.push(prefix);\n};\n\nhandlers.onObjectDiff = function({oldDoc, newDoc, prefix, result}) {\n  diff({\n    oldDoc,\n    newDoc,\n    prefix,\n    result,\n    ...handlers\n  });\n};\n\nhandlers.onListDiff = function({oldList, newList, prefix, result}) {\n  const maxLength = Math.max(oldList.length, newList.length);\n  _each(_range(maxLength), function(index) {\n    const arrayPrefix = `${prefix}.${index}`;\n    const oldElement = oldList[index];\n    const newElement = newList[index];\n    if (!EJSON.equals(oldElement, newElement)) {\n      result.push(arrayPrefix);\n      // If both array elements are object, then we perform diff between\n      // them.\n      if (_isPlainObject(oldElement) && _isPlainObject(newElement)) {\n        // Get a difference between elements.\n        diff({\n          oldDoc: oldElement,\n          newDoc: newElement,\n          prefix: arrayPrefix,\n          result,\n          ...handlers\n        });\n      }\n    }\n  });\n};\n\nfunction getModified(options = {}) {\n  let {\n    doc: newDoc,\n    transient = false,\n    immutable = false,\n    fields\n  } = options;\n\n  const Class = newDoc.constructor;\n  const opts = {\n    defaults: false\n  };\n  let oldDoc = Class.findOne(newDoc._id, opts);\n  if (!oldDoc) {\n    oldDoc = new Class({}, opts);\n  }\n  // If there is no document before modifications that may mean that we are not\n  // subscribed to the publication publishing given document or we modified the\n  // _id of a document.\n  if (!oldDoc) {\n    throwParseError([{\n        'module': 'storage'\n      }, {\n        'utility': 'getModified'\n      },\n      `Can not get a document before modifications. You are not subscribed ` +\n      `to the publication publishing a \"${Class.getName()}\" document with ` +\n      `the id \"${newDoc._id}\" or you have modified the \"_id\" field`\n    ]);\n  }\n\n  // If there are not fields specified, then get all of them.\n  if (!fields) {\n    fields = Class.getFieldsNames();\n  }\n\n  const result = [];\n  diff({\n    // Get raw data from the docs.\n    oldDoc: rawMany(oldDoc, fields, {\n      transient,\n      immutable,\n      undefined: false\n    }),\n    newDoc: rawMany(newDoc, fields, {\n      transient,\n      immutable,\n      undefined: false\n    }),\n    result,\n    ...handlers\n  });\n  return result;\n};\n\nexport default getModified;","import _each from 'lodash/each';\nimport _isNumber from 'lodash/isNumber';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _omitBy from 'lodash/omitBy';\nimport _size from 'lodash/size';\nimport { EJSON } from 'meteor/ejson';\nimport throwParseError from '../../core/utils/throw_parse_error.js';\nimport rawMany from '../../fields/utils/rawMany';\nimport diff from './diff';\n\nconst handlers = {};\n\nhandlers.onObjectDiff = function({oldDoc, newDoc, prefix, result}) {\n  diff({\n    oldDoc,\n    newDoc,\n    prefix,\n    result,\n    ...handlers\n  });\n};\n\nhandlers.onListDiff = function({oldList, newList, prefix, result}) {\n  // NOTE: We need check a new array size. If its length increased or stayed the\n  // same then all changes can be registered using the $set modifier. If an\n  // array length decreased, then we should slice it. However it may not be\n  // possible if some element has also changed. In such situation we have to\n  // override entire array.\n\n  // Array length decreased.\n  if (newList.length < oldList.length) {\n    // Due to an error in MiniMongo it's not possible to apply $push modifier\n    // with the $slice operator set to positive number. That's why we have to\n    // override entire array when it was shrinked.\n    result.$set[prefix] = newList;\n  }\n  // Array length increased or stayed the same.\n  else if (newList.length >= oldList.length) {\n    let modified = false;\n    // Compare up to number of elements in the new list.\n    _each(newList, (newElement, index) => {\n      const arrayPrefix = `${prefix}.${index}`;\n      const oldElement = oldList[index];\n      // When iterating over elements up to old array length.\n      if (index < oldList.length) {\n        if (!EJSON.equals(oldElement, newElement)) {\n          modified = true;\n          // If both array elements are object, then we perform diff.\n          if (_isPlainObject(oldElement) && _isPlainObject(newElement)) {\n            // Get a difference between elements.\n            diff({\n              oldDoc: oldElement,\n              newDoc: newElement,\n              prefix: arrayPrefix,\n              result,\n              ...handlers\n            });\n          }\n          else {\n            result.$set[arrayPrefix] = newElement;\n          }\n        }\n      }\n      // When iterating over newly added array elements.\n      else {\n        // Elements up to the old array length were modified, so we can not\n        // use the $push operator in conjunction with the $set operator.\n        if (modified) {\n          // If both array elements are object, then we perform diff.\n          if (_isPlainObject(oldElement) && _isPlainObject(newElement)) {\n            // Get a difference between elements.\n            diff({\n              oldDoc: oldElement,\n              newDoc: newElement,\n              prefix: arrayPrefix,\n              result,\n              ...handlers\n            });\n          }\n          else {\n            result.$set[arrayPrefix] = newElement;\n          }\n        }\n        // Elements up to the old array length were not modified, so if there\n        // is any new array element added, we can insert it with the $push\n        // operator.\n        else {\n          // We have to check if there is only one element being pushed or\n          // more. If there is only one element then we use\n          // $push[prefix]: element\n          if (newList.length - oldList.length === 1) {\n            result.$push[prefix] = newElement;\n          }\n          // If there are more elements we have to use\n          // $push: { [prefix]: { $each: elements } }\n          else {\n            result.$push[prefix] = {\n              $each: newList.slice(index)\n            };\n            // We have to break each loop here. We don't need to check any\n            // more elements.\n            return false;\n          }\n        }\n      }\n    });\n  }\n};\n\nhandlers.onScalarDiff = function({oldValue, newValue, prefix, result}) {\n  if (newValue !== undefined) {\n    if (_isNumber(oldValue) && _isNumber(newValue)) {\n      result.$inc[prefix] = newValue - oldValue;\n    }\n    else {\n      result.$set[prefix] = newValue;\n    }\n  }\n  else {\n    result.$unset[prefix] = '';\n  }\n};\n\nconst getModifier = function(options = {}) {\n  let {\n    doc: newDoc,\n    transient = false,\n    immutable = false,\n    fields,\n    oldDoc\n  } = options;\n\n  const Class = newDoc.constructor;\n  const opts = {\n    defaults: false\n  };\n  if (!oldDoc) {\n    oldDoc = Class.findOne(newDoc._id, opts);\n  }\n  if (!oldDoc) {\n    oldDoc = new Class({}, opts);\n  }\n\n  // If there is no document before modifications that may mean that we are not\n  // subscribed to the publication publishing given document or we modified the\n  // _id of a document.\n  if (!oldDoc) {\n    throwParseError([{\n        'module': 'storage'\n      }, {\n        'utility': 'getModified'\n      },\n      `Can not get a document before modifications. You are not subscribed ` +\n      `to the publication publishing a \"${Class.getName()}\" document with ` +\n      `the id \"${newDoc._id}\" or you have modified the \"_id\" field`\n    ]);\n  }\n\n  // If there are not fields specified, then get all of them.\n  if (!fields) {\n    fields = Class.getFieldsNames();\n  }\n\n  const result = {\n    $set: {},\n    $inc: {},\n    $unset: {},\n    $push: {}\n  };\n  diff({\n    // Get raw data from the docs.\n    oldDoc: rawMany(oldDoc, fields, {\n      transient,\n      immutable,\n      undefined: false\n    }),\n    newDoc: rawMany(newDoc, fields, {\n      transient,\n      immutable,\n      undefined: false\n    }),\n    result,\n    ...handlers\n  });\n\n  // Return only non empty modifiers.\n  return _omitBy(result, (modifier) => {\n    return _size(modifier) === 0;\n  });\n};\n\nexport default getModifier;","import _has from 'lodash/has';\n\nfunction hasMeteorMethod(connection, methodName) {\n  // There is inconsistency between client and server. On the client connection\n  // object contains the \"_methodHandlers\" property and on the server the\n  // \"method_handlers\" property.\n  let methodHandlers = connection._methodHandlers || connection.method_handlers;\n\n  return _has(methodHandlers, methodName);\n};\n\nexport default hasMeteorMethod;","import _includes from 'lodash/includes';\nimport getModified from './getModified';\n\nfunction isModified(options = {}) {\n  let {\n    doc,\n    pattern,\n    transient = false,\n    immutable = false\n  } = options;\n\n  let modified = getModified({\n    doc,\n    transient,\n    immutable\n  });\n\n  if (pattern) {\n    return _includes(modified, pattern);\n  }\n  else {\n    return modified.length > 0;\n  }\n};\n\nexport default isModified;","function isRemote(Class) {\n  const Collection = Class.getCollection();\n  if (!Collection) {\n    return false;\n  }\n  const connection = Collection._connection;\n\n  return connection && connection !== Meteor.server;\n}\n\nexport default isRemote;","import _isPlainObject from 'lodash/isPlainObject';\nimport _transform from 'lodash/transform';\n\nfunction omitUndefined(obj) {\n  return _transform(obj, function(result, value, key) {\n    if (_isPlainObject(value)) {\n      result[key] = omitUndefined(value);\n    }\n    else if (value !== undefined) {\n      result[key] = value;\n    }\n  });\n}\n\nexport default omitUndefined;","import { LocalCollection } from 'meteor/minimongo';\n\nfunction throwIfSelectorIsNotId(selector, methodName) {\n  if (!LocalCollection._selectorIsIdPerhapsAsObject(selector)) {\n    throw new Meteor.Error(\n      403,\n      `Not permitted. Untrusted code may only ${methodName} documents by ID.`\n    );\n  }\n};\n\nexport default throwIfSelectorIsNotId;","import _defaults from 'lodash/defaults';\nimport config from '../../../core/config';\nimport wrapTransform from './wrapTransform';\nimport castToClass from '../../fields/utils/castToClass';\nimport resolveValues from '../../fields/utils/resolveValues';\n\nfunction transformToClass(args = {}) {\n  const {\n    Class,\n    options = {}\n  } = args;\n\n  // When fetching document from collection we don't want to clone raw document\n  // and we want default values to be set.\n  _defaults(options, {\n    defaults: config.defaults,\n    clone: false,\n    cast: false\n  });\n\n  return function(rawDoc) {\n    const doc = castToClass({\n      Class,\n      rawDoc,\n      options\n    });\n    return doc;\n  }\n};\n\nexport default transformToClass;","import Event from '../../events/event.js';\n\nfunction triggerAfterInsert(doc, trusted) {\n\t// Trigger the \"afterInsert\" event handlers.\n\tdoc.dispatchEvent(new Event('afterInsert', {\n\t\tpropagates: true,\n\t\ttrusted: trusted\n\t}));\n};\n\nexport default triggerAfterInsert;","import Event from '../../events/event.js';\n\nfunction triggerAfterRemove(doc, trusted) {\n\t// Trigger the \"afterRemove\" event handlers.\n\tdoc.dispatchEvent(new Event('afterRemove', {\n\t\tpropagates: true,\n\t\ttrusted: trusted\n\t}));\n};\n\nexport default triggerAfterRemove;","import Event from '../../events/event.js';\n\nfunction triggerAfterSave(doc, trusted) {\n\t// Trigger the \"afterSave\" event handlers.\n\tdoc.dispatchEvent(new Event('afterSave', {\n\t\tpropagates: true,\n\t\ttrusted: trusted\n\t}));\n};\n\nexport default triggerAfterSave;","import Event from '../../events/event.js';\n\nfunction triggerAfterUpdate(doc, trusted) {\n\t// Trigger the \"afterUpdate\" event handlers.\n\tdoc.dispatchEvent(new Event('afterUpdate', {\n\t\tpropagates: true,\n\t\ttrusted: trusted\n\t}));\n};\n\nexport default triggerAfterUpdate;","import Event from '../../events/event.js';\n\nfunction triggerBeforeInsert(doc, trusted) {\n\t// Trigger the \"beforeInsert\" event handlers.\n\tif (!doc.dispatchEvent(new Event('beforeInsert', {\n\t\t\tcancelable: true,\n\t\t\tpropagates: true,\n\t\t\ttrusted: trusted\n\t\t}))) {\n\t\t// If an event was prevented, then we stop here.\n\t\tthrow new Meteor.Error('prevented', 'Operation prevented', {\n\t\t\teventName: 'beforeInsert'\n\t\t});\n\t}\n};\n\nexport default triggerBeforeInsert;","import Event from '../../events/event.js';\n\nfunction triggerBeforeRemove(doc, trusted) {\n\t// Trigger the \"beforeRemove\" event handlers.\n\tif (!doc.dispatchEvent(new Event('beforeRemove', {\n\t\t\tcancelable: true,\n\t\t\tpropagates: true,\n\t\t\ttrusted: trusted\n\t\t}))) {\n\t\t// If an event was prevented, then we stop here.\n\t\tthrow new Meteor.Error('prevented', 'Operation prevented', {\n\t\t\teventName: 'beforeRemove'\n\t\t});\n\t}\n};\n\nexport default triggerBeforeRemove;","import Event from '../../events/event.js';\n\nfunction triggerBeforeSave(doc, trusted) {\n\t// Trigger the \"beforeSave\" event handlers.\n\tif (!doc.dispatchEvent(new Event('beforeSave', {\n\t\t\tcancelable: true,\n\t\t\tpropagates: true,\n\t\t\ttrusted: trusted\n\t\t}))) {\n\t\t// If an event was prevented, then we stop here.\n\t\tthrow new Meteor.Error('prevented', 'Operation prevented', {\n\t\t\teventName: 'beforeSave'\n\t\t});\n\t}\n};\n\nexport default triggerBeforeSave;","import Event from '../../events/event.js';\n\nfunction triggerBeforeUpdate(doc, trusted) {\n\t// Trigger the \"beforeUpdate\" event handlers.\n\tif (!doc.dispatchEvent(new Event('beforeUpdate', {\n\t\t\tcancelable: true,\n\t\t\tpropagates: true,\n\t\t\ttrusted: trusted\n\t\t}))) {\n\t\t// If an event was prevented, then we stop here.\n\t\tthrow new Meteor.Error('prevented', 'Operation prevented', {\n\t\t\teventName: 'beforeUpdate'\n\t\t});\n\t}\n};\n\nexport default triggerBeforeUpdate;","import resolveValues from '../../fields/utils/resolveValues';\n\nfunction wrapTransform(args = {}) {\n  const {\n    Class,\n    transform\n  } = args;\n  return function(rawDoc) {\n    const resolvedValues = resolveValues({\n      Class,\n      rawDoc\n    });\n    resolvedValues._isNew = false;\n    return transform(resolvedValues);\n  }\n}\n\nexport default wrapTransform;","import Module from '../../core/module.js';\n// Validators.\nimport './validators/comparison/choice.js';\nimport './validators/comparison/email.js';\nimport './validators/comparison/equal.js';\nimport './validators/comparison/not_equal.js';\nimport './validators/comparison/regexp.js';\nimport './validators/existence/null.js';\nimport './validators/existence/not_null.js';\nimport './validators/existence/required.js';\nimport './validators/logical/and.js';\nimport './validators/logical/or.js';\nimport './validators/nested/every.js';\nimport './validators/nested/has.js';\nimport './validators/nested/includes.js';\nimport './validators/size/gt.js';\nimport './validators/size/gte.js';\nimport './validators/size/length.js';\nimport './validators/size/lt.js';\nimport './validators/size/lte.js';\nimport './validators/size/max_length.js';\nimport './validators/size/min_length.js';\nimport './validators/type/array.js';\nimport './validators/type/boolean.js';\nimport './validators/type/class.js';\nimport './validators/type/date.js';\nimport './validators/type/integer.js';\nimport './validators/type/mongo_object_id.js';\nimport './validators/type/number.js';\nimport './validators/type/object.js';\nimport './validators/type/string.js';\n// Utils.\nimport documentValidate from './utils/document_validate.js';\nimport parseValidators from './utils/parse_validators.js';\n// Hooks.\nimport onInitSchema from './hooks/init_schema.js';\nimport onInitDefinition from './hooks/init_definition.js';\nimport onParseDefinition from './hooks/parse_definition.js';\nimport onMergeDefinitions from './hooks/merge_definitions.js';\nimport onApplyDefinition from './hooks/apply_definition.js';\nimport onInitClass from './hooks/init_class.js';\n\nModule.create({\n\tname: 'validators',\n\tonInitSchema: onInitSchema,\n\tonInitDefinition: onInitDefinition,\n\tonParseDefinition: onParseDefinition,\n\tonMergeDefinitions: onMergeDefinitions,\n\tonApplyDefinition: onApplyDefinition,\n\tonInitClass: onInitClass,\n\tutils: {\n\t\tdocumentValidate: documentValidate,\n\t\tparseValidators: parseValidators\n\t}\n});","import { ValidationError } from 'meteor/mdg:validation-error';\nimport Validators from './validators.js';\n\nclass Validator {\n  constructor(definition) {\n    this.name = definition.name;\n    if (definition.parseParam) {\n      this.parseParam = definition.parseParam;\n    }\n    if (definition.isValid) {\n      this.isValid = definition.isValid;\n    }\n    if (definition.validate) {\n      this.validate = definition.validate;\n    }\n    if (definition.resolveError) {\n      this.resolveError = definition.resolveError;\n    }\n  }\n\n  validate({\n    doc,\n    name,\n    nestedName,\n    value,\n    param,\n    resolveParam,\n    message,\n    resolveError\n  }) {\n    // Get the class name, which will be used later for letting know what class\n    // thrown error.\n    const className = doc.constructor.getName();\n\n    // Resolve param is the \"resolveParam\" function is provided.\n    if (Match.test(resolveParam, Function)) {\n      param = resolveParam({\n        doc,\n        name,\n        nestedName,\n        value\n      });\n    }\n    // Parse param type if validator has parsing function.\n    if (Match.test(this.parseParam, Function)) {\n      this.parseParam(param);\n    }\n    // Prepare data for validation.\n    const args = {\n      className,\n      doc,\n      name,\n      nestedName,\n      value,\n      param,\n      validator: this.name\n    };\n    // Perform validation.\n    if (!this.isValid(args)) {\n      // Prepare function for throwing validation error.\n      const throwError = (message) => {\n        // Throw error only if the error message has been successfully\n        // generated.\n        if (!message) {\n          return;\n        }\n        // Throw error.\n        throw new ValidationError([{\n          className,\n          type: this.name,\n          name,\n          nestedName,\n          value,\n          param,\n          message\n        }], message);\n      };\n\n      // Generate error message using the \"resolveError\" function if provided.\n      if (Match.test(resolveError, Function)) {\n        throwError(resolveError(args));\n      }\n      // Get error message from the string if provided.\n      if (Match.test(message, String)) {\n        throwError(message);\n      }\n      // Get error by executing a class level \"resolveError\" function.\n      let Class = doc.constructor;\n      let classResolveError = Class.getResolveError();\n      if (classResolveError instanceof Function) {\n        throwError(classResolveError(args));\n      }\n      // Get default error message.\n      if (this.resolveError instanceof Function) {\n        throwError(this.resolveError(args));\n      }\n      throwError(ValidationError.DEFAULT_REASON);\n    }\n  }\n\n  static create(definition) {\n    let validator = new Validator(definition);\n    Validator.validators[validator.name] = validator;\n\n    // Create a validation function.\n    return Validators[validator.name] = function(options) {\n      validator.validate(options);\n    }\n  }\n};\n\nValidator.validators = {};\n\nexport default Validator;","const Validators = {};\n\nexport default Validators;","import _defaults from 'lodash/defaults';\nimport _each from 'lodash/each';\nimport castNested from '../../fields/utils/castNested';\nimport documentValidate from '../utils/document_validate';\nimport callMeteorMethod from '../../storage/utils/call_meteor_method';\n\nfunction validate(options = {}, callback) {\n  const doc = this;\n  const Class = doc.constructor;\n  const Collection = Class.getCollection();\n  let connection = Collection && Collection._connection;\n  if (!connection && (!Collection || !Collection._name)) {\n    connection = Meteor.connection;\n  }\n\n  // If the first argument is callback function then reassign values.\n  if (arguments.length === 1 && Match.test(options, Function)) {\n    callback = options;\n    options = {};\n  }\n\n  // Set default options.\n  _defaults(options, {\n    fields: Class.getValidationOrder(),\n    modified: false,\n    stopOnFirstError: true,\n    simulation: true\n  });\n\n  // If a fields property is a string then put it into array.\n  if (Match.test(options.fields, String)) {\n    options.fields = [options.fields];\n  }\n\n  // Cast all fields.\n  if (options.cast) {\n    _each(Class.getFields(), (field) => {\n      doc[field.name] = field.castValue(doc[field.name], {\n        clone: false,\n        cast: true\n      });\n    });\n  }\n  // Cast only nested fields.\n  else {\n    castNested({\n      doc,\n      options: {\n        clone: false\n      }\n    });\n  }\n\n  // Prepare arguments for meteor method and utility.\n  let methodArgs = {\n    doc,\n    fields: options.fields,\n    modified: options.modified,\n    stopOnFirstError: options.stopOnFirstError,\n    simulation: options.simulation,\n  };\n\n  // If we are dealing with a remote collection and we are not on the server.\n  if (connection && connection !== Meteor.server) {\n    // Prepare arguments for meteor method.\n    let methodName = '/Astronomy/validate';\n\n    try {\n      // Run Meteor method.\n      return callMeteorMethod(\n        Class, methodName, [methodArgs], callback\n      );\n    }\n    // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n      throw err;\n    }\n  }\n\n  // If we can just validate a document without calling the meteor method. We\n  // may be on the server or the collection may be local.\n  try {\n    // Validate a document.\n    let result = documentValidate(methodArgs);\n    if (callback) {\n      callback();\n    }\n    return result;\n  }\n  catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n    throw err;\n  }\n}\n\nexport default validate;","import _extend from 'lodash/extend';\n\nfunction validateAll(options = {}, callback) {\n  let doc = this;\n  let Class = doc.constructor;\n\n  // If the first argument is callback function then reassign values.\n  if (arguments.length === 1 && Match.test(options, Function)) {\n    callback = options;\n    options = {};\n  }\n\n  _extend(options, {\n    fields: Class.getValidationOrder(),\n    stopOnFirstError: false\n  });\n\n  doc.validate(options, callback);\n};\n\nexport default validateAll;","import { Match } from 'meteor/check';\nimport { ValidationError } from 'meteor/mdg:validation-error';\n\nfunction getCheckPattern() {\n  const Class = this;\n  return Match.Where(function(doc) {\n    try {\n      doc.validate();\n    }\n    catch(err) {\n      if (ValidationError.is(err)) {\n        const firstError = err.details[0];\n        const matchError = new Match.Error(firstError.message);\n        matchError.sanitizedError = err;\n        throw matchError;\n      }\n      else {\n        throw err;\n      }\n    }\n    return true;\n  });\n};\n\nexport default getCheckPattern;","function getResolveError() {\n\tlet Class = this;\n\n\treturn Class.schema.resolveError;\n};\n\nexport default getResolveError;","import _difference from 'lodash/difference';\n\nfunction getValidationOrder() {\n\tlet Class = this;\n\n\t// Get all validators.\n\tlet validators = Class.getValidators();\n\t// Get fields names for defined validators.\n\tlet fieldsNames = Class.getFieldsNames();\n\t// Make variable name shorter.\n\tlet validationOrder = Class.schema.validationOrder;\n\n\t// If there is a validation order provided, then combine fields provided in\n\t// the validation order with the order of validators.\n\tif (validationOrder) {\n\t\t// Detect what fields are not present in the validation order.\n\t\tlet diff = _difference(fieldsNames, validationOrder);\n\t\t// Combine validation order with fields that left.\n\t\treturn validationOrder.concat(diff);\n\t}\n\t// If there is no validation order, then just return fields names in the order\n\t// in which validators were defined.\n\telse {\n\t\treturn fieldsNames;\n\t}\n};\n\nexport default getValidationOrder;","function getValidators(fieldName) {\n\tlet Class = this;\n\n\tif (!Match.test(fieldName, Match.Optional(String))) {\n\t\tthrow TypeError(\n\t\t\t'The first argument of the \"getValidators\" function has to be a string ' +\n\t\t\t'or left empty'\n\t\t);\n\t}\n\n\tif (fieldName) {\n\t\treturn Class.schema.validators[fieldName];\n\t}\n\telse {\n\t\treturn Class.schema.validators;\n\t}\n};\n\nexport default getValidators;","import _tail from 'lodash/tail';\n\nfunction validate(rawDoc) {\n  const Class = this;\n  const doc = new Class(rawDoc);\n  const args = _tail(arguments);\n  return doc.validate.apply(doc, args);\n};\n\nexport default validate;","import _tail from 'lodash/tail';\n\nfunction validateAll(rawDoc) {\n  const Class = this;\n  const doc = new Class(rawDoc);\n  const args = _tail(arguments);\n  return doc.validateAll.apply(doc, args);\n};\n\nexport default validateAll;","import _each from 'lodash/each';\nimport _zipObject from 'lodash/zipObject';\nimport hasMeteorMethod from '../../storage/utils/has_meteor_method.js';\nimport meteorValidate from '../meteor_methods/validate.js';\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n  _each(parsedDefinition.validators, function(validators, fieldName) {\n    Class.schema.validators[fieldName] =\n      Class.schema.validators[fieldName] || [];\n    _each(validators, function(validator) {\n      Class.schema.validators[fieldName] =\n        Class.schema.validators[fieldName].concat(validator);\n    });\n  });\n\n  // Add the \"/Astronomy/validate\" meteor method only when a class has assigned\n  // collection.\n  let Collection = Class.getCollection();\n  // If it's a remote collection then we register methods on the connection\n  // object of the collection.\n  let connection = Collection && Collection._connection;\n  // If it's not a remote collection than use main Meteor connection.\n  if (!connection && (!Collection || !Collection._name)) {\n    connection = Meteor.connection || Meteor.server;\n  }\n  if (connection) {\n    // Prepare meteor methods to be added.\n    let meteorMethods = {\n      '/Astronomy/validate': meteorValidate\n    };\n    _each(meteorMethods, (meteorMethod, methodName) => {\n      if (!hasMeteorMethod(connection, methodName)) {\n        // Add meteor method.\n        connection.methods(_zipObject([methodName], [meteorMethod]));\n      }\n    });\n  }\n\n  Class.schema.resolveError = parsedDefinition.resolveError;\n};\n\nexport default onApplyDefinition;","// Class static methods.\nimport getResolveError from '../class_static_methods/get_resolve_error.js';\nimport getValidationOrder from '../class_static_methods/get_validation_order.js';\nimport getValidators from '../class_static_methods/get_validators.js';\nimport validateStatic from '../class_static_methods/validate.js';\nimport validateAllStatic from '../class_static_methods/validateAll.js';\nimport getCheckPatternStatic from '../class_static_methods/getCheckPattern.js';\n// Class prototype methods.\nimport validate from '../class_prototype_methods/validate.js';\nimport validateAll from '../class_prototype_methods/validate_all.js';\n\nfunction onInitClass(Class, className) {\n\t// Class static methods.\n\tClass.getResolveError = getResolveError;\n\tClass.getValidationOrder = getValidationOrder;\n\tClass.getValidators = getValidators;\n\tClass.validate = validateStatic;\n\tClass.validateAll = validateAllStatic;\n\tClass.getCheckPattern = getCheckPatternStatic;\n\t// Class prototype methods.\n\tClass.prototype.validate = validate;\n\tClass.prototype.validateAll = validateAll;\n};\n\nexport default onInitClass;","function onInitDefinition(definition, className) {\n\tdefinition.validators = {};\n\tdefinition.resolveError = undefined;\n};\n\nexport default onInitDefinition;","function onInitSchema(schema, className) {\n\tschema.validators = {};\n\tschema.resolveError = undefined;\n};\n\nexport default onInitSchema;","import _each from 'lodash/each';\n\nfunction onMergeDefinitions(targetDefinition, sourceDefinition, ClassName) {\n\t_each(sourceDefinition.validators, function(validators, fieldName) {\n\t\ttargetDefinition.validators[fieldName] =\n\t\t\ttargetDefinition.validators[fieldName] || [];\n\t\ttargetDefinition.validators[fieldName] =\n\t\t\ttargetDefinition.validators[fieldName].concat(validators);\n\t});\n\n\ttargetDefinition.resolveError = sourceDefinition.resolveError;\n};\n\nexport default onMergeDefinitions;","import _each from 'lodash/each';\nimport _has from 'lodash/has';\nimport throwParseError from '../../core/utils/throw_parse_error.js';\nimport parseValidators from '../utils/parse_validators.js';\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n\tif (definition.resolveError) {\n\t\tif (!Match.test(definition.resolveError, Function)) {\n\t\t\tthrowParseError([{\n\t\t\t\t\t'class': className\n\t\t\t\t}, {\n\t\t\t\t\t'property': 'resolveError'\n\t\t\t\t},\n\t\t\t\t'Property values has to be a function'\n\t\t\t]);\n\t\t}\n\n\t\tparsedDefinition.resolveError = definition.resolveError;\n\t}\n\n\tif (definition.fields) {\n\t\t_each(definition.fields, function(fieldDefinition, fieldName) {\n\t\t\tif (_has(fieldDefinition, 'validators')) {\n\t\t\t\tparseValidators(\n\t\t\t\t\tfieldDefinition.validators, [{\n\t\t\t\t\t\t'class': className\n\t\t\t\t\t}, {\n\t\t\t\t\t\t'property': 'fields'\n\t\t\t\t\t}, {\n\t\t\t\t\t\t'field': fieldName\n\t\t\t\t\t}, {\n\t\t\t\t\t\t'property': 'validators'\n\t\t\t\t\t}]\n\t\t\t\t);\n\n\t\t\t\tparsedDefinition.validators[fieldName] = fieldDefinition.validators;\n\t\t\t\tfieldDefinition.validators = undefined;\n\t\t\t}\n\t\t});\n\t}\n\n\tif (definition.validators) {\n\t\t_each(definition.validators, function(validators, fieldName) {\n\t\t\tparseValidators(\n\t\t\t\tvalidators, [{\n\t\t\t\t\t'class': className\n\t\t\t\t}, {\n\t\t\t\t\t'property': 'validators'\n\t\t\t\t}]\n\t\t\t);\n\n\t\t\tparsedDefinition.validators[fieldName] = validators;\n\t\t});\n\t}\n};\n\nexport default onParseDefinition;","import documentValidate from '../utils/document_validate.js';\nimport { check, Match } from 'meteor/check';\n\nfunction validate(options) {\n  check(options, Match.Any);\n\n  return documentValidate(options);\n};\n\nexport default validate;","import _each from 'lodash/each';\nimport _intersection from 'lodash/intersection';\nimport _isNil from 'lodash/isNil';\nimport AstroClass from '../../../core/class';\nimport throwParseError from '../../core/utils/throw_parse_error';\nimport castNested from '../../fields/utils/castNested';\nimport isNestedFieldName from '../../fields/utils/isNestedFieldName';\nimport traverse from '../../fields/utils/traverse';\nimport ObjectField from '../../fields/ObjectField';\nimport ListField from '../../fields/ListField';\nimport Validators from '../validators';\nimport {\n  ValidationError\n}\nfrom 'meteor/mdg:validation-error';\n\nfunction documentValidate(options = {}) {\n  let {\n    doc,\n    fields,\n    modified = false,\n    prefix = '',\n    stopOnFirstError = true,\n    simulation = true\n  } = options;\n\n  // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  let Class = doc.constructor;\n\n  // Cast nested fields.\n  castNested({\n    doc,\n    options: {\n      clone: false\n    }\n  });\n\n  // Prepare array for storing errors list.\n  let errors = [];\n\n  // Helper function for catching and collecting errors.\n  const catchValidationError = (func) => {\n    try {\n      func();\n    }\n    catch (err) {\n      // If it's ValidationError.\n      if (ValidationError.is(err)) {\n        // If we stop on first error then just throw error again.\n        if (stopOnFirstError) {\n          throw err;\n        }\n        // Otherwise we collect errors.\n        else {\n          _each(err.details, (details) => {\n            errors.push(details);\n          });\n        }\n      }\n      // It it's not ValidationError, then we throw error again.\n      else {\n        throw err;\n      }\n    }\n  };\n\n  // If no fields were passed to validation, then we pick default validation\n  // order.\n  if (!fields) {\n    fields = Class.getValidationOrder();\n  }\n\n  // Validate only modified fields.\n  if (modified && Class.getCollection()) {\n    fields = _intersection(fields, doc.getModified());\n  }\n\n  _each(fields, (name) => {\n    // If it is a nested field pattern name then we have to look for the most\n    // nested document and validate the nested field.\n    if (isNestedFieldName(name)) {\n      traverse(doc, name, (nestedDoc, nestedName, field) => {\n        catchValidationError(() => {\n          documentValidate({\n            doc: nestedDoc,\n            fields: [nestedName],\n            prefix: prefix + name.substr(0, name.lastIndexOf(nestedName)),\n            stopOnFirstError,\n            simulation\n          });\n        });\n      });\n      return;\n    }\n\n    let field = Class.getField(name);\n\n    // Move to the next one if a field does not exist.\n    if (!field) {\n      return;\n    }\n\n    // We do not validate transient fields.\n    if (field.transient) {\n      return;\n    }\n\n    // Get value of the field.\n    let value = doc.get(name);\n\n    // If a field is optional and value is undefined then we do not validate.\n    if (field.getOptional(doc) && _isNil(value)) {\n      return;\n    }\n\n    // Execute validation in the try-catch block. That's because we want to\n    // continue validation if the \"stopOnFirstError\" flag is set to false.\n    catchValidationError(() => {\n      // First, execute type level validators.\n      field.validate({\n        doc,\n        name: prefix + name,\n        nestedName: name,\n        value\n      });\n      // Get validators for a given field.\n      let validators = Class.getValidators(name);\n      _each(validators, ({\n        type,\n        param,\n        resolveParam,\n        message,\n        resolveError\n      }) => {\n        // Get validation helper function.\n        let validationFunction = Validators[type];\n        // Execute single validator.\n        validationFunction({\n          doc,\n          name: prefix + name,\n          nestedName: name,\n          value,\n          param,\n          resolveParam,\n          message,\n          resolveError\n        });\n      });\n    });\n\n    // If it is the object field then validate it.\n    if (field instanceof ObjectField) {\n      if (value instanceof AstroClass) {\n        catchValidationError(() => {\n          documentValidate({\n            doc: value,\n            fields: value.constructor.getValidationOrder(),\n            prefix: prefix + field.name + '.',\n            stopOnFirstError\n          });\n        });\n      }\n    }\n    // If it is the list field then validate each one.\n    else if (field instanceof ListField && field.isClass) {\n      _each(value, (element, index) => {\n        if (element instanceof AstroClass) {\n          catchValidationError(() => {\n            documentValidate({\n              doc: element,\n              fields: element.constructor.getValidationOrder(),\n              prefix: prefix + field.name + '.' + index + '.',\n              stopOnFirstError\n            });\n          });\n        }\n      });\n    }\n  });\n\n  // If we have not thrown any error yet then it means that there are no errors\n  // or we do not throw on the first error.\n  if (errors.length > 0) {\n    throw new ValidationError(errors, errors[0].message);\n  }\n};\n\nexport default documentValidate;\n","import _each from 'lodash/each';\nimport _has from 'lodash/has';\nimport _union from 'lodash/union';\nimport throwParseError from '../../core/utils/throw_parse_error.js';\nimport Validators from '../validators.js';\n\nconst validatorsPattern = [{\n  type: String,\n  param: Match.Optional(Match.Any),\n  resolveParam: Match.Optional(Function),\n  message: Match.Optional(String),\n  resolveError: Match.Optional(Function)\n}];\n\nfunction parseValidators(validators, parseContext) {\n  // Validators list is an array of object that should include at least the\n  // \"type\" property.\n  if (validators && !Match.test(validators, validatorsPattern)) {\n    throwParseError(_union(\n      parseContext, ['Validators definition has to be an array of objects']\n    ));\n  }\n\n  _each(validators, function(validator) {\n    // Check if a validator of a given type exists.\n    if (!_has(Validators, validator.type)) {\n      throwParseError(_union(\n        parseContext, [`There is no \"${validator.type}\" validator`]\n      ));\n    }\n  });\n};\n\nexport default parseValidators;","import _includes from 'lodash/includes';\nimport Validator from '../../validator.js';\n\nValidator.create({\n  name: 'choice',\n\tparseParam(param) {\n    if (!Match.test(param, [Match.Any])) {\n      throw new TypeError(\n        `Parameter for the \"choice\" validator has to be an array of values`\n      );\n    }\n  },\n  isValid({ value, param }) {\n    return _includes(param, value);\n  },\n  resolveError({ name, param }) {\n\t\tvar choices = param.join(', ');\n    return `\"${name}\" has to be one of the values ${choices}`;\n  }\n});","import Validator from '../../validator.js';\n\n// The e-mail address regular expression from http://emailregex.com/.\nconst re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\nValidator.create({\n  name: 'email',\n  isValid({ value }) {\n    return re.test(value);\n  },\n  resolveError({ name, param }) {\n    return `\"${name}\" should be a valid email address`;\n  }\n});","import Validator from '../../validator.js';\n\nValidator.create({\n  name: 'equal',\n  isValid({ value, param }) {\n    return EJSON.equals(value, param);\n  },\n  resolveError({ name, param }) {\n    return `\"${name}\" should be equal ${param}`;\n  }\n});\n","import Validator from '../../validator.js';\n\nValidator.create({\n  name: 'notEqual',\n  isValid({ value, param }) {\n    return !EJSON.equals(value, param);\n  },\n  resolveError({ name, param }) {\n    return `\"${name}\" should not to be equal ${param}`;\n  }\n});\n","import Validator from '../../validator.js';\n\nValidator.create({\n  name: 'regexp',\n\tparseParam(param) {\n    if (!Match.test(param, RegExp)) {\n      throw new TypeError(\n        `Parameter for the \"regexp\" validator has to be a regular expression`\n      );\n    }\n  },\n  isValid({ value, param }) {\n    return param.test(value);\n  },\n  resolveError({ name, param }) {\n    return `\"${name}\" does not match the \"${param.toString()}\" regular expression`;\n  }\n});","import Validator from '../../validator.js';\n\nValidator.create({\n  name: 'notNull',\n  isValid({ value }) {\n    return value !== null;\n  },\n  resolveError({ name }) {\n    return `\"${name}\" should not be null`;\n  }\n});","import Validator from '../../validator.js';\n\nValidator.create({\n  name: 'null',\n  isValid({ value }) {\n    return value === null;\n  },\n  resolveError({ name }) {\n    return `\"${name}\" should be null`;\n  }\n});","import Validator from '../../validator.js';\n\nValidator.create({\n  name: 'required',\n  isValid({ value }) {\n    return value !== null && value !== undefined;\n  },\n  resolveError({ name }) {\n    return `\"${name}\" is required`;\n  }\n});","import _each from 'lodash/each';\nimport parseValidators from '../../utils/parse_validators.js';\nimport Validator from '../../validator.js';\nimport Validators from '../../validators.js';\n\nValidator.create({\n  name: 'and',\n  parseParam(param) {\n    parseValidators(param);\n  },\n  validate({\n    doc,\n    name,\n    value,\n    param: validators\n  }) {\n    _each(validators, function(validator) {\n      // Get validator.\n      const validationFunction = Validators[validator.type];\n      // Execute single validator.\n      validationFunction({\n        doc,\n        name,\n        value,\n        param: validator.param\n      });\n    });\n  }\n});","import _some from 'lodash/some';\nimport parseValidators from '../../utils/parse_validators.js';\nimport Validator from '../../validator.js';\nimport Validators from '../../validators.js';\nimport { ValidationError } from 'meteor/mdg:validation-error';\n\nValidator.create({\n  name: 'or',\n  parseParam(param) {\n    parseValidators(param);\n  },\n  validate({\n    doc,\n    name,\n    value,\n    param: validators\n  }) {\n    let firstError;\n    const isValid = _some(validators, function(validator) {\n      // Get validator.\n      const validationFunction = Validators[validator.type];\n      // Execute single validator.\n      try {\n        validationFunction({\n          doc,\n          name,\n          value,\n          param: validator.param\n        });\n        return true;\n      }\n      catch (err) {\n        if (ValidationError.is(err)) {\n          // Collect only the first error that occured.\n          if (!firstError) {\n            firstError = err;\n          }\n          return false;\n        }\n        else {\n          throw err;\n        }\n      }\n    });\n\n    if (!isValid) {\n      throw firstError;\n    }\n  }\n});","import _each from 'lodash/each';\nimport _isArray from 'lodash/isArray';\nimport parseValidators from '../../utils/parse_validators.js';\nimport Validator from '../../validator.js';\nimport Validators from '../../validators.js';\n\nValidator.create({\n  name: 'every',\n  parseParam(param) {\n    parseValidators(param);\n  },\n  validate({\n    doc,\n    name,\n    nestedName,\n    value,\n    param: validators\n  }) {\n    if (!_isArray(value)) {\n      throw new TypeError(\n        `The \"every\" validator can only work with arrays`\n      );\n    }\n\n    // Execute validators for each array element.\n    _each(value, function(element, index) {\n      // Execute each validator.\n      _each(validators, function(validator) {\n        // Get validator.\n        const validationFunction = Validators[validator.type];\n        // Execute single validator.\n        validationFunction({\n          doc,\n          name: `${name}.${index}`,\n          nestedName: `${nestedName}.${index}`,\n          value: element,\n          param: validator.param\n        });\n      });\n    });\n  }\n});","import _isObject from 'lodash/isObject';\nimport _has from 'lodash/has';\nimport Validator from '../../validator.js';\n\nValidator.create({\n  name: 'has',\n  isValid({ value, param }) {\n    if (!_isObject(value)) {\n      throw new TypeError(\n        `The \"has\" validator can only work with objects`\n      );\n    }\n    return _has(value, param);\n  },\n  resolveError({ name, param }) {\n    return `The \"${name}\" field does not have the \"${param}\" property`;\n  }\n});","import _includes from 'lodash/includes';\nimport _isArray from 'lodash/isArray';\nimport _isObject from 'lodash/isObject';\nimport Validator from '../../validator.js';\n\nValidator.create({\n  name: 'includes',\n  isValid({ value, param }) {\n    if (!_isArray(value) && !_isObject(value)) {\n      throw new TypeError(\n        `The \"includes\" validator can only work with arrays and objects`\n      );\n    }\n    return _includes(value, param);\n  },\n  resolveError({ name, param }) {\n    return `The \"${name}\" field does not contain the \"${param}\" value`;\n  }\n});","import Validator from '../../validator.js';\n\nValidator.create({\n  name: 'gt',\n  isValid({ value, param }) {\n    return value > param;\n  },\n  resolveError({ name, param }) {\n    return `\"${name}\" has to be greater than ${param}`;\n  }\n});","import Validator from '../../validator.js';\n\nValidator.create({\n  name: 'gte',\n  isValid({ value, param }) {\n    return value >= param;\n  },\n  resolveError({ name, param }) {\n    return `\"${name}\" has to be greater than or equal ${param}`;\n  }\n});","import _has from 'lodash/has';\nimport Validator from '../../validator.js';\n\nValidator.create({\n  name: 'length',\n  parseParam(param) {\n    if (!Match.test(param, Number)) {\n      throw new TypeError(\n        `Parameter for the \"length\" validator has to be a number`\n      );\n    }\n  },\n  isValid({ value, param }) {\n    if (!_has(value, 'length')) {\n      throw new TypeError(\n        `Length of the value can not be measured`\n      );\n    }\n    return value.length === param;\n  },\n  resolveError({ name, param }) {\n    return `Length of \"${name}\" has to be ${param}`;\n  }\n});","import Validator from '../../validator.js';\n\nValidator.create({\n  name: 'lt',\n  isValid({ value, param }) {\n    return value < param;\n  },\n  resolveError({ name, param }) {\n    return `\"${name}\" has to be less than ${param}`;\n  }\n});","import Validator from '../../validator.js';\n\nValidator.create({\n  name: 'lte',\n  isValid({ value, param }) {\n    return value <= param;\n  },\n  resolveError({ name, param }) {\n    return `\"${name}\" has to be less than or equal ${param}`;\n  }\n});","import _has from 'lodash/has';\nimport Validator from '../../validator.js';\n\nValidator.create({\n  name: 'maxLength',\n  parseParam(param) {\n    if (!Match.test(param, Number)) {\n      throw new TypeError(\n        `Parameter for the \"maxLength\" validator has to be a number`\n      );\n    }\n  },\n  isValid({ value, param }) {\n    if (!_has(value, 'length')) {\n      return false;\n    }\n    return value.length <= param;\n  },\n  resolveError({ name, param }) {\n    return `Length of \"${name}\" has to be at most ${param}`;\n  }\n});","import _has from 'lodash/has';\nimport Validator from '../../validator.js';\n\nValidator.create({\n  name: 'minLength',\n  parseParam(param) {\n    if (!Match.test(param, Number)) {\n      throw new TypeError(\n        `Parameter for the \"minLength\" validator has to be a number`\n      );\n    }\n  },\n  isValid({ value, param }) {\n    if (!_has(value, 'length')) {\n      return false;\n    }\n    return value.length >= param;\n  },\n  resolveError({ name, param }) {\n    return `Length of \"${name}\" has to be at least ${param}`;\n  }\n});","import _isArray from 'lodash/isArray';\nimport Validator from '../../validator.js';\n\nValidator.create({\n  name: 'array',\n  isValid({ value }) {\n    return _isArray(value);\n  },\n  resolveError({ name }) {\n    return `\"${name}\" has to be an array`;\n  }\n});","import Validator from '../../validator.js';\n\nValidator.create({\n  name: 'boolean',\n  isValid({ value }) {\n    return typeof value === 'boolean';\n  },\n  resolveError({ name }) {\n    return `\"${name}\" has to be a boolean`;\n  }\n});","import Validator from '../../validator.js';\nimport AstroClass from '../../../../core/class.js';\n\nValidator.create({\n  name: 'class',\n  parseParam(param) {\n    if (!AstroClass.isParentOf(param)) {\n      throw new TypeError(\n        `Parameter for the \"class\" validator has to be an Astronomy class`\n      );\n    }\n  },\n  isValid({\n    value,\n    param: Class\n  }) {\n    return value instanceof Class;\n  },\n  resolveError({\n    name,\n    param: Class\n  }) {\n    let className = Class.getName();\n    return `\"${name}\" has to be ${className}`;\n  }\n});","import _isDate from 'lodash/isDate';\nimport Validator from '../../validator.js';\n\nValidator.create({\n  name: 'date',\n  isValid({ value }) {\n    return _isDate(value);\n  },\n  resolveError({ name }) {\n    return `\"${name}\" has to be a date`;\n  }\n});","import _isInteger from 'lodash/isInteger';\nimport Validator from '../../validator.js';\n\nValidator.create({\n  name: 'integer',\n  isValid({ value }) {\n    return _isInteger(value);\n  },\n  resolveError({ name }) {\n    return `\"${name}\" has to be an integer`;\n  }\n});","import Validator from '../../validator.js';\nimport { Match } from 'meteor/check';\nimport { Mongo } from 'meteor/mongo';\n\nValidator.create({\n  name: 'mongoObjectID',\n  isValid({ value }) {\n    return Match.test(value, Mongo.ObjectID);;\n  },\n  resolveError({ name }) {\n    return `\"${name}\" has to be a Mongo.ObjectID`;\n  }\n});","import _isNaN from 'lodash/isNaN';\nimport _isNumber from 'lodash/isNumber';\nimport Validator from '../../validator.js';\n\nValidator.create({\n  name: 'number',\n  isValid({ value }) {\n    return !_isNaN(value) && _isNumber(value);\n  },\n  resolveError({ name }) {\n    return `\"${name}\" has to be a number`;\n  }\n});\n","import _isObject from 'lodash/isObject';\nimport Validator from '../../validator.js';\n\nValidator.create({\n  name: 'object',\n  isValid({ value }) {\n    return _isObject(value);\n  },\n  resolveError({ name }) {\n    return `\"${name}\" has to be an object`;\n  }\n});","import Validator from '../../validator.js';\n\nValidator.create({\n  name: 'string',\n  isValid({ value }) {\n    return typeof value === 'string';\n  },\n  resolveError({ name }) {\n    return `\"${name}\" has to be a string`;\n  }\n});"]}}]