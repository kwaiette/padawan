{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\api\\questions\\questions.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/api/questions/questions.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\api\\questions\\questions.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\api\\questions\\questions.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/questions/questions.js"}},"code":"module.export({\n  Question: function () {\n    return Question;\n  },\n  Reading: function () {\n    return Reading;\n  },\n  MyersBriggsCategory: function () {\n    return MyersBriggsCategory;\n  }\n});\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 0);\nvar Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo: function (v) {\n    Mongo = v;\n  }\n}, 1);\nvar Class, Enum;\nmodule.watch(require(\"meteor/jagi:astronomy\"), {\n  Class: function (v) {\n    Class = v;\n  },\n  Enum: function (v) {\n    Enum = v;\n  }\n}, 2);\nvar check;\nmodule.watch(require(\"meteor/check\"), {\n  check: function (v) {\n    check = v;\n  }\n}, 3);\nvar User;\nmodule.watch(require(\"../users/users.js\"), {\n  User: function (v) {\n    User = v;\n  }\n}, 4);\nvar Defaults;\nmodule.watch(require(\"/imports/startup/both/defaults.js\"), {\n  Defaults: function (v) {\n    Defaults = v;\n  }\n}, 5);\nvar UserNotify;\nmodule.watch(require(\"/imports/api/user_notify/user_notify.js\"), {\n  UserNotify: function (v) {\n    UserNotify = v;\n  }\n}, 6);\nvar MyersBriggsCategory = Enum.create({\n  name: 'MyersBriggsCategory',\n  identifiers: ['IE', 'NS', 'TF', 'JP']\n});\nvar Reading = Class.create({\n  name: 'Reading',\n  fields: {\n    Rank: {\n      type: Number,\n      \"default\": 0,\n      validators: [{\n        type: 'lte',\n        resolveParam: function () {\n          return 50;\n        }\n      }, {\n        type: 'gte',\n        resolveParam: function () {\n          return -50;\n        }\n      }]\n    },\n    Text: {\n      type: String,\n      \"default\": 'Well, you feel...'\n    }\n  }\n});\nvar PolarStats = Class.create({\n  name: 'PolarStats',\n  fields: {\n    LeftSum: {\n      type: Number,\n      \"default\": 0\n    },\n    RightSum: {\n      type: Number,\n      \"default\": 0\n    }\n  },\n  helpers: {\n    reset: function () {\n      this.LeftSum = 0;\n      this.RightSum = 0;\n    }\n  }\n});\nvar Question = Class.create({\n  name: \"Question\",\n  collection: new Mongo.Collection('questions'),\n  fields: {\n    Category: {\n      type: MyersBriggsCategory,\n      \"default\": 'IE'\n    },\n    Categories: {\n      type: [MyersBriggsCategory],\n      \"default\": []\n    },\n    Text: {\n      type: String,\n      \"default\": 'Whoa! What we askin\\' here?'\n    },\n    LeftText: {\n      type: String,\n      \"default\": 'Whoa! What we askin\\' here?'\n    },\n    RightText: {\n      type: String,\n      \"default\": 'Whoa! What we askin\\' here?'\n    },\n    Readings: {\n      type: [Reading],\n      \"default\": function () {\n        return [{\n          Rank: -50,\n          Text: \"You will ALWAYS Do this. Doing otherwise is inconceivable to you.\"\n        }, {\n          Rank: -49,\n          Text: \"There may be a possible scenerio where the reverse may apply, but it would be really rare.\"\n        }, {\n          Rank: -40,\n          Text: \"You can think of cases where you have done things the other way, but not under normal circumstances. \"\n        }, {\n          Rank: -30,\n          Text: \"This is your most common behavior, but there are definitely times you've done the opposite.\"\n        }, {\n          Rank: -20,\n          Text: \"This is a good default choice for you, but time and circumstance could easily find you doing the other.\"\n        }, {\n          Rank: -10,\n          Text: \"You don't have much of a preference either way, but this side sounds a bit more likely.\"\n        }, {\n          Rank: 10,\n          Text: \"You don't have much of a preference either way, but this side sounds a bit more likely.\"\n        }, {\n          Rank: 20,\n          Text: \"This is a good default choice for you, but time and circumstance could easily find you doing the other.\"\n        }, {\n          Rank: 30,\n          Text: \"This is your most common behavior, but there are definitely times you've done the opposite.\"\n        }, {\n          Rank: 40,\n          Text: \"You can think of cases where you have done things the other way, but not under normal circumstances. \"\n        }, {\n          Rank: 49,\n          Text: \"There may be a possible scenerio where the reverse may apply, but it would be really rare.\"\n        }, {\n          Rank: 50,\n          Text: \"You will ALWAYS Do this. Doing otherwise is inconceivable to you.\"\n        }];\n      }\n    },\n    segments: {\n      type: [String],\n      \"default\": []\n    },\n    Active: {\n      type: Boolean,\n      \"default\": false\n    },\n    CreatedBy: {\n      type: String,\n      \"default\": function () {\n        return Meteor.userId();\n      }\n    },\n    TimesAnswered: {\n      type: PolarStats,\n      \"default\": function () {\n        return new PolarStats();\n      }\n    },\n    SumOfAnswers: {\n      type: PolarStats,\n      \"default\": function () {\n        return new PolarStats();\n      }\n    }\n  },\n  meteorMethods: {\n    getUser: function () {\n      var u = User.findOne({\n        _id: this.CreatedBy\n      });\n      return u;\n    }\n  },\n  helpers: {\n    addAnswer: function (answer) {\n      if (answer.Value < 0) {\n        this.TimesAnswered.LeftSum++;\n        this.SumOfAnswers.LeftSum += answer.Value;\n      } else {\n        this.TimesAnswered.RightSum++;\n        this.SumOfAnswers.RightSum += answer.Value;\n      }\n\n      this.save();\n    },\n    removeAnswer: function (answer) {\n      if (answer.Value < 0) {\n        this.TimesAnswered.LeftSum--;\n\n        if (this.TimesAnswered.LeftSum <= 0) {\n          this.TimesAnswered.LeftSum = 0;\n          this.SumOfAnswers.LeftSum = 0;\n        } else {\n          this.SumOfAnswers.LeftSum -= answer.Value;\n        }\n      } else {\n        this.TimesAnswered.RightSum--;\n\n        if (this.TimesAnswered.RightSum <= 0) {\n          this.TimesAnswered.RightSum = 0;\n          this.SumOfAnswers.RightSum = 0;\n        } else {\n          this.SumOfAnswers.RightSum -= answer.Value;\n        }\n      }\n\n      this.save();\n    },\n    allAnsweredUsers: function () {\n      return User.find({\n        'MyProfile.UserType.AnsweredQuestions.QuestionID': {\n          $eq: this._id\n        }\n      });\n    },\n    unanswerAll: function (noSave) {\n      var self = this;\n      self.allAnsweredUsers().forEach(function (user) {\n        var b = user.MyProfile.UserType.AnsweredQuestions.length;\n        user.MyProfile.UserType.unAnswerQuestion(user.MyProfile.UserType.getAnswerForQuestion(self._id), false);\n\n        if (!noSave) {\n          user.save();\n        }\n      });\n      this.reset();\n    },\n    reset: function () {\n      this.TimesAnswered.reset();\n      this.SumOfAnswers.reset();\n      this.save();\n    }\n  },\n  behaviors: {\n    timestamp: {},\n    softremove: {}\n  },\n  secured: {\n    update: false\n  },\n  events: {\n    beforeInsert: function (e) {\n      var u = User.findOne({\n        username: Defaults.user.username\n      });\n      UserNotify.add({\n        userId: u._id,\n        title: 'Questions',\n        body: 'New question added',\n        action: 'questions:' + e.currentTarget._id\n      });\n    },\n    beforeUpdate: function (e) {\n      var allowed = ['updatedAt', 'TimesAnswered', 'TimesAnswered.LeftSum', 'SumOfAnswers', 'SumOfAnswers.LeftSum', 'TimesAnswered.RightSum', 'SumOfAnswers.RightSum'];\n      var doc = e.currentTarget;\n      var fieldNames = doc.getModified();\n\n      _.each(fieldNames, function (fieldName) {\n        if (!Meteor.isServer && allowed.indexOf(fieldName) < 0 && !Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n          throw new Meteor.Error(403, \"You are not authorized\");\n        }\n      });\n    }\n  }\n});","map":{"version":3,"sources":["imports/api/questions/questions.js"],"names":["module","export","Question","Reading","MyersBriggsCategory","Meteor","watch","require","v","Mongo","Class","Enum","check","User","Defaults","UserNotify","create","name","identifiers","fields","Rank","type","Number","validators","resolveParam","Text","String","PolarStats","LeftSum","RightSum","helpers","reset","collection","Collection","Category","Categories","LeftText","RightText","Readings","segments","Active","Boolean","CreatedBy","userId","TimesAnswered","SumOfAnswers","meteorMethods","getUser","u","findOne","_id","addAnswer","answer","Value","save","removeAnswer","allAnsweredUsers","find","$eq","unanswerAll","noSave","self","forEach","user","b","MyProfile","UserType","AnsweredQuestions","length","unAnswerQuestion","getAnswerForQuestion","behaviors","timestamp","softremove","secured","update","events","beforeInsert","e","username","add","title","body","action","currentTarget","beforeUpdate","allowed","doc","fieldNames","getModified","_","each","fieldName","isServer","indexOf","Roles","userIsInRole","GLOBAL_GROUP","Error"],"mappings":"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","sourcesContent":["// Definition of the questions collection\n\nimport { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { Class, Enum } from 'meteor/jagi:astronomy';\nimport { check } from 'meteor/check';\nimport { User } from '../users/users.js';\nimport { Defaults } from '/imports/startup/both/defaults.js';\nimport { UserNotify } from '/imports/api/user_notify/user_notify.js';\n\nconst MyersBriggsCategory = Enum.create({\n    name: 'MyersBriggsCategory',\n    identifiers: ['IE','NS','TF','JP']\n});\nconst Reading = Class.create({\n    name:'Reading',\n    fields: {\n        Rank: {\n            type: Number,\n            default: 0,\n            validators: [{\n                type: 'lte',\n                resolveParam: function () { return 50; }\n            },{\n                type: 'gte',\n                resolveParam: function () { return -50; }\n            }]\n        },\n        Text: {\n            type:String,\n            default: 'Well, you feel...'\n        }\n    }\n});\nconst PolarStats = Class.create({\n    name: 'PolarStats',\n    fields: {\n        LeftSum: {\n            type: Number,\n            default: 0\n        },\n        RightSum: {\n            type: Number,\n            default: 0\n        }\n    },\n    helpers: {\n        reset() {\n            this.LeftSum = 0;\n            this.RightSum = 0;\n        }\n    }\n});\nconst Question = Class.create({\n    name: \"Question\",\n    collection: new Mongo.Collection('questions'),\n    fields: {\n        Category: {\n            type: MyersBriggsCategory,\n            default: 'IE'\n        },\n        Categories: {\n            type: [MyersBriggsCategory],\n            default: []\n        },\n        Text: {\n            type: String,\n            default: 'Whoa! What we askin\\' here?'\n        },\n        LeftText: {\n            type: String,\n            default: 'Whoa! What we askin\\' here?'\n        },\n        RightText: {\n            type: String,\n            default: 'Whoa! What we askin\\' here?'\n        },\n        Readings: {\n            type: [Reading],\n            default: function () {\n                return [\n                    { Rank: -50, Text: \"You will ALWAYS Do this. Doing otherwise is inconceivable to you.\"},\n                    { Rank: -49, Text: \"There may be a possible scenerio where the reverse may apply, but it would be really rare.\"},\n                    { Rank: -40, Text: \"You can think of cases where you have done things the other way, but not under normal circumstances. \"},\n                    { Rank: -30, Text: \"This is your most common behavior, but there are definitely times you've done the opposite.\"},\n                    { Rank: -20, Text: \"This is a good default choice for you, but time and circumstance could easily find you doing the other.\"},\n                    { Rank: -10, Text: \"You don't have much of a preference either way, but this side sounds a bit more likely.\"},\n                    { Rank: 10, Text: \"You don't have much of a preference either way, but this side sounds a bit more likely.\"},\n                    { Rank: 20, Text: \"This is a good default choice for you, but time and circumstance could easily find you doing the other.\"},\n                    { Rank: 30, Text: \"This is your most common behavior, but there are definitely times you've done the opposite.\"},\n                    { Rank: 40, Text: \"You can think of cases where you have done things the other way, but not under normal circumstances. \"},\n                    { Rank: 49, Text: \"There may be a possible scenerio where the reverse may apply, but it would be really rare.\"},\n                    { Rank: 50, Text: \"You will ALWAYS Do this. Doing otherwise is inconceivable to you.\"}\n                ];\n            }\n        },\n        segments: {\n            type: [String],\n            default: []\n        },\n        Active: {\n            type: Boolean,\n            default: false\n        },\n        CreatedBy: {\n            type: String,\n            default: function() { return Meteor.userId(); }\n        },\n        TimesAnswered: {\n            type: PolarStats,\n            default: function () { return new PolarStats(); }\n        },\n        SumOfAnswers: {\n            type: PolarStats,\n            default: function () { return new PolarStats(); }\n        }\n    },\n    meteorMethods: {\n        getUser() {\n            let u = User.findOne({_id:this.CreatedBy});\n            return u;\n        }\n    },\n    helpers: {\n        addAnswer(answer) {\n            if(answer.Value < 0) {\n                this.TimesAnswered.LeftSum++;\n                this.SumOfAnswers.LeftSum += answer.Value;\n            } else {\n                this.TimesAnswered.RightSum++;\n                this.SumOfAnswers.RightSum += answer.Value;\n            }\n            this.save();\n        },\n        removeAnswer(answer) {\n            if(answer.Value < 0) {\n                this.TimesAnswered.LeftSum--;\n                if(this.TimesAnswered.LeftSum <= 0) { this.TimesAnswered.LeftSum = 0; this.SumOfAnswers.LeftSum = 0; }\n                else { this.SumOfAnswers.LeftSum -= answer.Value; }\n            } else {\n                this.TimesAnswered.RightSum--;\n                if(this.TimesAnswered.RightSum <= 0) { this.TimesAnswered.RightSum = 0; this.SumOfAnswers.RightSum = 0; }\n                else { this.SumOfAnswers.RightSum -= answer.Value; }\n            }\n            this.save();\n        },\n        allAnsweredUsers() {\n            return User.find({ 'MyProfile.UserType.AnsweredQuestions.QuestionID':{ $eq: this._id } });\n        },\n        unanswerAll(noSave) {\n            let self = this;\n            self.allAnsweredUsers().forEach(function (user) {\n                let b = user.MyProfile.UserType.AnsweredQuestions.length;\n                user.MyProfile.UserType.unAnswerQuestion(user.MyProfile.UserType.getAnswerForQuestion(self._id), false);\n                if(!noSave) { user.save(); }\n            });\n            this.reset();\n        },\n        reset() {\n            this.TimesAnswered.reset();\n            this.SumOfAnswers.reset();\n            this.save();\n        }\n    },\n    behaviors: {\n        timestamp: {},\n        softremove: {}\n    },\n    secured: {\n        update: false\n    },\n    events: {\n        beforeInsert(e) {\n            let u = User.findOne( {username:Defaults.user.username} );\n            UserNotify.add({\n                userId: u._id,\n                title: 'Questions',\n                body: 'New question added',\n                action: 'questions:'+e.currentTarget._id\n            });\n        },\n        beforeUpdate(e) {\n            const allowed = [ 'updatedAt', 'TimesAnswered', 'TimesAnswered.LeftSum', 'SumOfAnswers', 'SumOfAnswers.LeftSum', 'TimesAnswered.RightSum', 'SumOfAnswers.RightSum' ];\n            const doc = e.currentTarget;\n            const fieldNames = doc.getModified();\n            _.each(fieldNames, function (fieldName) {\n                if(!Meteor.isServer && allowed.indexOf(fieldName) < 0 && !Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n                    throw new Meteor.Error(403, \"You are not authorized\");\n                }\n            });\n        }\n    }\n});\n\nexport { Question, Reading, MyersBriggsCategory };\n"]},"sourceType":"script","hash":"6b157af9681695b2bac3e48979b4f328be5bd85a"}
