{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\startup\\both\\at_config.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/startup/both/at_config.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\startup\\both\\at_config.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\startup\\both\\at_config.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/startup/both/at_config.js"}},"code":"let User;\nmodule.watch(require(\"/imports/api/users/users.js\"), {\n  User(v) {\n    User = v;\n  }\n\n}, 0);\nlet Team;\nmodule.watch(require(\"/imports/api/teams/teams.js\"), {\n  Team(v) {\n    Team = v;\n  }\n\n}, 1);\nlet Defaults;\nmodule.watch(require(\"/imports/startup/both/defaults.js\"), {\n  Defaults(v) {\n    Defaults = v;\n  }\n\n}, 2);\n\nconst myPostLogout = function () {\n  //example redirect after logout\n  FlowRouter.go('/signin');\n};\n\nconst mySubmitFunc = function (error, state) {\n  if (!error) {\n    if (state === \"signIn\") {// Successfully logged in\n      // ...\n    }\n\n    if (state === \"signUp\") {// Successfully registered\n      // ...\n    }\n  }\n};\n\nfunction myPreSubmitFunc() {\n  console.log(\"Pre:  \", arguments);\n}\n\nfunction myPostSubmitFunc(userId, info) {\n  Accounts.emailTemplates.siteName = \"DeveloperLevel\";\n  Accounts.emailTemplates.from = \"DeveloperLevel <wayne@paladinarcher.com>\";\n  Accounts.emailTemplates.verifyEmail = {\n    subject() {\n      return \"[DeveloperLevel] Verify your email address\";\n    },\n\n    text(user, url) {\n      let emailAddress = user.emails[0].address,\n          urlWithoutHash = url.replace('#/', ''),\n          supportEmail = \"support@developerlevel.com\",\n          emailBody = \"To verify your email address (\".concat(emailAddress, \") visit the following link:\\n\\n\").concat(urlWithoutHash, \"\\n\\n If you did not request this verification, please ignore this email.\");\n      return emailBody;\n    }\n\n  };\n  Accounts.sendVerificationEmail(userId);\n  console.log(\"Post: \", arguments);\n}\n\nAccountsTemplates.configure({\n  // Behavior\n  confirmPassword: true,\n  enablePasswordChange: true,\n  forbidClientAccountCreation: false,\n  overrideLoginErrors: true,\n  sendVerificationEmail: false,\n  lowercaseUsername: false,\n  focusFirstInput: true,\n  // Appearance\n  showAddRemoveServices: false,\n  showForgotPasswordLink: true,\n  showLabels: true,\n  showPlaceholders: true,\n  showResendVerificationEmailLink: false,\n  // Client-side Validation\n  continuousValidation: false,\n  negativeFeedback: false,\n  negativeValidation: true,\n  positiveValidation: true,\n  positiveFeedback: true,\n  showValidating: true,\n  // Privacy Policy and Terms of Use\n  privacyUrl: 'privacy',\n  termsUrl: 'terms-of-use',\n  // Redirects\n  homeRoutePath: '/',\n  redirectTimeout: 4000,\n  // Routing\n  defaultTemplate: 'Auth_page',\n  defaultLayout: 'App_body',\n  defaultContentRegion: 'main',\n  defaultLayoutRegions: {},\n  // Hooks\n  onLogoutHook: myPostLogout,\n  onSubmitHook: mySubmitFunc,\n  preSignUpHook: myPreSubmitFunc,\n  postSignUpHook: myPostSubmitFunc,\n  // Texts\n  texts: {\n    button: {\n      signUp: \"Register Now!\"\n    },\n    socialSignUp: \"Register\",\n    socialIcons: {\n      \"meteor-developer\": \"fa fa-rocket\"\n    },\n    title: {\n      forgotPwd: \"Recover Your Password\"\n    },\n    inputIcons: {\n      isValidating: \"fa fa-spinner fa-spin\",\n      hasSuccess: \"fa fa-check\",\n      hasError: \"fa fa-times\"\n    }\n  }\n}); // Define these routes in a file loaded on both client and server\n\nAccountsTemplates.configureRoute('signIn', {\n  name: 'signin',\n  path: '/signin'\n});\nAccountsTemplates.configureRoute('signUp', {\n  name: 'join',\n  path: '/join'\n});\nAccountsTemplates.configureRoute('forgotPwd');\nAccountsTemplates.configureRoute('resetPwd', {\n  name: 'resetPwd',\n  path: '/reset-password'\n});\nAccountsTemplates.addFields([{\n  _id: \"first_name\",\n  type: \"text\",\n  required: true,\n  displayName: \"First Name\",\n  func: function (value) {\n    //if(Meteor.isClient) {\n    console.log(\"Firstname validation: \", value); //}\n\n    return false;\n  }\n}, {\n  _id: \"last_name\",\n  type: \"text\",\n  required: true,\n  displayName: \"Last Name\",\n  func: function (value) {\n    //if(Meteor.isClient) {\n    console.log(\"Lastname validation: \", value); //}\n\n    return false;\n  }\n}, {\n  _id: \"gender\",\n  type: \"select\",\n  required: true,\n  displayName: \"Gender\",\n  select: [{\n    text: \"Male\",\n    value: \"male\"\n  }, {\n    text: \"Female\",\n    value: \"female\"\n  }]\n}]);\n\nif (Meteor.isServer) {\n  Accounts.onCreateUser((options, user) => {\n    user.slug = options.email;\n    user.updateAt = user.createdAt;\n    user.MyProfile = {\n      firstName: options.profile.first_name,\n      lastName: options.profile.last_name,\n      gender: options.profile.gender === \"female\",\n      UserType: {\n        Personality: {\n          IE: {},\n          NS: {},\n          TF: {},\n          JP: {}\n        },\n        AnsweredQuestions: []\n      },\n      birthDate: undefined,\n      age: undefined\n    };\n    user.teams = [Team.Default.Name];\n    user.roles = {};\n    user.profile = options.profile;\n\n    if (options.isAdmin && options.username === 'admin') {\n      user.roles[Roles.GLOBAL_GROUP] = ['admin'];\n      Roles.addUsersToRoles(user._id, 'admin', Roles.GLOBAL_GROUP);\n    } else {\n      let t = Team.findOne({\n        Name: Team.Default.Name\n      });\n      user.roles[Team.Default.Name] = ['member', Defaults.role.name];\n      t.addUsers(user._id);\n    }\n\n    return user;\n  });\n  Accounts.validateNewUser(function (user) {\n    var loggedInUser;\n\n    try {\n      loggedInUser = Meteor.user();\n    } catch (ex) {\n      console.log(ex);\n    }\n\n    if (!loggedInUser || Roles.userIsInRole(loggedInUser, ['admin', 'manage-users'], Roles.GLOBAL_GROUP)) {\n      // NOTE: This example assumes the user is not using groups.\n      return true;\n    }\n\n    throw new Meteor.Error(403, \"Not authorized to create new users\");\n  });\n}","map":{"version":3,"sources":["imports/startup/both/at_config.js"],"names":["User","module","watch","require","v","Team","Defaults","myPostLogout","FlowRouter","go","mySubmitFunc","error","state","myPreSubmitFunc","console","log","arguments","myPostSubmitFunc","userId","info","Accounts","emailTemplates","siteName","from","verifyEmail","subject","text","user","url","emailAddress","emails","address","urlWithoutHash","replace","supportEmail","emailBody","sendVerificationEmail","AccountsTemplates","configure","confirmPassword","enablePasswordChange","forbidClientAccountCreation","overrideLoginErrors","lowercaseUsername","focusFirstInput","showAddRemoveServices","showForgotPasswordLink","showLabels","showPlaceholders","showResendVerificationEmailLink","continuousValidation","negativeFeedback","negativeValidation","positiveValidation","positiveFeedback","showValidating","privacyUrl","termsUrl","homeRoutePath","redirectTimeout","defaultTemplate","defaultLayout","defaultContentRegion","defaultLayoutRegions","onLogoutHook","onSubmitHook","preSignUpHook","postSignUpHook","texts","button","signUp","socialSignUp","socialIcons","title","forgotPwd","inputIcons","isValidating","hasSuccess","hasError","configureRoute","name","path","addFields","_id","type","required","displayName","func","value","select","Meteor","isServer","onCreateUser","options","slug","email","updateAt","createdAt","MyProfile","firstName","profile","first_name","lastName","last_name","gender","UserType","Personality","IE","NS","TF","JP","AnsweredQuestions","birthDate","undefined","age","teams","Default","Name","roles","isAdmin","username","Roles","GLOBAL_GROUP","addUsersToRoles","t","findOne","role","addUsers","validateNewUser","loggedInUser","ex","userIsInRole","Error"],"mappings":"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","sourcesContent":["import { User } from '/imports/api/users/users.js';\nimport { Team } from '/imports/api/teams/teams.js';\nimport { Defaults } from '/imports/startup/both/defaults.js';\n\nconst myPostLogout = function(){\n    //example redirect after logout\n    FlowRouter.go('/signin');\n};\nconst mySubmitFunc = function(error, state){\n  if (!error) {\n    if (state === \"signIn\") {\n      // Successfully logged in\n      // ...\n    }\n    if (state === \"signUp\") {\n      // Successfully registered\n      // ...\n    }\n  }\n};\nfunction myPreSubmitFunc()  { console.log(\"Pre:  \", arguments); }\n\nfunction myPostSubmitFunc(userId, info) {\n    Accounts.emailTemplates.siteName = \"DeveloperLevel\";\n    Accounts.emailTemplates.from     = \"DeveloperLevel <wayne@paladinarcher.com>\";\n\n    Accounts.emailTemplates.verifyEmail = {\n        subject() {\n            return \"[DeveloperLevel] Verify your email address\";\n        },\n        text( user, url ) {\n            let emailAddress   = user.emails[0].address,\n                urlWithoutHash = url.replace( '#/', '' ),\n                supportEmail   = \"support@developerlevel.com\",\n                emailBody      = `To verify your email address (${emailAddress}) visit the following link:\\n\\n${urlWithoutHash}\\n\\n If you did not request this verification, please ignore this email.`;\n\n            return emailBody;\n        }\n    };\n    Accounts.sendVerificationEmail( userId );\n    console.log(\"Post: \", arguments);\n}\n\nAccountsTemplates.configure({\n    // Behavior\n    confirmPassword: true,\n    enablePasswordChange: true,\n    forbidClientAccountCreation: false,\n    overrideLoginErrors: true,\n    sendVerificationEmail: false,\n    lowercaseUsername: false,\n    focusFirstInput: true,\n\n    // Appearance\n    showAddRemoveServices: false,\n    showForgotPasswordLink: true,\n    showLabels: true,\n    showPlaceholders: true,\n    showResendVerificationEmailLink: false,\n\n    // Client-side Validation\n\n    continuousValidation: false,\n    negativeFeedback: false,\n    negativeValidation: true,\n    positiveValidation: true,\n    positiveFeedback: true,\n    showValidating: true,\n\n\n    // Privacy Policy and Terms of Use\n    privacyUrl: 'privacy',\n    termsUrl: 'terms-of-use',\n\n    // Redirects\n    homeRoutePath: '/',\n    redirectTimeout: 4000,\n\n    // Routing\n\n    defaultTemplate: 'Auth_page',\n    defaultLayout: 'App_body',\n    defaultContentRegion: 'main',\n    defaultLayoutRegions: {},\n\n    // Hooks\n    onLogoutHook: myPostLogout,\n    onSubmitHook: mySubmitFunc,\n    preSignUpHook: myPreSubmitFunc,\n    postSignUpHook: myPostSubmitFunc,\n\n    // Texts\n    texts: {\n      button: {\n          signUp: \"Register Now!\"\n      },\n      socialSignUp: \"Register\",\n      socialIcons: {\n          \"meteor-developer\": \"fa fa-rocket\"\n      },\n      title: {\n          forgotPwd: \"Recover Your Password\"\n      },\n      inputIcons: {\n          isValidating: \"fa fa-spinner fa-spin\",\n          hasSuccess: \"fa fa-check\",\n          hasError: \"fa fa-times\",\n      }\n    },\n});\n\n// Define these routes in a file loaded on both client and server\nAccountsTemplates.configureRoute('signIn', {\n  name: 'signin',\n  path: '/signin'\n});\nAccountsTemplates.configureRoute('signUp', {\n  name: 'join',\n  path: '/join'\n});\nAccountsTemplates.configureRoute('forgotPwd');\nAccountsTemplates.configureRoute('resetPwd', {\n  name: 'resetPwd',\n  path: '/reset-password'\n});\n\nAccountsTemplates.addFields([{\n    _id: \"first_name\",\n    type: \"text\",\n    required: true,\n    displayName: \"First Name\",\n    func: function(value) {\n        //if(Meteor.isClient) {\n            console.log(\"Firstname validation: \", value);\n\n        //}\n        return false;\n    }},{\n    _id: \"last_name\",\n    type: \"text\",\n    required: true,\n    displayName: \"Last Name\",\n    func: function(value) {\n        //if(Meteor.isClient) {\n            console.log(\"Lastname validation: \", value);\n\n        //}\n        return false;\n    }},{\n    _id: \"gender\",\n    type: \"select\",\n    required: true,\n    displayName: \"Gender\",\n    select: [\n        {\n            text: \"Male\",\n            value: \"male\",\n        },\n        {\n            text: \"Female\",\n            value: \"female\",\n        },\n    ],\n}]);\nif(Meteor.isServer) {\n    Accounts.onCreateUser((options, user) => {\n        user.slug = options.email;\n        user.updateAt = user.createdAt;\n        user.MyProfile = {\n            firstName: options.profile.first_name,\n            lastName: options.profile.last_name,\n            gender: (options.profile.gender === \"female\"),\n            UserType: {\n                Personality: {\n                    IE: {},\n                    NS: {},\n                    TF: {},\n                    JP: {}\n                },\n                AnsweredQuestions: []\n            },\n            birthDate: undefined,\n            age: undefined\n        };\n        user.teams = [ Team.Default.Name ];\n        user.roles = {};\n        user.profile = options.profile;\n        if(options.isAdmin && options.username === 'admin') {\n            user.roles[Roles.GLOBAL_GROUP] = ['admin'];\n            Roles.addUsersToRoles(user._id, 'admin', Roles.GLOBAL_GROUP);\n        } else {\n            let t = Team.findOne( {Name: Team.Default.Name} );\n            user.roles[Team.Default.Name] = ['member', Defaults.role.name];\n            t.addUsers( user._id );\n\t\t}\n        return user;\n    });\n    Accounts.validateNewUser(function (user) {\n        var loggedInUser;\n        try { loggedInUser = Meteor.user(); }\n        catch(ex) {\n            console.log(ex);\n        }\n\n        if (!loggedInUser || Roles.userIsInRole(loggedInUser, ['admin','manage-users'], Roles.GLOBAL_GROUP)) {\n          // NOTE: This example assumes the user is not using groups.\n          return true;\n        }\n\n        throw new Meteor.Error(403, \"Not authorized to create new users\");\n    });\n}\n"]},"sourceType":"script","hash":"6280048d5e209f5910d9881f7b14523cb78d6d84"}
