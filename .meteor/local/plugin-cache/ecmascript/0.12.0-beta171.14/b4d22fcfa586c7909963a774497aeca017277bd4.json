{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\api\\questions\\methods.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/api/questions/methods.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\api\\questions\\methods.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","presets":[],"generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\api\\questions\\methods.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/questions/methods.js"}},"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet check;\nmodule.watch(require(\"meteor/check\"), {\n  check(v) {\n    check = v;\n  }\n\n}, 1);\nlet Question, MyersBriggsCategory;\nmodule.watch(require(\"./questions.js\"), {\n  Question(v) {\n    Question = v;\n  },\n\n  MyersBriggsCategory(v) {\n    MyersBriggsCategory = v;\n  }\n\n}, 2);\nlet User, Answer;\nmodule.watch(require(\"../users/users.js\"), {\n  User(v) {\n    User = v;\n  },\n\n  Answer(v) {\n    Answer = v;\n  }\n\n}, 3);\nMeteor.methods({\n  'question.insert'(category, text, left, right, seg) {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    }\n\n    console.log(category);\n    let newQuestion = new Question({\n      Category: parseInt(category[0]),\n      Categories: category.map(a => {\n        return parseInt(a);\n      }),\n      Text: text,\n      LeftText: left,\n      RightText: right,\n      segments: seg,\n      CreatedBy: Meteor.userId()\n    });\n    console.log(category, text, newQuestion);\n    newQuestion.validate({\n      cast: true\n    });\n    return newQuestion.save();\n  },\n\n  'question.answer'(questionId, value, isReversed) {\n    let question = Question.findOne({\n      _id: questionId\n    });\n    let me = User.findOne({\n      _id: Meteor.userId()\n    });\n    value = parseFloat(value);\n\n    if (!!isReversed) {\n      value = ~value + 1;\n    }\n\n    console.log(questionId, value, !!isReversed);\n    let answer = new Answer({\n      Categories: question.Categories,\n      QuestionID: questionId,\n      Reversed: !!isReversed,\n      Value: value\n    });\n    question.addAnswer(answer);\n    me.MyProfile.UserType.answerQuestion(answer);\n    console.log(me.MyProfile);\n    me.save();\n  },\n\n  'question.unanswer'(questionId) {\n    let me = User.findOne({\n      _id: Meteor.userId()\n    });\n    let answer = me.MyProfile.UserType.getAnswerForQuestion(questionId);\n\n    if (answer == null) {\n      throw new Meteor.Error(403, 'You can\\'t unanwer a question you haven\\'t answered.');\n    }\n\n    me.MyProfile.UserType.unAnswerQuestion(answer);\n    me.save();\n  },\n\n  'question.unanswerAll'(questionIds) {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    }\n\n    if (!questionIds instanceof Array) {\n      questionIds = [questionIds];\n    }\n\n    let questions = Question.find({\n      _id: {\n        $in: questionIds\n      }\n    });\n    questions.forEach(function (question) {\n      question.unanswerAll();\n    });\n  },\n\n  'question.delete'(questionId) {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    }\n\n    let me = User.findOne({\n      _id: Meteor.userId()\n    });\n    let question = Question.findOne({\n      _id: questionId\n    });\n    question.remove();\n  },\n\n  'question.resetUsers'(userIds) {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    }\n\n    if (!userIds instanceof Array) {\n      userIds = [userIds];\n    }\n\n    let us = User.find({\n      _id: {\n        $in: userIds\n      }\n    });\n\n    if (!us) {\n      throw new Meteor.Error(404, \"User is not found.\");\n    }\n\n    us.forEach(function (u) {\n      u.MyProfile.UserType.reset();\n      u.save();\n    });\n  },\n\n  'question.resetAll'() {\n    if (!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n      throw new Meteor.Error(403, \"You are not authorized\");\n    }\n\n    let qs = Question.find({});\n    qs.forEach(function (q) {\n      q.unanswerAll();\n    });\n    let us = User.find({});\n    us.forEach(function (u) {\n      u.MyProfile.UserType.reset();\n      u.save();\n    });\n  },\n\n  'question.countQuestions'(myUserId) {\n    //console.log(\"happy1\");\n    let me = User.findOne({\n      _id: myUserId\n    }); //console.log(\"UserID\", me);\n\n    let totalQuestions = Question.find().count(); //console.log(\"happy3\", totalQuestions);\n\n    me.MyProfile.UserType.setTotalQuestions(totalQuestions); //console.log(\"happy4\", me.MyProfile.UserType.getTotalQuestions());\n\n    return totalQuestions;\n  }\n\n});","map":{"version":3,"sources":["imports/api/questions/methods.js"],"names":["Meteor","module","watch","require","v","check","Question","MyersBriggsCategory","User","Answer","methods","category","text","left","right","seg","Roles","userIsInRole","userId","GLOBAL_GROUP","Error","console","log","newQuestion","Category","parseInt","Categories","map","a","Text","LeftText","RightText","segments","CreatedBy","validate","cast","save","questionId","value","isReversed","question","findOne","_id","me","parseFloat","answer","QuestionID","Reversed","Value","addAnswer","MyProfile","UserType","answerQuestion","getAnswerForQuestion","unAnswerQuestion","questionIds","Array","questions","find","$in","forEach","unanswerAll","remove","userIds","us","u","reset","qs","q","myUserId","totalQuestions","count","setTotalQuestions"],"mappings":"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","sourcesContent":["// Methods related to Questions\n\nimport { Meteor } from 'meteor/meteor';\nimport { check } from 'meteor/check';\nimport { Question, MyersBriggsCategory } from './questions.js';\nimport { User, Answer} from '../users/users.js';\n\nMeteor.methods({\n    'question.insert'(category, text, left, right, seg) {\n        if(!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        }\n        console.log(category);\n        let newQuestion = new Question({ Category: parseInt(category[0]), Categories: category.map((a)=>{return parseInt(a);}), Text: text, LeftText:left, RightText:right, segments:seg, CreatedBy:Meteor.userId() });\n        console.log(category, text, newQuestion);\n        newQuestion.validate({\n            cast: true\n        });\n\n        return newQuestion.save();\n    },\n    'question.answer'(questionId, value, isReversed) {\n        let question = Question.findOne({_id:questionId});\n        let me = User.findOne({_id:Meteor.userId()});\n        value = parseFloat(value);\n        if(!!isReversed) { value = ~value + 1; }\n        console.log(questionId, value, !!isReversed);\n        let answer = new Answer({\n            Categories: question.Categories,\n            QuestionID: questionId,\n            Reversed: !!isReversed,\n            Value: value\n        });\n        question.addAnswer(answer);\n        me.MyProfile.UserType.answerQuestion(answer);\n        console.log(me.MyProfile);\n        me.save();\n    },\n    'question.unanswer'(questionId) {\n        let me = User.findOne({_id:Meteor.userId()});\n        let answer = me.MyProfile.UserType.getAnswerForQuestion(questionId);\n        if(answer == null) { throw new Meteor.Error(403, 'You can\\'t unanwer a question you haven\\'t answered.'); }\n        me.MyProfile.UserType.unAnswerQuestion(answer);\n        me.save();\n    },\n    'question.unanswerAll'(questionIds) {\n        if(!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        }\n        if(!questionIds instanceof Array) { questionIds = [questionIds]; }\n        let questions = Question.find({_id:{ $in : questionIds}});\n        questions.forEach(function (question) { question.unanswerAll(); });\n    },\n    'question.delete'(questionId) {\n        if(!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        }\n        let me = User.findOne({_id:Meteor.userId()});\n        let question = Question.findOne({_id:questionId});\n        question.remove();\n    },\n    'question.resetUsers'(userIds) {\n        if(!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        }\n        if(!userIds instanceof Array) { userIds = [userIds]; }\n        let us = User.find({_id:{$in:userIds}});\n        if(!us) { throw new Meteor.Error(404, \"User is not found.\"); }\n        us.forEach(function (u) {\n            u.MyProfile.UserType.reset();\n            u.save();\n        });\n    },\n    'question.resetAll'() {\n        if(!Roles.userIsInRole(Meteor.userId(), ['admin'], Roles.GLOBAL_GROUP)) {\n            throw new Meteor.Error(403, \"You are not authorized\");\n        }\n        let qs = Question.find({});\n        qs.forEach(function (q) {\n            q.unanswerAll();\n        });\n        let us = User.find({});\n        us.forEach(function (u) {\n            u.MyProfile.UserType.reset();\n            u.save();\n        });\n    },\n    'question.countQuestions'(myUserId) {\n        //console.log(\"happy1\");\n        let me = User.findOne({_id:myUserId});\n        //console.log(\"UserID\", me);\n        let totalQuestions = Question.find().count();\n        //console.log(\"happy3\", totalQuestions);\n        me.MyProfile.UserType.setTotalQuestions(totalQuestions);\n        //console.log(\"happy4\", me.MyProfile.UserType.getTotalQuestions());\n        return totalQuestions;\n    }\n});\n"]},"sourceType":"script","hash":"b4d22fcfa586c7909963a774497aeca017277bd4"}
