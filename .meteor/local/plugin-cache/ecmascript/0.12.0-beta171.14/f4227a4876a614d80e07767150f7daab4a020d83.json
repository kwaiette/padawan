{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\indexes\\hooks\\parse_definition.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/modules/indexes/hooks/parse_definition.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\indexes\\hooks\\parse_definition.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\indexes\\hooks\\parse_definition.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/modules/indexes/hooks/parse_definition.js"}},"code":"var _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\nvar throwParseError;\nmodule.watch(require(\"../../core/utils/throw_parse_error.js\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 1);\nvar fieldDefinitionPattern = Match.ObjectIncluding({\n  index: Match.OneOf(1, -1, String)\n});\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  // Check existence and validity of the \"indexes\" property.\n  if (definition.indexes !== undefined) {\n    _each(definition.indexes, function (index, indexName) {\n      if (!Match.test(index, Object)) {\n        throwParseError([{\n          'class': className\n        }, {\n          'index': indexName\n        }, 'Indexes definition has to be an object']);\n      }\n\n      index = {\n        fields: index.fields,\n        options: index.options || {}\n      };\n      index.options.name = index.options.name || indexName;\n      parsedDefinition.indexes[indexName] = index;\n    });\n  }\n\n  if (definition.fields !== undefined) {\n    _each(definition.fields, function (fieldDefinition, fieldName) {\n      // Stop if a field definition does not contain index information.\n      if (!Match.test(fieldDefinition, fieldDefinitionPattern)) {\n        return;\n      } // Prepare an index definition.\n\n\n      var indexDefinition = {\n        fields: {},\n        options: {\n          name: fieldName\n        }\n      };\n      indexDefinition.fields[fieldName] = fieldDefinition.index;\n      parsedDefinition.indexes[fieldName] = indexDefinition;\n    });\n  }\n}\n\n;\nmodule.exportDefault(onParseDefinition);","map":{"version":3,"sources":["packages/jagi:astronomy/lib/modules/indexes/hooks/parse_definition.js"],"names":["_each","module","watch","require","v","throwParseError","fieldDefinitionPattern","Match","ObjectIncluding","index","OneOf","String","onParseDefinition","parsedDefinition","definition","className","indexes","undefined","indexName","test","Object","fields","options","name","fieldDefinition","fieldName","indexDefinition","exportDefault"],"mappings":"AAAA,IAAIA,KAAJ;;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAAA,uBAASC,CAAT,EAAW;AAACJ,YAAMI,CAAN;AAAQ;AAApB,CAApC,EAA0D,CAA1D;AAA6D,IAAIC,eAAJ;AAAoBJ,OAAOC,KAAP,CAAaC,QAAQ,uCAAR,CAAb,EAA8D;AAAA,uBAASC,CAAT,EAAW;AAACC,sBAAgBD,CAAhB;AAAkB;AAA9B,CAA9D,EAA8F,CAA9F;AAG3F,IAAME,yBAAyBC,MAAMC,eAAN,CAAsB;AACnDC,SAAOF,MAAMG,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB,EAAmBC,MAAnB;AAD4C,CAAtB,CAA/B;;AAIA,SAASC,iBAAT,CAA2BC,gBAA3B,EAA6CC,UAA7C,EAAyDC,SAAzD,EAAoE;AAClE;AACA,MAAID,WAAWE,OAAX,KAAuBC,SAA3B,EAAsC;AACpCjB,UAAMc,WAAWE,OAAjB,EAA0B,UAACP,KAAD,EAAQS,SAAR,EAAsB;AAC9C,UAAI,CAACX,MAAMY,IAAN,CAAWV,KAAX,EAAkBW,MAAlB,CAAL,EAAgC;AAC9Bf,wBAAgB,CAAC;AACb,mBAASU;AADI,SAAD,EAEX;AACD,mBAASG;AADR,SAFW,EAKd,wCALc,CAAhB;AAOD;;AACDT,cAAQ;AACNY,gBAAQZ,MAAMY,MADR;AAENC,iBAASb,MAAMa,OAAN,IAAiB;AAFpB,OAAR;AAIAb,YAAMa,OAAN,CAAcC,IAAd,GAAqBd,MAAMa,OAAN,CAAcC,IAAd,IAAsBL,SAA3C;AACAL,uBAAiBG,OAAjB,CAAyBE,SAAzB,IAAsCT,KAAtC;AACD,KAhBD;AAiBD;;AAED,MAAIK,WAAWO,MAAX,KAAsBJ,SAA1B,EAAqC;AACnCjB,UAAMc,WAAWO,MAAjB,EAAyB,UAACG,eAAD,EAAkBC,SAAlB,EAAgC;AACvD;AACA,UAAI,CAAClB,MAAMY,IAAN,CAAWK,eAAX,EAA4BlB,sBAA5B,CAAL,EAA0D;AACxD;AACD,OAJsD,CAKvD;;;AACA,UAAIoB,kBAAkB;AACpBL,gBAAQ,EADY;AAEpBC,iBAAS;AACPC,gBAAME;AADC;AAFW,OAAtB;AAMAC,sBAAgBL,MAAhB,CAAuBI,SAAvB,IAAoCD,gBAAgBf,KAApD;AACAI,uBAAiBG,OAAjB,CAAyBS,SAAzB,IAAsCC,eAAtC;AACD,KAdD;AAeD;AACF;;AAAA;AA9CDzB,OAAO0B,aAAP,CAgDef,iBAhDf","sourcesContent":["import _each from 'lodash/each';\nimport throwParseError from '../../core/utils/throw_parse_error.js';\n\nconst fieldDefinitionPattern = Match.ObjectIncluding({\n  index: Match.OneOf(1, -1, String)\n});\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  // Check existence and validity of the \"indexes\" property.\n  if (definition.indexes !== undefined) {\n    _each(definition.indexes, (index, indexName) => {\n      if (!Match.test(index, Object)) {\n        throwParseError([{\n            'class': className\n          }, {\n            'index': indexName\n          },\n          'Indexes definition has to be an object'\n        ]);\n      }\n      index = {\n        fields: index.fields,\n        options: index.options || {}\n      };\n      index.options.name = index.options.name || indexName;\n      parsedDefinition.indexes[indexName] = index;\n    });\n  }\n\n  if (definition.fields !== undefined) {\n    _each(definition.fields, (fieldDefinition, fieldName) => {\n      // Stop if a field definition does not contain index information.\n      if (!Match.test(fieldDefinition, fieldDefinitionPattern)) {\n        return;\n      }\n      // Prepare an index definition.\n      let indexDefinition = {\n        fields: {},\n        options: {\n          name: fieldName\n        }\n      };\n      indexDefinition.fields[fieldName] = fieldDefinition.index;\n      parsedDefinition.indexes[fieldName] = indexDefinition;\n    });\n  }\n};\n\nexport default onParseDefinition;"]},"sourceType":"script","hash":"f4227a4876a614d80e07767150f7daab4a020d83"}
