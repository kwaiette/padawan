{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\storage\\class_static_methods\\insert.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/modules/storage/class_static_methods/insert.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\storage\\class_static_methods\\insert.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\storage\\class_static_methods\\insert.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/modules/storage/class_static_methods/insert.js"}},"code":"var isRemote;\nmodule.watch(require(\"../utils/is_remote.js\"), {\n  \"default\": function (v) {\n    isRemote = v;\n  }\n}, 0);\nvar callMeteorMethod;\nmodule.watch(require(\"../utils/call_meteor_method.js\"), {\n  \"default\": function (v) {\n    callMeteorMethod = v;\n  }\n}, 1);\nvar classInsert;\nmodule.watch(require(\"../utils/class_insert.js\"), {\n  \"default\": function (v) {\n    classInsert = v;\n  }\n}, 2);\n\nfunction insert(rawDoc, callback) {\n  var Class = this;\n  var Collection = Class.getCollection(); // Prepare arguments.\n\n  var args = {\n    className: Class.getName(),\n    rawDoc: rawDoc\n  }; // Generate ID if not provided.\n\n  if (!rawDoc._id) {\n    var generateId = true; // Don't generate the id if we're the client and the 'outermost' call.\n    // This optimization saves us passing both the randomSeed and the id.\n    // Passing both is redundant.\n\n    if (Collection._isRemoteCollection()) {\n      var enclosing = DDP._CurrentInvocation.get();\n\n      if (!enclosing) {\n        generateId = false;\n      }\n    }\n\n    if (generateId) {\n      rawDoc._id = Collection._makeNewID();\n    }\n  } // If we are dealing with a remote collection and we are not on the server.\n\n\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    var methodName = '/Astronomy/insert';\n\n    try {\n      // Run Meteor method.\n      return callMeteorMethod(Class, methodName, [args], callback);\n    } // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n\n      throw err;\n    }\n  } // If we can just insert a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n\n\n  try {\n    // Set the \"trusted\" argument to true.\n    args.trusted = true; // Insert a document.\n\n    var result = classInsert(args);\n\n    if (callback) {\n      callback(undefined, result);\n    }\n\n    return result;\n  } catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n\n    throw err;\n  }\n}\n\nmodule.exportDefault(insert);","map":{"version":3,"sources":["packages/jagi:astronomy/lib/modules/storage/class_static_methods/insert.js"],"names":["isRemote","module","watch","require","v","callMeteorMethod","classInsert","insert","rawDoc","callback","Class","Collection","getCollection","args","className","getName","_id","generateId","_isRemoteCollection","enclosing","DDP","_CurrentInvocation","get","_makeNewID","methodName","err","trusted","result","undefined","exportDefault"],"mappings":"AAAA,IAAIA,QAAJ;AAAaC,OAAOC,KAAP,CAAaC,QAAQ,uBAAR,CAAb,EAA8C;AAAA,uBAASC,CAAT,EAAW;AAACJ,eAASI,CAAT;AAAW;AAAvB,CAA9C,EAAuE,CAAvE;AAA0E,IAAIC,gBAAJ;AAAqBJ,OAAOC,KAAP,CAAaC,QAAQ,gCAAR,CAAb,EAAuD;AAAA,uBAASC,CAAT,EAAW;AAACC,uBAAiBD,CAAjB;AAAmB;AAA/B,CAAvD,EAAwF,CAAxF;AAA2F,IAAIE,WAAJ;AAAgBL,OAAOC,KAAP,CAAaC,QAAQ,0BAAR,CAAb,EAAiD;AAAA,uBAASC,CAAT,EAAW;AAACE,kBAAYF,CAAZ;AAAc;AAA1B,CAAjD,EAA6E,CAA7E;;AAIvN,SAASG,MAAT,CAAgBC,MAAhB,EAAwBC,QAAxB,EAAkC;AAChC,MAAMC,QAAQ,IAAd;AACA,MAAMC,aAAaD,MAAME,aAAN,EAAnB,CAFgC,CAIhC;;AACA,MAAMC,OAAO;AACXC,eAAWJ,MAAMK,OAAN,EADA;AAEXP;AAFW,GAAb,CALgC,CAUhC;;AACA,MAAI,CAACA,OAAOQ,GAAZ,EAAiB;AACf,QAAIC,aAAa,IAAjB,CADe,CAEf;AACA;AACA;;AACA,QAAIN,WAAWO,mBAAX,EAAJ,EAAsC;AACpC,UAAMC,YAAYC,IAAIC,kBAAJ,CAAuBC,GAAvB,EAAlB;;AACA,UAAI,CAACH,SAAL,EAAgB;AACdF,qBAAa,KAAb;AACD;AACF;;AACD,QAAIA,UAAJ,EAAgB;AACdT,aAAOQ,GAAP,GAAaL,WAAWY,UAAX,EAAb;AACD;AACF,GAzB+B,CA2BhC;;;AACA,MAAIvB,SAASU,KAAT,CAAJ,EAAqB;AACnB;AACA,QAAMc,aAAa,mBAAnB;;AAEA,QAAI;AACF;AACA,aAAOnB,iBACLK,KADK,EACEc,UADF,EACc,CAACX,IAAD,CADd,EACsBJ,QADtB,CAAP;AAGD,KALD,CAMA;AACA,WAAOgB,GAAP,EAAY;AACV,UAAIhB,QAAJ,EAAc;AACZA,iBAASgB,GAAT;AACA,eAAO,IAAP;AACD;;AACD,YAAMA,GAAN;AACD;AACF,GA9C+B,CAgDhC;AACA;;;AACA,MAAI;AACF;AACAZ,SAAKa,OAAL,GAAe,IAAf,CAFE,CAGF;;AACA,QAAIC,SAASrB,YAAYO,IAAZ,CAAb;;AACA,QAAIJ,QAAJ,EAAc;AACZA,eAASmB,SAAT,EAAoBD,MAApB;AACD;;AACD,WAAOA,MAAP;AACD,GATD,CAUA,OAAOF,GAAP,EAAY;AACV,QAAIhB,QAAJ,EAAc;AACZA,eAASgB,GAAT;AACA,aAAO,IAAP;AACD;;AACD,UAAMA,GAAN;AACD;AACF;;AAvEDxB,OAAO4B,aAAP,CAyEetB,MAzEf","sourcesContent":["import isRemote from '../utils/is_remote.js';\nimport callMeteorMethod from '../utils/call_meteor_method.js';\nimport classInsert from '../utils/class_insert.js';\n\nfunction insert(rawDoc, callback) {\n  const Class = this;\n  const Collection = Class.getCollection();\n\n  // Prepare arguments.\n  const args = {\n    className: Class.getName(),\n    rawDoc\n  };\n\n  // Generate ID if not provided.\n  if (!rawDoc._id) {\n    let generateId = true;\n    // Don't generate the id if we're the client and the 'outermost' call.\n    // This optimization saves us passing both the randomSeed and the id.\n    // Passing both is redundant.\n    if (Collection._isRemoteCollection()) {\n      const enclosing = DDP._CurrentInvocation.get();\n      if (!enclosing) {\n        generateId = false;\n      }\n    }\n    if (generateId) {\n      rawDoc._id = Collection._makeNewID();\n    }\n  }\n\n  // If we are dealing with a remote collection and we are not on the server.\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    const methodName = '/Astronomy/insert';\n\n    try {\n      // Run Meteor method.\n      return callMeteorMethod(\n        Class, methodName, [args], callback\n      );\n    }\n    // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n      throw err;\n    }\n  }\n\n  // If we can just insert a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n  try {\n    // Set the \"trusted\" argument to true.\n    args.trusted = true;\n    // Insert a document.\n    let result = classInsert(args);\n    if (callback) {\n      callback(undefined, result);\n    }\n    return result;\n  }\n  catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n    throw err;\n  }\n}\n\nexport default insert;"]},"sourceType":"script","hash":"f5d1a3d2e13167cd0b37fa458072e40a2e325248"}
