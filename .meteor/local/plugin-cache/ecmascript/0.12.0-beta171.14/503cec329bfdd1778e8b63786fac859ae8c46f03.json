{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\fields\\hooks\\parse_definition.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/modules/fields/hooks/parse_definition.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\fields\\hooks\\parse_definition.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","presets":[],"generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\fields\\hooks\\parse_definition.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/modules/fields/hooks/parse_definition.js"}},"code":"let _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  default(v) {\n    _each = v;\n  }\n\n}, 0);\n\nlet _extend;\n\nmodule.watch(require(\"lodash/extend\"), {\n  default(v) {\n    _extend = v;\n  }\n\n}, 1);\n\nlet _includes;\n\nmodule.watch(require(\"lodash/includes\"), {\n  default(v) {\n    _includes = v;\n  }\n\n}, 2);\nlet throwParseError;\nmodule.watch(require(\"../../core/utils/throw_parse_error.js\"), {\n  default(v) {\n    throwParseError = v;\n  }\n\n}, 3);\nlet Class;\nmodule.watch(require(\"../../../core/class.js\"), {\n  default(v) {\n    Class = v;\n  }\n\n}, 4);\nlet Type;\nmodule.watch(require(\"../type.js\"), {\n  default(v) {\n    Type = v;\n  }\n\n}, 5);\nlet reservedKeywords;\nmodule.watch(require(\"../../../core/reserved_keywords.js\"), {\n  default(v) {\n    reservedKeywords = v;\n  }\n\n}, 6);\nconst typePattern = Match.OneOf(Function, [Function]);\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  if (definition.fields === undefined) {\n    return;\n  } // Fields definition has to be an object.\n\n\n  if (!Match.test(definition.fields, Object)) {\n    throwParseError([{\n      'class': className\n    }, {\n      'property': 'fields'\n    }, 'Fields definition has to be an object']);\n  }\n\n  _each(definition.fields, function (fieldDefinition, fieldName) {\n    if (Match.test(fieldDefinition, typePattern)) {\n      fieldDefinition = {\n        name: fieldName,\n        type: fieldDefinition\n      };\n    } else if (Match.test(fieldDefinition, Object)) {\n      fieldDefinition = _extend(fieldDefinition, {\n        name: fieldName\n      });\n    } else {\n      throwParseError([{\n        'class': className\n      }, {\n        'property': 'fields'\n      }, {\n        'field': fieldName\n      }, 'Field definition has to be an object or type']);\n    } // Check if a field name is not reserved keyword.\n\n\n    if (_includes(reservedKeywords, fieldName)) {\n      throwParseError([{\n        'class': className\n      }, {\n        'method': fieldName\n      }, 'Reserved keyword']);\n    }\n\n    parsedDefinition.fields[fieldDefinition.name] = fieldDefinition;\n  });\n}\n\n;\nmodule.exportDefault(onParseDefinition);","map":{"version":3,"sources":["packages/jagi:astronomy/lib/modules/fields/hooks/parse_definition.js"],"names":["_each","module","watch","require","default","v","_extend","_includes","throwParseError","Class","Type","reservedKeywords","typePattern","Match","OneOf","Function","onParseDefinition","parsedDefinition","definition","className","fields","undefined","test","Object","fieldDefinition","fieldName","name","type","exportDefault"],"mappings":"AAAA,IAAIA,KAAJ;;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACC,UAAQC,CAAR,EAAU;AAACL,YAAMK,CAAN;AAAQ;;AAApB,CAApC,EAA0D,CAA1D;;AAA6D,IAAIC,OAAJ;;AAAYL,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACC,UAAQC,CAAR,EAAU;AAACC,cAAQD,CAAR;AAAU;;AAAtB,CAAtC,EAA8D,CAA9D;;AAAiE,IAAIE,SAAJ;;AAAcN,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACC,UAAQC,CAAR,EAAU;AAACE,gBAAUF,CAAV;AAAY;;AAAxB,CAAxC,EAAkE,CAAlE;AAAqE,IAAIG,eAAJ;AAAoBP,OAAOC,KAAP,CAAaC,QAAQ,uCAAR,CAAb,EAA8D;AAACC,UAAQC,CAAR,EAAU;AAACG,sBAAgBH,CAAhB;AAAkB;;AAA9B,CAA9D,EAA8F,CAA9F;AAAiG,IAAII,KAAJ;AAAUR,OAAOC,KAAP,CAAaC,QAAQ,wBAAR,CAAb,EAA+C;AAACC,UAAQC,CAAR,EAAU;AAACI,YAAMJ,CAAN;AAAQ;;AAApB,CAA/C,EAAqE,CAArE;AAAwE,IAAIK,IAAJ;AAAST,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACC,UAAQC,CAAR,EAAU;AAACK,WAAKL,CAAL;AAAO;;AAAnB,CAAnC,EAAwD,CAAxD;AAA2D,IAAIM,gBAAJ;AAAqBV,OAAOC,KAAP,CAAaC,QAAQ,oCAAR,CAAb,EAA2D;AAACC,UAAQC,CAAR,EAAU;AAACM,uBAAiBN,CAAjB;AAAmB;;AAA/B,CAA3D,EAA4F,CAA5F;AAQvgB,MAAMO,cAAcC,MAAMC,KAAN,CAAYC,QAAZ,EAAsB,CAACA,QAAD,CAAtB,CAApB;;AAEA,SAASC,iBAAT,CAA2BC,gBAA3B,EAA6CC,UAA7C,EAAyDC,SAAzD,EAAoE;AAClE,MAAID,WAAWE,MAAX,KAAsBC,SAA1B,EAAqC;AACnC;AACD,GAHiE,CAKlE;;;AACA,MAAI,CAACR,MAAMS,IAAN,CAAWJ,WAAWE,MAAtB,EAA8BG,MAA9B,CAAL,EAA4C;AAC1Cf,oBAAgB,CAAC;AACb,eAASW;AADI,KAAD,EAEX;AACD,kBAAY;AADX,KAFW,EAKd,uCALc,CAAhB;AAOD;;AAEDnB,QAAMkB,WAAWE,MAAjB,EAAyB,UAASI,eAAT,EAA0BC,SAA1B,EAAqC;AAC5D,QAAIZ,MAAMS,IAAN,CAAWE,eAAX,EAA4BZ,WAA5B,CAAJ,EAA8C;AAC5CY,wBAAkB;AAChBE,cAAMD,SADU;AAEhBE,cAAMH;AAFU,OAAlB;AAID,KALD,MAMK,IAAIX,MAAMS,IAAN,CAAWE,eAAX,EAA4BD,MAA5B,CAAJ,EAAyC;AAC5CC,wBAAkBlB,QAAQkB,eAAR,EAAyB;AACzCE,cAAMD;AADmC,OAAzB,CAAlB;AAGD,KAJI,MAKA;AACHjB,sBAAgB,CAAC;AACb,iBAASW;AADI,OAAD,EAEX;AACD,oBAAY;AADX,OAFW,EAIX;AACD,iBAASM;AADR,OAJW,EAOd,8CAPc,CAAhB;AASD,KAtB2D,CAwB5D;;;AACA,QAAIlB,UAAUI,gBAAV,EAA4Bc,SAA5B,CAAJ,EAA4C;AAC1CjB,sBAAgB,CAAC;AACb,iBAASW;AADI,OAAD,EAEX;AACD,kBAAUM;AADT,OAFW,EAKd,kBALc,CAAhB;AAOD;;AAEDR,qBAAiBG,MAAjB,CAAwBI,gBAAgBE,IAAxC,IAAgDF,eAAhD;AACD,GApCD;AAqCD;;AAAA;AA/DDvB,OAAO2B,aAAP,CAiEeZ,iBAjEf","sourcesContent":["import _each from 'lodash/each';\nimport _extend from 'lodash/extend';\nimport _includes from 'lodash/includes';\nimport throwParseError from '../../core/utils/throw_parse_error.js';\nimport Class from '../../../core/class.js';\nimport Type from '../type.js';\nimport reservedKeywords from '../../../core/reserved_keywords.js';\n\nconst typePattern = Match.OneOf(Function, [Function]);\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  if (definition.fields === undefined) {\n    return;\n  }\n\n  // Fields definition has to be an object.\n  if (!Match.test(definition.fields, Object)) {\n    throwParseError([{\n        'class': className\n      }, {\n        'property': 'fields'\n      },\n      'Fields definition has to be an object'\n    ]);\n  }\n\n  _each(definition.fields, function(fieldDefinition, fieldName) {\n    if (Match.test(fieldDefinition, typePattern)) {\n      fieldDefinition = {\n        name: fieldName,\n        type: fieldDefinition\n      };\n    }\n    else if (Match.test(fieldDefinition, Object)) {\n      fieldDefinition = _extend(fieldDefinition, {\n        name: fieldName\n      });\n    }\n    else {\n      throwParseError([{\n          'class': className\n        }, {\n          'property': 'fields'\n        }, {\n          'field': fieldName\n        },\n        'Field definition has to be an object or type'\n      ]);\n    }\n\n    // Check if a field name is not reserved keyword.\n    if (_includes(reservedKeywords, fieldName)) {\n      throwParseError([{\n          'class': className\n        }, {\n          'method': fieldName\n        },\n        'Reserved keyword'\n      ]);\n    }\n\n    parsedDefinition.fields[fieldDefinition.name] = fieldDefinition;\n  });\n};\n\nexport default onParseDefinition;"]},"sourceType":"script","hash":"503cec329bfdd1778e8b63786fac859ae8c46f03"}
