{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\storage\\utils\\document_update.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/modules/storage/utils/document_update.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\storage\\utils\\document_update.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","presets":[],"generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\storage\\utils\\document_update.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/modules/storage/utils/document_update.js"}},"code":"let _omit;\n\nmodule.watch(require(\"lodash/omit\"), {\n  default(v) {\n    _omit = v;\n  }\n\n}, 0);\n\nlet _size;\n\nmodule.watch(require(\"lodash/size\"), {\n  default(v) {\n    _size = v;\n  }\n\n}, 1);\nlet castNested;\nmodule.watch(require(\"../../fields/utils/castNested\"), {\n  default(v) {\n    castNested = v;\n  }\n\n}, 2);\nlet triggerBeforeSave;\nmodule.watch(require(\"./trigger_before_save\"), {\n  default(v) {\n    triggerBeforeSave = v;\n  }\n\n}, 3);\nlet triggerBeforeUpdate;\nmodule.watch(require(\"./trigger_before_update\"), {\n  default(v) {\n    triggerBeforeUpdate = v;\n  }\n\n}, 4);\nlet triggerAfterSave;\nmodule.watch(require(\"./trigger_after_save\"), {\n  default(v) {\n    triggerAfterSave = v;\n  }\n\n}, 5);\nlet triggerAfterUpdate;\nmodule.watch(require(\"./trigger_after_update\"), {\n  default(v) {\n    triggerAfterUpdate = v;\n  }\n\n}, 6);\nlet isModified;\nmodule.watch(require(\"./isModified\"), {\n  default(v) {\n    isModified = v;\n  }\n\n}, 7);\nlet getModifier;\nmodule.watch(require(\"./getModifier\"), {\n  default(v) {\n    getModifier = v;\n  }\n\n}, 8);\nlet documentValidate;\nmodule.watch(require(\"../../validators/utils/document_validate\"), {\n  default(v) {\n    documentValidate = v;\n  }\n\n}, 9);\n\nfunction documentUpdate(args = {}) {\n  let {\n    doc,\n    stopOnFirstError,\n    fields,\n    simulation = true,\n    forceUpdate = false,\n    trusted = false,\n    oldDoc\n  } = args; // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  let Class = doc.constructor;\n  let Collection = Class.getCollection(); // Return if there were no modifications.\n\n  if (!isModified({\n    doc,\n    fields\n  })) {\n    // Validate a document even if there were no modifications.\n    documentValidate({\n      doc,\n      fields,\n      stopOnFirstError,\n      simulation\n    }); // 0 documents were modified.\n\n    return 0;\n  } // Check if a class is secured.\n\n\n  if (Class.isSecured('update') && Meteor.isServer && !trusted) {\n    throw new Meteor.Error(403, 'Updating from the client is not allowed');\n  } // Cast nested documents.\n\n\n  castNested({\n    doc,\n    options: {\n      clone: false\n    }\n  }); // Trigger before events.\n\n  triggerBeforeSave(doc, trusted);\n  triggerBeforeUpdate(doc, trusted); // Cast nested documents.\n\n  castNested({\n    doc,\n    options: {\n      clone: false\n    }\n  }); // Validate a document.\n\n  documentValidate({\n    doc,\n    fields,\n    stopOnFirstError,\n    simulation\n  }); // Get modifier.\n  // If the \"forceUpdate\" option was set then we don't run the \"getModifier\"\n  // function to get modifier and instead we just take entire raw object and\n  // remove the \"_id\" field as we can't update it.\n\n  const modifier = forceUpdate ? _omit(doc.raw(), ['_id']) : getModifier({\n    doc,\n    fields,\n    oldDoc\n  }); // Stop execution is a modifier is empty.\n\n  if (_size(modifier) === 0) {\n    return 0;\n  } // Update a document.\n\n\n  try {\n    const result = Collection._collection.update({\n      _id: doc._id\n    }, modifier); // Trigger after events.\n\n\n    triggerAfterUpdate(doc, trusted);\n    triggerAfterSave(doc, trusted);\n    return result;\n  } catch (err) {\n    if (err.name === 'MongoError' || err.name === 'MinimongoError') {\n      throw new Meteor.Error(409, err.toString());\n    } else {\n      throw err;\n    }\n  }\n}\n\n;\nmodule.exportDefault(documentUpdate);","map":{"version":3,"sources":["packages/jagi:astronomy/lib/modules/storage/utils/document_update.js"],"names":["_omit","module","watch","require","default","v","_size","castNested","triggerBeforeSave","triggerBeforeUpdate","triggerAfterSave","triggerAfterUpdate","isModified","getModifier","documentValidate","documentUpdate","args","doc","stopOnFirstError","fields","simulation","forceUpdate","trusted","oldDoc","Meteor","isServer","Class","constructor","Collection","getCollection","isSecured","Error","options","clone","modifier","raw","result","_collection","update","_id","err","name","toString","exportDefault"],"mappings":"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","sourcesContent":["import _omit from 'lodash/omit';\nimport _size from 'lodash/size';\nimport castNested from '../../fields/utils/castNested';\nimport triggerBeforeSave from './trigger_before_save';\nimport triggerBeforeUpdate from './trigger_before_update';\nimport triggerAfterSave from './trigger_after_save';\nimport triggerAfterUpdate from './trigger_after_update';\nimport isModified from './isModified';\nimport getModifier from './getModifier';\nimport documentValidate from '../../validators/utils/document_validate';\n\nfunction documentUpdate(args = {}) {\n  let {\n    doc,\n    stopOnFirstError,\n    fields,\n    simulation = true,\n    forceUpdate = false,\n    trusted = false,\n    oldDoc\n  } = args;\n\n  // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  let Class = doc.constructor;\n  let Collection = Class.getCollection();\n\n  // Return if there were no modifications.\n  if (!isModified({\n      doc,\n      fields\n    })) {\n    // Validate a document even if there were no modifications.\n    documentValidate({\n      doc,\n      fields,\n      stopOnFirstError,\n      simulation\n    });\n    // 0 documents were modified.\n    return 0;\n  }\n\n  // Check if a class is secured.\n  if (Class.isSecured('update') && Meteor.isServer && !trusted) {\n    throw new Meteor.Error(403, 'Updating from the client is not allowed');\n  }\n\n  // Cast nested documents.\n  castNested({\n    doc,\n    options: {\n      clone: false\n    }\n  });\n\n  // Trigger before events.\n  triggerBeforeSave(doc, trusted);\n  triggerBeforeUpdate(doc, trusted);\n\n  // Cast nested documents.\n  castNested({\n    doc,\n    options: {\n      clone: false\n    }\n  });\n\n  // Validate a document.\n  documentValidate({\n    doc,\n    fields,\n    stopOnFirstError,\n    simulation\n  });\n\n  // Get modifier.\n  // If the \"forceUpdate\" option was set then we don't run the \"getModifier\"\n  // function to get modifier and instead we just take entire raw object and\n  // remove the \"_id\" field as we can't update it.\n  const modifier = forceUpdate ? _omit(doc.raw(), ['_id']) : getModifier({\n    doc,\n    fields,\n    oldDoc\n  });\n  // Stop execution is a modifier is empty.\n  if (_size(modifier) === 0) {\n    return 0;\n  }\n  // Update a document.\n  try {\n    const result = Collection._collection.update({\n      _id: doc._id\n    }, modifier);\n\n    // Trigger after events.\n    triggerAfterUpdate(doc, trusted);\n    triggerAfterSave(doc, trusted);\n\n    return result;\n  }\n  catch(err) {\n    if (err.name === 'MongoError' || err.name === 'MinimongoError') {\n      throw new Meteor.Error(409, err.toString());\n    }\n    else {\n      throw err;\n    }\n  }\n};\n\nexport default documentUpdate;\n"]},"sourceType":"script","hash":"3b4320e3e2e650032a3344adb14a3927bd8018ca"}
