{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\api\\individual_goals\\individual_goals.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/api/individual_goals/individual_goals.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\api\\individual_goals\\individual_goals.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\api\\individual_goals\\individual_goals.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/individual_goals/individual_goals.js"}},"code":"module.export({\n  IndividualGoal: () => IndividualGoal\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet User;\nmodule.watch(require(\"../users/users.js\"), {\n  User(v) {\n    User = v;\n  }\n\n}, 2);\nlet Class, Enum;\nmodule.watch(require(\"meteor/jagi:astronomy\"), {\n  Class(v) {\n    Class = v;\n  },\n\n  Enum(v) {\n    Enum = v;\n  }\n\n}, 3);\nlet UserNotify;\nmodule.watch(require(\"/imports/api/user_notify/user_notify.js\"), {\n  UserNotify(v) {\n    UserNotify = v;\n  }\n\n}, 4);\nlet GoalComment;\nmodule.watch(require(\"/imports/api/team_goals/team_goals.js\"), {\n  GoalComment(v) {\n    GoalComment = v;\n  }\n\n}, 5);\nconst IndividualGoal = Class.create({\n  name: 'IndividualGoal',\n  collection: new Mongo.Collection('individual_goal'),\n  fields: {\n    userId: {\n      type: String,\n      default: ''\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    description: {\n      type: String,\n      default: ''\n    },\n    parentId: {\n      type: String,\n      default: ''\n    },\n    assignedToStr: {\n      type: String,\n      transient: true\n    },\n    reachedDate: {\n      type: Date,\n      optional: true\n    },\n    startDate: {\n      type: Date,\n      optional: true\n    },\n    dueDate: {\n      type: Date,\n      optional: true\n    },\n    reviewDate: {\n      type: Date,\n      optional: true\n    },\n    reviewedOnDate: {\n      type: Date,\n      optional: true\n    },\n    goalComments: {\n      type: [GoalComment],\n      default: []\n    },\n    reviewComments: {\n      type: [GoalComment],\n      default: []\n    },\n    teamId: {\n      type: String,\n      default: \"\"\n    },\n    privacy: {\n      type: String,\n      default: 'private'\n    },\n    createdBy: {\n      type: String,\n      default: ''\n    }\n  },\n  behaviors: {\n    timestamp: {}\n  },\n  helpers: {\n    getGoalRoleGroup() {\n      return this.teamName + '+' + this._id;\n    },\n\n    userIsAdmin() {\n      if (Roles.userIsInRole(Meteor.userId(), 'admin', this.teamName) || Roles.userIsInRole(Meteor.userId(), 'admin', this.getGoalRoleGroup())) {\n        //user is either a global admin, a team admin, or a goal admin\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    userIsMentor() {\n      if (Roles.userIsInRole(Meteor.userId(), 'mentor', this.getGoalRoleGroup())) {\n        //user is a mentor for this goal\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    userIsAssigned() {\n      if (Roles.userIsInRole(Meteor.userId(), 'assigned', this.getGoalRoleGroup())) {\n        //user is assigned to this goal\n        return true;\n      } else {\n        return false;\n      }\n    },\n\n    setDateField(fieldName, rdate) {\n      if (typeof rdate === \"undefined\") {\n        rdate = new Date();\n      } else if (!(rdate instanceof Date)) {\n        return false;\n      }\n\n      this[fieldName] = rdate;\n      return true;\n    },\n\n    getUserFullNameX(userId) {\n      let u = User.findOne({\n        _id: userId\n      });\n\n      if (!u) {\n        return \"Michael\";\n      }\n\n      let name = u.MyProfile.firstName + \" \" + u.MyProfile.lastName;\n      return name;\n    },\n\n    hasModifyPerm(fieldName) {\n      switch (fieldName) {\n        //admins-only fields\n        case 'dueDate':\n        case 'startDate':\n        case 'reachedDate':\n        case 'reviewDate':\n        case 'title':\n        case 'description':\n        case 'assignedTo':\n        case 'mentors':\n        case 'admins':\n        case 'subgoals':\n          return this.userIsAdmin();\n          break;\n        //admins and mentors\n\n        case 'reviewedOnDate':\n        case 'reviewComments':\n          return this.userIsAdmin() || this.userIsMentor();\n          break;\n        //anyone assigned to the goal\n\n        case 'goalComments':\n          return this.userIsAdmin() || this.userIsMentor() || this.userIsAssigned();\n          break;\n\n        case 'teamId':\n        case 'privacy':\n          return true;\n          break;\n\n        default:\n          return false;\n          break;\n      }\n    },\n\n    notifyNew(oldList, newList) {\n      let diffList = _.difference(newList, oldList);\n\n      for (let i = 0; i < diffList.length; i++) {\n        UserNotify.add({\n          userId: diffList[i],\n          title: 'Goals',\n          body: 'You have been added to goal ' + this.title,\n          action: 'teamgoals:' + this.teamName\n        });\n      }\n    }\n\n  },\n  events: {\n    beforeSave(e) {\n      /*\n      let egoal = e.currentTarget;\n       //any user added to a goal is automatically added to the 'view-goals' role for the team\n      //if they are already in that role, this should just ignore the redundant addUser\n      let flds = [\"assignedTo\",\"mentors\",\"admins\"];\n      for (let i in flds) {\n          if (Array.isArray(egoal[flds[i]]) && egoal[flds[i]].length > 0) {\n              Roles.addUsersToRoles(egoal[flds[i]], 'view-goals', egoal.teamName);\n          }\n      }\n      */\n    }\n\n  },\n  meteorMethods: {\n    setDueDate(rdate) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      if (this.setDateField(\"dueDate\", rdate)) {\n        this.save();\n      } else {\n        throw new Meteor.Error(403, \"Invalid date\");\n      }\n    },\n\n    setGoalReached(rdate) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      if (this.setDateField(\"reachedDate\", rdate)) {\n        this.save();\n      } else {\n        throw new Meteor.Error(403, \"Invalid date\");\n      }\n    },\n\n    setReviewDate(rdate) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      if (this.setDateField(\"reviewDate\", rdate)) {\n        this.save();\n      } else {\n        throw new Meteor.Error(403, \"Invalid date\");\n      }\n    },\n\n    setGoalReviewedOn(rdate) {\n      //mentors and admins\n      if (!this.userIsAdmin() && !this.userIsMentor()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      if (this.setDateField(\"reviewedOnDate\", rdate)) {\n        this.save();\n      } else {\n        throw new Meteor.Error(403, \"Invalid date\");\n      }\n    },\n\n    addComment(commentTxt) {\n      //mentors, admins, and assignees\n      if (!this.userIsAdmin() && !this.userIsMentor() && !this.userIsAssigned()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.goalComments.push(new GoalComment({\n        userId: Meteor.userId(),\n        date: new Date(),\n        text: commentTxt\n      }));\n      this.save();\n    },\n\n    addReviewComment(commentTxt) {\n      //mentors and admins\n      if (!this.userIsAdmin() && !this.userIsMentor()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.reviewComments.push(new GoalComment({\n        userId: Meteor.userId(),\n        date: new Date(),\n        text: commentTxt\n      }));\n      this.save();\n    },\n\n    createNewGoal() {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      } //\n\n    },\n\n    setTitle(title) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.title = title;\n      this.save();\n    },\n\n    setDescription(descr) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.description = descr;\n      this.save();\n    },\n\n    setAssignedTo(ulist) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.notifyNew(this.assignedTo, ulist);\n      this.assignedTo = ulist;\n      this.save();\n    },\n\n    setMentors(ulist) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.notifyNew(this.mentors, ulist);\n      this.mentors = ulist;\n      this.save();\n    },\n\n    setAdmins(ulist) {\n      //admins only\n      if (!this.userIsAdmin()) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n\n      this.notifyNew(this.admins, ulist);\n      this.admins = ulist;\n      this.save();\n    },\n\n    getUserFullName(userId) {\n      const invocation = DDP._CurrentInvocation.get();\n\n      if (invocation.isSimulation) {\n        return \"George\";\n      }\n\n      let u = User.findOne({\n        _id: userId\n      });\n\n      if (!u) {\n        return \"Michael\";\n      }\n\n      let name = u.MyProfile.firstName + \" \" + u.MyProfile.lastName;\n      return name;\n    },\n\n    updateFromObj(updObj) {\n      let permError = false;\n\n      for (let fld in updObj) {\n        if (this[fld] !== updObj[fld] || Array.isArray(updObj[fld]) && _.isEqual(this[fld], updObj[fld])) {\n          if (this.hasModifyPerm(fld)) {\n            if (fld === \"assignedTo\" || fld === \"mentors\" || fld === \"admins\") {\n              this.notifyNew(this[fld], updObj[fld]);\n            }\n\n            this[fld] = updObj[fld];\n          } else {\n            permError = true;\n          }\n        }\n      }\n\n      this.save();\n\n      if (permError) {\n        throw new Meteor.Error(403, \"You are not authorized\");\n      }\n    }\n\n  }\n});","map":{"version":3,"sources":["imports/api/individual_goals/individual_goals.js"],"names":["module","export","IndividualGoal","Meteor","watch","require","v","Mongo","User","Class","Enum","UserNotify","GoalComment","create","name","collection","Collection","fields","userId","type","String","default","title","description","parentId","assignedToStr","transient","reachedDate","Date","optional","startDate","dueDate","reviewDate","reviewedOnDate","goalComments","reviewComments","teamId","privacy","createdBy","behaviors","timestamp","helpers","getGoalRoleGroup","teamName","_id","userIsAdmin","Roles","userIsInRole","userIsMentor","userIsAssigned","setDateField","fieldName","rdate","getUserFullNameX","u","findOne","MyProfile","firstName","lastName","hasModifyPerm","notifyNew","oldList","newList","diffList","_","difference","i","length","add","body","action","events","beforeSave","e","meteorMethods","setDueDate","Error","save","setGoalReached","setReviewDate","setGoalReviewedOn","addComment","commentTxt","push","date","text","addReviewComment","createNewGoal","setTitle","setDescription","descr","setAssignedTo","ulist","assignedTo","setMentors","mentors","setAdmins","admins","getUserFullName","invocation","DDP","_CurrentInvocation","get","isSimulation","updateFromObj","updObj","permError","fld","Array","isArray","isEqual"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { User } from '../users/users.js';\nimport { Class, Enum } from 'meteor/jagi:astronomy';\nimport { UserNotify } from '/imports/api/user_notify/user_notify.js';\nimport { GoalComment } from '/imports/api/team_goals/team_goals.js';\n\nconst IndividualGoal = Class.create({\n    name: 'IndividualGoal',\n    collection: new Mongo.Collection('individual_goal'),\n    fields: {\n        userId: {\n            type: String,\n            default: ''\n        },\n        title: {\n            type: String,\n            default: ''\n        },\n        description: {\n            type: String,\n            default: ''\n        },\n        parentId: {\n            type: String,\n            default: ''\n        },\n        assignedToStr: {\n            type: String,\n            transient: true\n        },\n        reachedDate: {\n            type: Date,\n            optional: true\n        },\n        startDate: {\n            type: Date,\n            optional: true\n        },\n        dueDate: {\n            type: Date,\n            optional: true\n        },\n        reviewDate: {\n            type: Date,\n            optional: true\n        },\n        reviewedOnDate: {\n            type: Date,\n            optional: true\n        },\n        goalComments: {\n            type: [GoalComment],\n            default: []\n        },\n        reviewComments: {\n            type: [GoalComment],\n            default: []\n        },\n        teamId: {\n            type: String,\n            default: \"\"\n        },\n        privacy: {\n            type: String,\n            default: 'private'\n        },\n        createdBy: {\n            type: String,\n            default: ''\n        }\n    },\n    behaviors: {\n        timestamp: {}\n    },\n    helpers: {\n        getGoalRoleGroup() {\n            return this.teamName + '+' + this._id;\n        },\n        userIsAdmin() {\n            if (\n              Roles.userIsInRole(Meteor.userId(), 'admin', this.teamName)\n             ||\n              Roles.userIsInRole(Meteor.userId(), 'admin', this.getGoalRoleGroup())\n            ) {\n                //user is either a global admin, a team admin, or a goal admin\n                return true;\n            } else {\n                return false;\n            }\n        },\n        userIsMentor() {\n            if (\n                Roles.userIsInRole(Meteor.userId(), 'mentor', this.getGoalRoleGroup())\n            ) {\n                //user is a mentor for this goal\n                return true;\n            } else {\n                return false;\n            }\n        },\n        userIsAssigned() {\n            if (\n                Roles.userIsInRole(Meteor.userId(), 'assigned', this.getGoalRoleGroup())\n            ) {\n                //user is assigned to this goal\n                return true;\n            } else {\n                return false;\n            }\n        },\n        setDateField(fieldName, rdate) {\n            if ( typeof rdate === \"undefined\") {\n                rdate = new Date();\n            } else if ( !(rdate instanceof Date) ) {\n                return false;\n            }\n            this[fieldName] = rdate;\n            return true;\n        },\n        getUserFullNameX(userId) {\n            let u = User.findOne( {_id: userId} );\n            if (!u) {\n                return \"Michael\";\n            }\n            let name = u.MyProfile.firstName + \" \" + u.MyProfile.lastName;\n            return name;\n        },\n        hasModifyPerm(fieldName) {\n            switch (fieldName) {\n            //admins-only fields\n            case 'dueDate':\n            case 'startDate':\n            case 'reachedDate':\n            case 'reviewDate':\n            case 'title':\n            case 'description':\n            case 'assignedTo':\n            case 'mentors':\n            case 'admins':\n            case 'subgoals':\n                return this.userIsAdmin();\n                break;\n            //admins and mentors\n            case 'reviewedOnDate':\n            case 'reviewComments':\n                return this.userIsAdmin() || this.userIsMentor();\n                break;\n            //anyone assigned to the goal\n            case 'goalComments':\n                return this.userIsAdmin() || this.userIsMentor() || this.userIsAssigned();\n                break;\n            case 'teamId':\n            case 'privacy':\n                return true;\n                break;\n            default:\n                return false;\n                break;\n            }\n        },\n        notifyNew(oldList,newList) {\n            let diffList = _.difference(newList,oldList);\n            for (let i = 0; i < diffList.length; i++) {\n                UserNotify.add({\n                    userId: diffList[i],\n                    title: 'Goals',\n                    body: 'You have been added to goal '+this.title,\n                    action: 'teamgoals:'+this.teamName\n                });\n            }\n        }\n    },\n    events: {\n        beforeSave(e) {\n            /*\n            let egoal = e.currentTarget;\n\n            //any user added to a goal is automatically added to the 'view-goals' role for the team\n            //if they are already in that role, this should just ignore the redundant addUser\n            let flds = [\"assignedTo\",\"mentors\",\"admins\"];\n            for (let i in flds) {\n                if (Array.isArray(egoal[flds[i]]) && egoal[flds[i]].length > 0) {\n                    Roles.addUsersToRoles(egoal[flds[i]], 'view-goals', egoal.teamName);\n                }\n            }\n            */\n        },\n    },\n    meteorMethods: {\n        setDueDate(rdate) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            if ( this.setDateField(\"dueDate\", rdate) ) {\n                this.save();\n            } else {\n                throw new Meteor.Error(403, \"Invalid date\");\n            }\n        },\n        setGoalReached(rdate) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            if ( this.setDateField(\"reachedDate\", rdate) ) {\n                this.save();\n            } else {\n                throw new Meteor.Error(403, \"Invalid date\");\n            }\n        },\n        setReviewDate(rdate) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            if ( this.setDateField(\"reviewDate\", rdate) ) {\n                this.save();\n            } else {\n                throw new Meteor.Error(403, \"Invalid date\");\n            }\n        },\n        setGoalReviewedOn(rdate) {\n            //mentors and admins\n            if ( !this.userIsAdmin() && !this.userIsMentor()) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            if ( this.setDateField(\"reviewedOnDate\", rdate) ) {\n                this.save();\n            } else {\n                throw new Meteor.Error(403, \"Invalid date\");\n            }\n        },\n        addComment(commentTxt) {\n            //mentors, admins, and assignees\n            if ( !this.userIsAdmin() && !this.userIsMentor() && !this.userIsAssigned() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            this.goalComments.push(\n                new GoalComment( {\n                    userId: Meteor.userId(),\n                    date: new Date(),\n                    text: commentTxt,\n                } )\n            );\n            this.save();\n        },\n        addReviewComment(commentTxt) {\n            //mentors and admins\n            if ( !this.userIsAdmin() && !this.userIsMentor() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            this.reviewComments.push(\n                new GoalComment( {\n                    userId: Meteor.userId(),\n                    date: new Date(),\n                    text: commentTxt,\n                } )\n            );\n            this.save();\n        },\n        createNewGoal() {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            //\n        },\n        setTitle(title) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            this.title = title;\n            this.save();\n        },\n        setDescription(descr) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            this.description = descr;\n            this.save();\n        },\n        setAssignedTo(ulist) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            this.notifyNew(this.assignedTo,ulist);\n            this.assignedTo = ulist;\n            this.save();\n        },\n        setMentors(ulist) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n            this.notifyNew(this.mentors,ulist);\n            this.mentors = ulist;\n            this.save();\n        },\n        setAdmins(ulist) {\n            //admins only\n            if ( !this.userIsAdmin() ) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n\n            this.notifyNew(this.admins,ulist);\n            this.admins = ulist;\n            this.save();\n        },\n        getUserFullName(userId) {\n            const invocation = DDP._CurrentInvocation.get();\n            if (invocation.isSimulation) {\n                return \"George\";\n            }\n            let u = User.findOne( {_id: userId} );\n            if (!u) {\n                return \"Michael\";\n            }\n            let name = u.MyProfile.firstName + \" \" + u.MyProfile.lastName;\n            return name;\n        },\n        updateFromObj(updObj) {\n            let permError = false;\n\n            for (let fld in updObj) {\n                if (\n                  this[fld] !== updObj[fld] ||\n                  (Array.isArray(updObj[fld]) && _.isEqual(this[fld], updObj[fld]))\n                ) {\n                    if (this.hasModifyPerm(fld)) {\n                        if (fld === \"assignedTo\" || fld === \"mentors\" || fld === \"admins\") {\n                            this.notifyNew(this[fld],updObj[fld]);\n                        }\n                        this[fld] = updObj[fld];\n                    } else {\n                        permError = true;\n                    }\n                }\n            }\n            this.save();\n            if (permError) {\n                throw new Meteor.Error(403, \"You are not authorized\");\n            }\n        }\n    }\n});\n\nexport { IndividualGoal };\n"]},"sourceType":"script","hash":"4960b003c7c7abff1e84d8c504dcaa658ef072f1"}
