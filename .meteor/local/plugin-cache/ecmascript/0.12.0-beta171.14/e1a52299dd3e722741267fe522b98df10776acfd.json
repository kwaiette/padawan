{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\storage\\utils\\class_update.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/modules/storage/utils/class_update.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\storage\\utils\\class_update.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","presets":[],"generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\storage\\utils\\class_update.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/modules/storage/utils/class_update.js"}},"code":"let _extend;\n\nmodule.watch(require(\"lodash/extend\"), {\n  default(v) {\n    _extend = v;\n  }\n\n}, 0);\n\nlet _mapKeys;\n\nmodule.watch(require(\"lodash/mapKeys\"), {\n  default(v) {\n    _mapKeys = v;\n  }\n\n}, 1);\nlet AstroClass;\nmodule.watch(require(\"../../../core/class.js\"), {\n  default(v) {\n    AstroClass = v;\n  }\n\n}, 2);\nlet alreadyInSimulation;\nmodule.watch(require(\"./already_in_simulation.js\"), {\n  default(v) {\n    alreadyInSimulation = v;\n  }\n\n}, 3);\nlet throwIfSelectorIsNotId;\nmodule.watch(require(\"./throw_if_selector_is_not_id.js\"), {\n  default(v) {\n    throwIfSelectorIsNotId = v;\n  }\n\n}, 4);\nlet documentUpdate;\nmodule.watch(require(\"./document_update.js\"), {\n  default(v) {\n    documentUpdate = v;\n  }\n\n}, 5);\nlet applyModifier;\nmodule.watch(require(\"./apply_modifier.js\"), {\n  default(v) {\n    applyModifier = v;\n  }\n\n}, 6);\nlet Minimongo;\nmodule.watch(require(\"meteor/minimongo\"), {\n  Minimongo(v) {\n    Minimongo = v;\n  }\n\n}, 7);\n\nfunction classUpdate(args = {}) {\n  const {\n    className,\n    selector,\n    modifier,\n    options,\n    stopOnFirstError,\n    fields,\n    simulation = true,\n    trusted = false\n  } = args; // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n\n  if (!simulation && !Meteor.isServer) {\n    return;\n  } // Throw exception if we are trying to perform an operation on more than one\n  // document at once and it's not trusted call.\n\n\n  if (!trusted && !alreadyInSimulation()) {\n    throwIfSelectorIsNotId(selector, 'update');\n  }\n\n  const Class = AstroClass.get(className); // Get all documents matching selector.\n\n  let docs;\n  let oldDocs;\n\n  if (options.multi) {\n    docs = Class.find(selector, options); // Get all old documents in one batched query so that performance is\n    // improved when updating many documents. Map all documents to an object\n    // where properites are documents' IDs.\n\n    oldDocs = _mapKeys(Class.find(selector, _extend(options, {\n      defaults: false\n    })).fetch(), oldDoc => oldDoc._id);\n  } else {\n    docs = Class.find(selector, _extend(options, {\n      limit: 1\n    })); // Get all old documents in one batched query so that performance is\n    // improved when updating many documents. Map all documents to an object\n    // where properites are documents' IDs.\n\n    oldDocs = _mapKeys(Class.find(selector, _extend(options, {\n      limit: 1,\n      defaults: false\n    })).fetch(), oldDoc => oldDoc._id);\n  } // Create a minimongo matcher object to find array indexes on the projection\n  // operator use.\n\n\n  const matcher = new Minimongo.Matcher(selector); // Prepare result of the method execution.\n\n  let result = 0;\n  docs.forEach(doc => {\n    const oldDoc = oldDocs[doc._id]; // Use matcher to find array indexes in a given document that needs updating\n    // on the projection operator use.\n\n    let queryResult = matcher.documentMatches(doc); // Apply modifier.\n\n    applyModifier({\n      doc,\n      modifier,\n      options: queryResult.arrayIndices ? {\n        arrayIndices: queryResult.arrayIndices\n      } : {}\n    }); // Update a document.\n\n    result += documentUpdate({\n      doc,\n      stopOnFirstError,\n      simulation,\n      fields,\n      trusted,\n      oldDoc\n    });\n  });\n  return result;\n}\n\n;\nmodule.exportDefault(classUpdate);","map":{"version":3,"sources":["packages/jagi:astronomy/lib/modules/storage/utils/class_update.js"],"names":["_extend","module","watch","require","default","v","_mapKeys","AstroClass","alreadyInSimulation","throwIfSelectorIsNotId","documentUpdate","applyModifier","Minimongo","classUpdate","args","className","selector","modifier","options","stopOnFirstError","fields","simulation","trusted","Meteor","isServer","Class","get","docs","oldDocs","multi","find","defaults","fetch","oldDoc","_id","limit","matcher","Matcher","result","forEach","doc","queryResult","documentMatches","arrayIndices","exportDefault"],"mappings":"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","sourcesContent":["import _extend from 'lodash/extend';\nimport _mapKeys from 'lodash/mapKeys';\nimport AstroClass from '../../../core/class.js';\nimport alreadyInSimulation from './already_in_simulation.js';\nimport throwIfSelectorIsNotId from './throw_if_selector_is_not_id.js';\nimport documentUpdate from './document_update.js';\nimport applyModifier from './apply_modifier.js';\nimport { Minimongo } from 'meteor/minimongo';\n\nfunction classUpdate(args = {}) {\n  const {\n    className,\n    selector,\n    modifier,\n    options,\n    stopOnFirstError,\n    fields,\n    simulation = true,\n    trusted = false\n  } = args;\n\n  // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  // Throw exception if we are trying to perform an operation on more than one\n  // document at once and it's not trusted call.\n  if (!trusted && !alreadyInSimulation()) {\n    throwIfSelectorIsNotId(selector, 'update');\n  }\n\n  const Class = AstroClass.get(className);\n  // Get all documents matching selector.\n  let docs;\n  let oldDocs;\n  if (options.multi) {\n    docs = Class.find(selector, options);\n    // Get all old documents in one batched query so that performance is\n    // improved when updating many documents. Map all documents to an object\n    // where properites are documents' IDs.\n    oldDocs = _mapKeys(Class.find(selector, _extend(options, {\n      defaults: false\n    })).fetch(), oldDoc => oldDoc._id);\n  }\n  else {\n    docs = Class.find(selector, _extend(options, {\n      limit: 1\n    }));\n    // Get all old documents in one batched query so that performance is\n    // improved when updating many documents. Map all documents to an object\n    // where properites are documents' IDs.\n    oldDocs = _mapKeys(Class.find(selector, _extend(options, {\n      limit: 1,\n      defaults: false\n    })).fetch(), oldDoc => oldDoc._id);\n  }\n\n  // Create a minimongo matcher object to find array indexes on the projection\n  // operator use.\n  const matcher = new Minimongo.Matcher(selector);\n\n  // Prepare result of the method execution.\n  let result = 0;\n\n  docs.forEach((doc) => {\n    const oldDoc = oldDocs[doc._id];\n    // Use matcher to find array indexes in a given document that needs updating\n    // on the projection operator use.\n    let queryResult = matcher.documentMatches(doc);\n\n    // Apply modifier.\n    applyModifier({\n      doc,\n      modifier,\n      options: queryResult.arrayIndices ? {\n        arrayIndices: queryResult.arrayIndices\n      } : {}\n    });\n\n    // Update a document.\n    result += documentUpdate({\n      doc,\n      stopOnFirstError,\n      simulation,\n      fields,\n      trusted,\n      oldDoc\n    });\n  });\n\n  return result;\n};\n\nexport default classUpdate;"]},"sourceType":"script","hash":"e1a52299dd3e722741267fe522b98df10776acfd"}
