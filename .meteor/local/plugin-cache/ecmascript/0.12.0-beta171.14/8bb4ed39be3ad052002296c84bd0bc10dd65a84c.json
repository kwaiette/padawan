{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\validators\\class_prototype_methods\\validate.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/modules/validators/class_prototype_methods/validate.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\validators\\class_prototype_methods\\validate.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\validators\\class_prototype_methods\\validate.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/modules/validators/class_prototype_methods/validate.js"}},"code":"let _defaults;\n\nmodule.watch(require(\"lodash/defaults\"), {\n  default(v) {\n    _defaults = v;\n  }\n\n}, 0);\n\nlet _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  default(v) {\n    _each = v;\n  }\n\n}, 1);\nlet castNested;\nmodule.watch(require(\"../../fields/utils/castNested\"), {\n  default(v) {\n    castNested = v;\n  }\n\n}, 2);\nlet documentValidate;\nmodule.watch(require(\"../utils/document_validate\"), {\n  default(v) {\n    documentValidate = v;\n  }\n\n}, 3);\nlet callMeteorMethod;\nmodule.watch(require(\"../../storage/utils/call_meteor_method\"), {\n  default(v) {\n    callMeteorMethod = v;\n  }\n\n}, 4);\n\nfunction validate() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let callback = arguments.length > 1 ? arguments[1] : undefined;\n  const doc = this;\n  const Class = doc.constructor;\n  const Collection = Class.getCollection();\n  let connection = Collection && Collection._connection;\n\n  if (!connection && (!Collection || !Collection._name)) {\n    connection = Meteor.connection;\n  } // If the first argument is callback function then reassign values.\n\n\n  if (arguments.length === 1 && Match.test(options, Function)) {\n    callback = options;\n    options = {};\n  } // Set default options.\n\n\n  _defaults(options, {\n    fields: Class.getValidationOrder(),\n    modified: false,\n    stopOnFirstError: true,\n    simulation: true\n  }); // If a fields property is a string then put it into array.\n\n\n  if (Match.test(options.fields, String)) {\n    options.fields = [options.fields];\n  } // Cast all fields.\n\n\n  if (options.cast) {\n    _each(Class.getFields(), field => {\n      doc[field.name] = field.castValue(doc[field.name], {\n        clone: false,\n        cast: true\n      });\n    });\n  } // Cast only nested fields.\n  else {\n      castNested({\n        doc,\n        options: {\n          clone: false\n        }\n      });\n    } // Prepare arguments for meteor method and utility.\n\n\n  let methodArgs = {\n    doc,\n    fields: options.fields,\n    modified: options.modified,\n    stopOnFirstError: options.stopOnFirstError,\n    simulation: options.simulation\n  }; // If we are dealing with a remote collection and we are not on the server.\n\n  if (connection && connection !== Meteor.server) {\n    // Prepare arguments for meteor method.\n    let methodName = '/Astronomy/validate';\n\n    try {\n      // Run Meteor method.\n      return callMeteorMethod(Class, methodName, [methodArgs], callback);\n    } // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n\n      throw err;\n    }\n  } // If we can just validate a document without calling the meteor method. We\n  // may be on the server or the collection may be local.\n\n\n  try {\n    // Validate a document.\n    let result = documentValidate(methodArgs);\n\n    if (callback) {\n      callback();\n    }\n\n    return result;\n  } catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n\n    throw err;\n  }\n}\n\nmodule.exportDefault(validate);","map":{"version":3,"sources":["packages/jagi:astronomy/lib/modules/validators/class_prototype_methods/validate.js"],"names":["_defaults","module","watch","require","default","v","_each","castNested","documentValidate","callMeteorMethod","validate","options","callback","doc","Class","constructor","Collection","getCollection","connection","_connection","_name","Meteor","arguments","length","Match","test","Function","fields","getValidationOrder","modified","stopOnFirstError","simulation","String","cast","getFields","field","name","castValue","clone","methodArgs","server","methodName","err","result","exportDefault"],"mappings":"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","sourcesContent":["import _defaults from 'lodash/defaults';\nimport _each from 'lodash/each';\nimport castNested from '../../fields/utils/castNested';\nimport documentValidate from '../utils/document_validate';\nimport callMeteorMethod from '../../storage/utils/call_meteor_method';\n\nfunction validate(options = {}, callback) {\n  const doc = this;\n  const Class = doc.constructor;\n  const Collection = Class.getCollection();\n  let connection = Collection && Collection._connection;\n  if (!connection && (!Collection || !Collection._name)) {\n    connection = Meteor.connection;\n  }\n\n  // If the first argument is callback function then reassign values.\n  if (arguments.length === 1 && Match.test(options, Function)) {\n    callback = options;\n    options = {};\n  }\n\n  // Set default options.\n  _defaults(options, {\n    fields: Class.getValidationOrder(),\n    modified: false,\n    stopOnFirstError: true,\n    simulation: true\n  });\n\n  // If a fields property is a string then put it into array.\n  if (Match.test(options.fields, String)) {\n    options.fields = [options.fields];\n  }\n\n  // Cast all fields.\n  if (options.cast) {\n    _each(Class.getFields(), (field) => {\n      doc[field.name] = field.castValue(doc[field.name], {\n        clone: false,\n        cast: true\n      });\n    });\n  }\n  // Cast only nested fields.\n  else {\n    castNested({\n      doc,\n      options: {\n        clone: false\n      }\n    });\n  }\n\n  // Prepare arguments for meteor method and utility.\n  let methodArgs = {\n    doc,\n    fields: options.fields,\n    modified: options.modified,\n    stopOnFirstError: options.stopOnFirstError,\n    simulation: options.simulation,\n  };\n\n  // If we are dealing with a remote collection and we are not on the server.\n  if (connection && connection !== Meteor.server) {\n    // Prepare arguments for meteor method.\n    let methodName = '/Astronomy/validate';\n\n    try {\n      // Run Meteor method.\n      return callMeteorMethod(\n        Class, methodName, [methodArgs], callback\n      );\n    }\n    // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n      throw err;\n    }\n  }\n\n  // If we can just validate a document without calling the meteor method. We\n  // may be on the server or the collection may be local.\n  try {\n    // Validate a document.\n    let result = documentValidate(methodArgs);\n    if (callback) {\n      callback();\n    }\n    return result;\n  }\n  catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n    throw err;\n  }\n}\n\nexport default validate;"]},"sourceType":"script","hash":"8bb4ed39be3ad052002296c84bd0bc10dd65a84c"}
