{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\ui\\components\\questions\\questions.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/ui/components/questions/questions.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\ui\\components\\questions\\questions.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\ui\\components\\questions\\questions.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/components/questions/questions.js"}},"code":"var Question;\nmodule.watch(require(\"/imports/api/questions/questions.js\"), {\n  Question: function (v) {\n    Question = v;\n  }\n}, 0);\nvar User, Profile, UserType, MyersBriggs, Answer;\nmodule.watch(require(\"/imports/api/users/users.js\"), {\n  User: function (v) {\n    User = v;\n  },\n  Profile: function (v) {\n    Profile = v;\n  },\n  UserType: function (v) {\n    UserType = v;\n  },\n  MyersBriggs: function (v) {\n    MyersBriggs = v;\n  },\n  Answer: function (v) {\n    Answer = v;\n  }\n}, 1);\nvar Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor: function (v) {\n    Meteor = v;\n  }\n}, 2);\nmodule.watch(require(\"./questions.html\"));\nvar minQuestionsAnswered = 72;\nTemplate.questions.onCreated(function () {\n  var _this = this;\n\n  if (this.data.userId) {\n    this.userId = this.data.userId;\n  } else {\n    this.userId = Meteor.userId();\n  }\n\n  this.autorun(function () {\n    console.log(\"autorunning...\");\n    _this.subscription = _this.subscribe('questions.toanswer', Meteor.userId(), Session.get('refreshQuestions'), {\n      onStop: function () {\n        console.log(\"Subscription stopped! \", arguments, this);\n      },\n      onReady: function () {\n        console.log(\"Subscription ready! \", arguments, this);\n      }\n    });\n    console.log(_this.subscription);\n  });\n});\nTemplate.questions.helpers({\n  questions: function () {\n    var u = User.findOne({\n      _id: Template.instance().userId\n    });\n    var useg = u.MyProfile.segments;\n    var conditions = [{\n      segments: {\n        $exists: false\n      }\n    }, {\n      segments: {\n        $eq: []\n      }\n    }];\n\n    if (useg) {\n      conditions.push({\n        segments: {\n          $in: useg\n        }\n      });\n    }\n\n    if (!u) return [];\n    console.log(\"kkkkkkkkkkkkkkkk\", u);\n    return Question.find({\n      $or: conditions\n    });\n  },\n  reversed: function (index) {\n    return index % 2;\n  },\n  remainingMinQCount: function () {\n    var u = User.findOne({\n      _id: Template.instance().userId\n    });\n    console.log(u);\n    console.log(Template.instance().userId);\n    if (!u) return -1;\n    var rmn = Math.max(0, minQuestionsAnswered - u.MyProfile.UserType.AnsweredQuestions.length);\n    console.log(\"yyyyy\", minQuestionsAnswered, u.MyProfile.UserType.AnsweredQuestions.length, rmn); //let rmn = 0;\n\n    return rmn;\n  },\n  isRemainingGreaterThan: function (num) {\n    var u = User.findOne({\n      _id: Template.instance().userId\n    });\n    if (!u) return true;\n    var rmn = Math.max(0, minQuestionsAnswered - u.MyProfile.UserType.AnsweredQuestions.length);\n    return rmn > num;\n  },\n  getTemplate: function () {\n    //console.log(this.index, arguments, this);\n    return this.index % 2 ? Template.questionTemplate : Template.questionTemplateReversed;\n  },\n  answeredQuestionsLength: function () {\n    var u = User.findOne({\n      _id: Template.instance().userId\n    });\n    var length = u.MyProfile.UserType.AnsweredQuestions.length; //console.log(\"answeredQuestionsLengthhhhhhhhh\", length);\n\n    return length;\n  },\n  totalQuestions: function () {\n    var u = User.findOne({\n      _id: Template.instance().userId\n    }); //console.log(\"myUserID\", u._id);\n\n    var total = u.MyProfile.UserType.getTotalQuestions(); //console.log(\"preTotalQuestions\", total);\n\n    Meteor.call('question.countQuestions', u._id, function (error, result) {\n      if (error) {//console.log(\"EEERRR0r: \", error);\n      } else {\n        //success\n        //console.log(\"myUserID2\", u._id);\n        total = u.MyProfile.UserType.getTotalQuestions();\n        u.MyProfile.UserType.setTotalQuestions(total); //console.log(\"uiquestionsjstotal\", total);\n\n        document.getElementById(\"allQuestions\").innerHTML = \"Total questions: \" + result;\n      }\n    });\n    return total;\n  }\n});\nTemplate.questions.events({\n  'click button.answer-button': function (event, instance) {\n    event.preventDefault();\n    console.log('click button.answer-button => ', event, instance);\n    var target = event.target;\n    var parent = $(target).closest('div.answer-question');\n    var values = {\n      'questionId': parent.data('id'),\n      'value': parent.data('value'),\n      'isReversed': !!parent.data('reversed')\n    };\n    console.log(values);\n    Meteor.call('question.answer', values.questionId, values.value, values.isReversed, function (error) {\n      if (error) {\n        console.log(\"EEEEEERRRORRRRR: \", error);\n      } else {\n        parent.remove();\n\n        if ($('div.answer-question').length < 1) {\n          Session.set('refreshQuestions', Math.random());\n        }\n      }\n    });\n  }\n});\nTemplate.question.helpers({\n  getReadingsAsJSON: function (question) {\n    return JSON.stringify(question.Readings);\n  }\n});\nTemplate.question.onRendered(function () {\n  console.log(\"onRendered\", this);\n\n  var updateValue = function (elem, value) {\n    var parent = $(elem).data('value', value);\n    parent.find('div.left-option span.percent').html(Math.abs(Math.round(value) - 50) + \"%\");\n    parent.find('div.right-option span.percent').html(Math.round(value) + 50 + \"%\");\n    updateBGOpacity($(elem).find('.left-option'), 0.5 - value / 100);\n    updateBGOpacity($(elem).find('.right-option'), 0.5 + value / 100);\n    updateReading(parent, value);\n  };\n\n  var updateReading = function (elem, value) {\n    var readings = $(elem).data('readings');\n    var index = -1;\n    var curMax = value < 0 ? -100 : 100;\n    $.each(readings, function (i, reading) {\n      if (value < 0 && reading.Rank <= value && reading.Rank > curMax || value > 0 && reading.Rank >= value && reading.Rank < curMax) {\n        index = i;\n        curMax = reading.Rank;\n      }\n    });\n\n    if (index < 0) {\n      return;\n    }\n\n    $(elem).find('div.reading').html(readings[index].Text);\n  };\n\n  var updateBGOpacity = function (elem, value) {\n    var m;\n    m = $(elem).css('background-color').replace(/^rgba?\\(|\\s+|\\)$/g, '').split(',');\n    var btn = $(elem).parents('div.answer-question').find('button.answer-button');\n    var reading = $(elem).parents('div.answer-question').find('div.reading');\n    reading.css('visibility', 'visible');\n    btn.css('visibility', 'visible');\n\n    if (value > 0.5) {\n      $(elem).css('color', 'white');\n    } else if (value == 0.5) {\n      $(elem).css('color', 'Grey');\n      btn.css('visibility', 'hidden');\n      reading.css('visibility', 'hidden');\n      value = 0.1;\n    } else {\n      $(elem).css('color', 'black');\n    }\n\n    var newRGBA = \"rgba(\" + m[0] + \", \" + m[1] + \", \" + m[2] + \", \" + value + \")\";\n    $(elem).css('background-color', newRGBA); //console.log($(elem).css('background-color'), m, newRGBA, value);\n  };\n\n  $('.slider', this.firstNode).each(function () {\n    $(this).noUiSlider({\n      start: $(this).data('value'),\n      step: 1,\n      range: {\n        min: -50,\n        max: 50\n      }\n    }).on('slide', function (event, val) {\n      //console.log(arguments);\n      updateValue($(event.target).closest('.answer-question'), val);\n    }).on('set', function (event, val) {\n      updateValue($(event.target).closest('.answer-question'), val);\n    });\n    updateValue($(this).closest('.answer-question'), $(this).data('value'));\n  });\n});","map":{"version":3,"sources":["imports/ui/components/questions/questions.js"],"names":["Question","module","watch","require","v","User","Profile","UserType","MyersBriggs","Answer","Meteor","minQuestionsAnswered","Template","questions","onCreated","data","userId","autorun","console","log","subscription","subscribe","Session","get","onStop","arguments","onReady","helpers","u","findOne","_id","instance","useg","MyProfile","segments","conditions","$exists","$eq","push","$in","find","$or","reversed","index","remainingMinQCount","rmn","Math","max","AnsweredQuestions","length","isRemainingGreaterThan","num","getTemplate","questionTemplate","questionTemplateReversed","answeredQuestionsLength","totalQuestions","total","getTotalQuestions","call","error","result","setTotalQuestions","document","getElementById","innerHTML","events","event","preventDefault","target","parent","$","closest","values","questionId","value","isReversed","remove","set","random","question","getReadingsAsJSON","JSON","stringify","Readings","onRendered","updateValue","elem","html","abs","round","updateBGOpacity","updateReading","readings","curMax","each","i","reading","Rank","Text","m","css","replace","split","btn","parents","newRGBA","firstNode","noUiSlider","start","step","range","min","on","val"],"mappings":"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","sourcesContent":["import { Question } from '/imports/api/questions/questions.js';\nimport { User, Profile, UserType, MyersBriggs, Answer } from '/imports/api/users/users.js';\nimport { Meteor } from 'meteor/meteor';\nimport './questions.html';\n\nvar minQuestionsAnswered = 72;\n\nTemplate.questions.onCreated(function () {\n    if (this.data.userId) {\n        this.userId = this.data.userId;\n    } else {\n        this.userId = Meteor.userId();\n    }\n\n    this.autorun( () => { console.log(\"autorunning...\");\n        this.subscription = this.subscribe('questions.toanswer', Meteor.userId(), Session.get('refreshQuestions'), {\n            onStop: function () {\n                console.log(\"Subscription stopped! \", arguments, this);\n            }, onReady: function () {\n                console.log(\"Subscription ready! \", arguments, this);\n            }\n        });\n        console.log(this.subscription);\n    });\n});\n\nTemplate.questions.helpers({\n    questions() {\n        let u = User.findOne({_id:Template.instance().userId});\n        let useg = u.MyProfile.segments;\n        let conditions = [\n            {segments: {$exists:false}},\n            {segments: {$eq:[]}}\n        ];\n        if (useg) {\n            conditions.push({segments: {$in:useg}});\n        }\n        if (!u) return [];\n        console.log(\"kkkkkkkkkkkkkkkk\",u);\n        return Question.find( {$or: conditions} );\n    },\n    reversed(index) {\n        return index % 2;\n    },\n    remainingMinQCount() {\n        let u = User.findOne({_id:Template.instance().userId});\n        console.log(u);\n        console.log(Template.instance().userId);\n        if (!u) return -1;\n        let rmn = Math.max(0, (minQuestionsAnswered - u.MyProfile.UserType.AnsweredQuestions.length));\n        console.log(\"yyyyy\",minQuestionsAnswered, u.MyProfile.UserType.AnsweredQuestions.length, rmn);\n        //let rmn = 0;\n        return rmn;\n    },\n    isRemainingGreaterThan(num) {\n        let u = User.findOne({_id:Template.instance().userId});\n        if (!u) return true;\n        let rmn = Math.max(0, (minQuestionsAnswered - u.MyProfile.UserType.AnsweredQuestions.length));\n        return rmn > num;\n    },\n    getTemplate() { //console.log(this.index, arguments, this);\n        return (this.index % 2) ? Template.questionTemplate : Template.questionTemplateReversed;\n    },\n    answeredQuestionsLength() {\n        let u = User.findOne({_id:Template.instance().userId});\n        let length = u.MyProfile.UserType.AnsweredQuestions.length;\n        //console.log(\"answeredQuestionsLengthhhhhhhhh\", length);\n        return length\n    },\n    totalQuestions() {\n        let u = User.findOne({_id:Template.instance().userId});\n        //console.log(\"myUserID\", u._id);\n        let total = u.MyProfile.UserType.getTotalQuestions();\n        //console.log(\"preTotalQuestions\", total);\n        Meteor.call('question.countQuestions', u._id, (error, result) => {\n            if (error) {\n                //console.log(\"EEERRR0r: \", error);\n            } else {\n                //success\n                //console.log(\"myUserID2\", u._id);\n                total = u.MyProfile.UserType.getTotalQuestions();\n                u.MyProfile.UserType.setTotalQuestions(total);\n                //console.log(\"uiquestionsjstotal\", total);\n                document.getElementById(\"allQuestions\").innerHTML = \"Total questions: \" + result;\n            }\n        });\n        return total;\n    }\n});\n\nTemplate.questions.events({\n    'click button.answer-button'(event, instance) {\n        event.preventDefault();\n        console.log('click button.answer-button => ', event, instance);\n\n        const target = event.target;\n        const parent = $(target).closest('div.answer-question');\n        const values = {\n            'questionId':parent.data('id'),\n            'value':parent.data('value'),\n            'isReversed':!!parent.data('reversed')\n        };\n        console.log(values);\n\n        Meteor.call('question.answer', values.questionId, values.value, values.isReversed, (error) => {\n            if (error) {\n                console.log(\"EEEEEERRRORRRRR: \", error);\n            } else {\n                parent.remove();\n                if($('div.answer-question').length < 1) {\n                    Session.set('refreshQuestions', Math.random());\n                }\n            }\n        });\n    }\n});\nTemplate.question.helpers({\n    getReadingsAsJSON(question) {\n        return JSON.stringify(question.Readings);\n    }\n});\nTemplate.question.onRendered(function() {\n    console.log(\"onRendered\", this);\n    let updateValue = function(elem, value) {\n        let parent = $(elem).data('value', value);\n        parent.find('div.left-option span.percent').html(Math.abs(Math.round(value) - 50)+\"%\");\n        parent.find('div.right-option span.percent').html((Math.round(value) + 50)+\"%\");\n        updateBGOpacity($(elem).find('.left-option'), 0.5 - (value / 100));\n        updateBGOpacity($(elem).find('.right-option'), 0.5 + (value / 100));\n        updateReading(parent, value);\n    };\n    let updateReading = function(elem, value) {\n        let readings = $(elem).data('readings');\n        let index = -1;\n        let curMax = (value < 0 ? -100 : 100);\n        $.each(readings, function (i, reading) {\n            if((value < 0 && reading.Rank <= value && reading.Rank > curMax) || (value > 0 && reading.Rank >= value && reading.Rank < curMax)) {\n                index = i;\n                curMax = reading.Rank;\n            }\n        });\n        if(index < 0) { return; }\n        $(elem).find('div.reading').html(readings[index].Text);\n    };\n    let updateBGOpacity = function(elem, value) {\n        let m;\n        m = $(elem).css('background-color').replace(/^rgba?\\(|\\s+|\\)$/g,'').split(',');\n        let btn = $(elem).parents('div.answer-question').find('button.answer-button');\n        let reading = $(elem).parents('div.answer-question').find('div.reading');\n        reading.css('visibility', 'visible');\n        btn.css('visibility','visible');\n        if(value > 0.5) {\n            $(elem).css('color','white');\n        } else if(value == 0.5) {\n            $(elem).css('color','Grey');\n            btn.css('visibility','hidden');\n            reading.css('visibility','hidden');\n            value = 0.1;\n        } else {\n            $(elem).css('color','black');\n        }\n        let newRGBA = \"rgba(\"+m[0]+\", \"+m[1]+\", \"+m[2]+\", \"+value+\")\";\n        $(elem).css('background-color', newRGBA);\n        //console.log($(elem).css('background-color'), m, newRGBA, value);\n    }\n    $('.slider', this.firstNode).each(function () {\n        $(this).noUiSlider({\n            start: $(this).data('value'),\n            step:1,\n            range: {\n                min:-50,\n                max:50\n            }\n        }).on('slide', function(event, val){ //console.log(arguments);\n            updateValue($(event.target).closest('.answer-question'), val);\n        }).on('set', function(event, val){\n            updateValue($(event.target).closest('.answer-question'), val);\n        });\n        updateValue($(this).closest('.answer-question'), $(this).data('value'));\n    });\n});\n"]},"sourceType":"script","hash":"85d36abb1b0f23bb51736f4c84654ed5dd30177b"}
