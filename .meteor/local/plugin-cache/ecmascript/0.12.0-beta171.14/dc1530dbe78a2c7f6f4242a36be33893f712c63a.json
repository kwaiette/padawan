{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\methods\\utils\\wrapMethod.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/modules/methods/utils/wrapMethod.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\methods\\utils\\wrapMethod.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\methods\\utils\\wrapMethod.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/modules/methods/utils/wrapMethod.js"}},"code":"let _last;\n\nmodule.watch(require(\"lodash/last\"), {\n  default(v) {\n    _last = v;\n  }\n\n}, 0);\nlet callMeteorMethod;\nmodule.watch(require(\"../../storage/utils/call_meteor_method\"), {\n  default(v) {\n    callMeteorMethod = v;\n  }\n\n}, 1);\nlet rawAll;\nmodule.watch(require(\"../../fields/utils/rawAll\"), {\n  default(v) {\n    rawAll = v;\n  }\n\n}, 2);\n\nfunction wrapMethod(methodName) {\n  return function () {\n    const doc = this;\n    const Class = doc.constructor; // Get the last argument.\n\n    for (var _len = arguments.length, methodArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      methodArgs[_key] = arguments[_key];\n    }\n\n    let callback = _last(methodArgs); // If the last argument is a callback function, then remove the last\n    // argument.\n\n\n    if (typeof callback === \"function\") {\n      methodArgs.pop();\n    } else {\n      // If the last argument is not a callback function, then clear the\n      // \"callback\" variable.\n      callback = undefined;\n    } // Call the \"/Astronomy/execute\" method.\n\n\n    return doc.applyMethod(methodName, methodArgs, callback);\n  };\n}\n\nmodule.exportDefault(wrapMethod);","map":{"version":3,"sources":["packages/jagi:astronomy/lib/modules/methods/utils/wrapMethod.js"],"names":["_last","module","watch","require","default","v","callMeteorMethod","rawAll","wrapMethod","methodName","doc","Class","constructor","methodArgs","callback","pop","undefined","applyMethod","exportDefault"],"mappings":"AAAA,IAAIA,KAAJ;;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACC,UAAQC,CAAR,EAAU;AAACL,YAAMK,CAAN;AAAQ;;AAApB,CAApC,EAA0D,CAA1D;AAA6D,IAAIC,gBAAJ;AAAqBL,OAAOC,KAAP,CAAaC,QAAQ,wCAAR,CAAb,EAA+D;AAACC,UAAQC,CAAR,EAAU;AAACC,uBAAiBD,CAAjB;AAAmB;;AAA/B,CAA/D,EAAgG,CAAhG;AAAmG,IAAIE,MAAJ;AAAWN,OAAOC,KAAP,CAAaC,QAAQ,2BAAR,CAAb,EAAkD;AAACC,UAAQC,CAAR,EAAU;AAACE,aAAOF,CAAP;AAAS;;AAArB,CAAlD,EAAyE,CAAzE;;AAI1M,SAASG,UAAT,CAAoBC,UAApB,EAAgC;AAC9B,SAAO,YAAwB;AAC7B,UAAMC,MAAM,IAAZ;AACA,UAAMC,QAAQD,IAAIE,WAAlB,CAF6B,CAI7B;;AAJ6B,sCAAZC,UAAY;AAAZA,gBAAY;AAAA;;AAK7B,QAAIC,WAAWd,MAAMa,UAAN,CAAf,CAL6B,CAM7B;AACA;;;AACA,QAAI,OAAOC,QAAP,KAAoB,UAAxB,EAAoC;AAClCD,iBAAWE,GAAX;AACD,KAFD,MAEO;AACL;AACA;AACAD,iBAAWE,SAAX;AACD,KAd4B,CAe7B;;;AACA,WAAON,IAAIO,WAAJ,CAAgBR,UAAhB,EAA4BI,UAA5B,EAAwCC,QAAxC,CAAP;AACD,GAjBD;AAkBD;;AAvBDb,OAAOiB,aAAP,CAyBeV,UAzBf","sourcesContent":["import _last from \"lodash/last\";\nimport callMeteorMethod from \"../../storage/utils/call_meteor_method\";\nimport rawAll from \"../../fields/utils/rawAll\";\n\nfunction wrapMethod(methodName) {\n  return function(...methodArgs) {\n    const doc = this;\n    const Class = doc.constructor;\n\n    // Get the last argument.\n    let callback = _last(methodArgs);\n    // If the last argument is a callback function, then remove the last\n    // argument.\n    if (typeof callback === \"function\") {\n      methodArgs.pop();\n    } else {\n      // If the last argument is not a callback function, then clear the\n      // \"callback\" variable.\n      callback = undefined;\n    }\n    // Call the \"/Astronomy/execute\" method.\n    return doc.applyMethod(methodName, methodArgs, callback);\n  };\n}\n\nexport default wrapMethod;\n"]},"sourceType":"script","hash":"dc1530dbe78a2c7f6f4242a36be33893f712c63a"}
