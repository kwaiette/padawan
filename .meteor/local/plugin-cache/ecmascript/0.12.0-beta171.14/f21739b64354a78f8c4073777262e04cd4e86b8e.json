{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\validators\\utils\\parse_validators.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/modules/validators/utils/parse_validators.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\validators\\utils\\parse_validators.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","presets":[],"generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\validators\\utils\\parse_validators.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/modules/validators/utils/parse_validators.js"}},"code":"let _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  default(v) {\n    _each = v;\n  }\n\n}, 0);\n\nlet _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  default(v) {\n    _has = v;\n  }\n\n}, 1);\n\nlet _union;\n\nmodule.watch(require(\"lodash/union\"), {\n  default(v) {\n    _union = v;\n  }\n\n}, 2);\nlet throwParseError;\nmodule.watch(require(\"../../core/utils/throw_parse_error.js\"), {\n  default(v) {\n    throwParseError = v;\n  }\n\n}, 3);\nlet Validators;\nmodule.watch(require(\"../validators.js\"), {\n  default(v) {\n    Validators = v;\n  }\n\n}, 4);\nconst validatorsPattern = [{\n  type: String,\n  param: Match.Optional(Match.Any),\n  resolveParam: Match.Optional(Function),\n  message: Match.Optional(String),\n  resolveError: Match.Optional(Function)\n}];\n\nfunction parseValidators(validators, parseContext) {\n  // Validators list is an array of object that should include at least the\n  // \"type\" property.\n  if (validators && !Match.test(validators, validatorsPattern)) {\n    throwParseError(_union(parseContext, ['Validators definition has to be an array of objects']));\n  }\n\n  _each(validators, function (validator) {\n    // Check if a validator of a given type exists.\n    if (!_has(Validators, validator.type)) {\n      throwParseError(_union(parseContext, [`There is no \"${validator.type}\" validator`]));\n    }\n  });\n}\n\n;\nmodule.exportDefault(parseValidators);","map":{"version":3,"sources":["packages/jagi:astronomy/lib/modules/validators/utils/parse_validators.js"],"names":["_each","module","watch","require","default","v","_has","_union","throwParseError","Validators","validatorsPattern","type","String","param","Match","Optional","Any","resolveParam","Function","message","resolveError","parseValidators","validators","parseContext","test","validator","exportDefault"],"mappings":"AAAA,IAAIA,KAAJ;;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACC,UAAQC,CAAR,EAAU;AAACL,YAAMK,CAAN;AAAQ;;AAApB,CAApC,EAA0D,CAA1D;;AAA6D,IAAIC,IAAJ;;AAASL,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACC,UAAQC,CAAR,EAAU;AAACC,WAAKD,CAAL;AAAO;;AAAnB,CAAnC,EAAwD,CAAxD;;AAA2D,IAAIE,MAAJ;;AAAWN,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACC,UAAQC,CAAR,EAAU;AAACE,aAAOF,CAAP;AAAS;;AAArB,CAArC,EAA4D,CAA5D;AAA+D,IAAIG,eAAJ;AAAoBP,OAAOC,KAAP,CAAaC,QAAQ,uCAAR,CAAb,EAA8D;AAACC,UAAQC,CAAR,EAAU;AAACG,sBAAgBH,CAAhB;AAAkB;;AAA9B,CAA9D,EAA8F,CAA9F;AAAiG,IAAII,UAAJ;AAAeR,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACC,UAAQC,CAAR,EAAU;AAACI,iBAAWJ,CAAX;AAAa;;AAAzB,CAAzC,EAAoE,CAApE;AAMzV,MAAMK,oBAAoB,CAAC;AACzBC,QAAMC,MADmB;AAEzBC,SAAOC,MAAMC,QAAN,CAAeD,MAAME,GAArB,CAFkB;AAGzBC,gBAAcH,MAAMC,QAAN,CAAeG,QAAf,CAHW;AAIzBC,WAASL,MAAMC,QAAN,CAAeH,MAAf,CAJgB;AAKzBQ,gBAAcN,MAAMC,QAAN,CAAeG,QAAf;AALW,CAAD,CAA1B;;AAQA,SAASG,eAAT,CAAyBC,UAAzB,EAAqCC,YAArC,EAAmD;AACjD;AACA;AACA,MAAID,cAAc,CAACR,MAAMU,IAAN,CAAWF,UAAX,EAAuBZ,iBAAvB,CAAnB,EAA8D;AAC5DF,oBAAgBD,OACdgB,YADc,EACA,CAAC,qDAAD,CADA,CAAhB;AAGD;;AAEDvB,QAAMsB,UAAN,EAAkB,UAASG,SAAT,EAAoB;AACpC;AACA,QAAI,CAACnB,KAAKG,UAAL,EAAiBgB,UAAUd,IAA3B,CAAL,EAAuC;AACrCH,sBAAgBD,OACdgB,YADc,EACA,CAAE,gBAAeE,UAAUd,IAAK,aAAhC,CADA,CAAhB;AAGD;AACF,GAPD;AAQD;;AAAA;AA/BDV,OAAOyB,aAAP,CAiCeL,eAjCf","sourcesContent":["import _each from 'lodash/each';\nimport _has from 'lodash/has';\nimport _union from 'lodash/union';\nimport throwParseError from '../../core/utils/throw_parse_error.js';\nimport Validators from '../validators.js';\n\nconst validatorsPattern = [{\n  type: String,\n  param: Match.Optional(Match.Any),\n  resolveParam: Match.Optional(Function),\n  message: Match.Optional(String),\n  resolveError: Match.Optional(Function)\n}];\n\nfunction parseValidators(validators, parseContext) {\n  // Validators list is an array of object that should include at least the\n  // \"type\" property.\n  if (validators && !Match.test(validators, validatorsPattern)) {\n    throwParseError(_union(\n      parseContext, ['Validators definition has to be an array of objects']\n    ));\n  }\n\n  _each(validators, function(validator) {\n    // Check if a validator of a given type exists.\n    if (!_has(Validators, validator.type)) {\n      throwParseError(_union(\n        parseContext, [`There is no \"${validator.type}\" validator`]\n      ));\n    }\n  });\n};\n\nexport default parseValidators;"]},"sourceType":"script","hash":"f21739b64354a78f8c4073777262e04cd4e86b8e"}
