{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\fields\\utils\\rawOne.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/modules/fields/utils/rawOne.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\fields\\utils\\rawOne.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\fields\\utils\\rawOne.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/modules/fields/utils/rawOne.js"}},"code":"let _defaults;\n\nmodule.watch(require(\"lodash/defaults\"), {\n  default(v) {\n    _defaults = v;\n  }\n\n}, 0);\n\nlet _isArray;\n\nmodule.watch(require(\"lodash/isArray\"), {\n  default(v) {\n    _isArray = v;\n  }\n\n}, 1);\n\nlet _map;\n\nmodule.watch(require(\"lodash/map\"), {\n  default(v) {\n    _map = v;\n  }\n\n}, 2);\nlet AstroClass;\nmodule.watch(require(\"../../../core/class.js\"), {\n  default(v) {\n    AstroClass = v;\n  }\n\n}, 3);\nlet traverse;\nmodule.watch(require(\"./traverse.js\"), {\n  default(v) {\n    traverse = v;\n  }\n\n}, 4);\nlet rawAll;\nmodule.watch(require(\"./rawAll\"), {\n  default(v) {\n    rawAll = v;\n  }\n\n}, 5);\n\nfunction rawOne(doc, fieldName) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  // Prepare default options values.\n  _defaults(options, {\n    transient: true,\n    immutable: true,\n    // We still need the \"undefined\" options in the \"rawOne\" util, because we\n    // might want to get nested document that may have undefined fields.\n    undefined: true\n  });\n\n  return traverse(doc, fieldName, function (nestedDoc, nestedFieldName, field) {\n    // If a field does not exist than we don't return anything.\n    if (!field) {\n      return;\n    } // Don't get a transient field.\n\n\n    if (!options.transient && field.transient) {\n      return;\n    } // Don't get an immutable field.\n\n\n    if (!options.immutable && field.immutable) {\n      return;\n    } // Get field's value.\n\n\n    const fieldValue = nestedDoc[nestedFieldName];\n\n    if (fieldValue instanceof AstroClass) {\n      return rawAll(fieldValue, options);\n    } else if (_isArray(fieldValue)) {\n      return _map(fieldValue, function (element) {\n        if (element instanceof AstroClass) {\n          return rawAll(element, options);\n        } else {\n          return element;\n        }\n      });\n    } else {\n      return fieldValue;\n    }\n  });\n}\n\n;\nmodule.exportDefault(rawOne);","map":{"version":3,"sources":["packages/jagi:astronomy/lib/modules/fields/utils/rawOne.js"],"names":["_defaults","module","watch","require","default","v","_isArray","_map","AstroClass","traverse","rawAll","rawOne","doc","fieldName","options","transient","immutable","undefined","nestedDoc","nestedFieldName","field","fieldValue","element","exportDefault"],"mappings":"AAAA,IAAIA,SAAJ;;AAAcC,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACC,UAAQC,CAAR,EAAU;AAACL,gBAAUK,CAAV;AAAY;;AAAxB,CAAxC,EAAkE,CAAlE;;AAAqE,IAAIC,QAAJ;;AAAaL,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACC,UAAQC,CAAR,EAAU;AAACC,eAASD,CAAT;AAAW;;AAAvB,CAAvC,EAAgE,CAAhE;;AAAmE,IAAIE,IAAJ;;AAASN,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACC,UAAQC,CAAR,EAAU;AAACE,WAAKF,CAAL;AAAO;;AAAnB,CAAnC,EAAwD,CAAxD;AAA2D,IAAIG,UAAJ;AAAeP,OAAOC,KAAP,CAAaC,QAAQ,wBAAR,CAAb,EAA+C;AAACC,UAAQC,CAAR,EAAU;AAACG,iBAAWH,CAAX;AAAa;;AAAzB,CAA/C,EAA0E,CAA1E;AAA6E,IAAII,QAAJ;AAAaR,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAACC,UAAQC,CAAR,EAAU;AAACI,eAASJ,CAAT;AAAW;;AAAvB,CAAtC,EAA+D,CAA/D;AAAkE,IAAIK,MAAJ;AAAWT,OAAOC,KAAP,CAAaC,QAAQ,UAAR,CAAb,EAAiC;AAACC,UAAQC,CAAR,EAAU;AAACK,aAAOL,CAAP;AAAS;;AAArB,CAAjC,EAAwD,CAAxD;;AAO7Z,SAASM,MAAT,CAAgBC,GAAhB,EAAqBC,SAArB,EAA8C;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AAC5C;AACAd,YAAUc,OAAV,EAAmB;AACjBC,eAAW,IADM;AAEjBC,eAAW,IAFM;AAGjB;AACA;AACAC,eAAW;AALM,GAAnB;;AAQA,SAAOR,SACLG,GADK,EACAC,SADA,EAEL,UAASK,SAAT,EAAoBC,eAApB,EAAqCC,KAArC,EAA4C;AAC1C;AACA,QAAI,CAACA,KAAL,EAAY;AACV;AACD,KAJyC,CAM1C;;;AACA,QAAI,CAACN,QAAQC,SAAT,IAAsBK,MAAML,SAAhC,EAA2C;AACzC;AACD,KATyC,CAW1C;;;AACA,QAAI,CAACD,QAAQE,SAAT,IAAsBI,MAAMJ,SAAhC,EAA2C;AACzC;AACD,KAdyC,CAgB1C;;;AACA,UAAMK,aAAaH,UAAUC,eAAV,CAAnB;;AAEA,QAAIE,sBAAsBb,UAA1B,EAAsC;AACpC,aAAOE,OAAOW,UAAP,EAAmBP,OAAnB,CAAP;AACD,KAFD,MAGK,IAAIR,SAASe,UAAT,CAAJ,EAA0B;AAC7B,aAAOd,KAAKc,UAAL,EAAiB,UAASC,OAAT,EAAkB;AACxC,YAAIA,mBAAmBd,UAAvB,EAAmC;AACjC,iBAAOE,OAAOY,OAAP,EAAgBR,OAAhB,CAAP;AACD,SAFD,MAGK;AACH,iBAAOQ,OAAP;AACD;AACF,OAPM,CAAP;AAQD,KATI,MAUA;AACH,aAAOD,UAAP;AACD;AACF,GArCI,CAAP;AAuCD;;AAAA;AAxDDpB,OAAOsB,aAAP,CA0DeZ,MA1Df","sourcesContent":["import _defaults from 'lodash/defaults';\nimport _isArray from 'lodash/isArray';\nimport _map from 'lodash/map';\nimport AstroClass from '../../../core/class.js';\nimport traverse from './traverse.js';\nimport rawAll from './rawAll';\n\nfunction rawOne(doc, fieldName, options = {}) {\n  // Prepare default options values.\n  _defaults(options, {\n    transient: true,\n    immutable: true,\n    // We still need the \"undefined\" options in the \"rawOne\" util, because we\n    // might want to get nested document that may have undefined fields.\n    undefined: true\n  });\n\n  return traverse(\n    doc, fieldName,\n    function(nestedDoc, nestedFieldName, field) {\n      // If a field does not exist than we don't return anything.\n      if (!field) {\n        return;\n      }\n\n      // Don't get a transient field.\n      if (!options.transient && field.transient) {\n        return;\n      }\n\n      // Don't get an immutable field.\n      if (!options.immutable && field.immutable) {\n        return;\n      }\n\n      // Get field's value.\n      const fieldValue = nestedDoc[nestedFieldName];\n\n      if (fieldValue instanceof AstroClass) {\n        return rawAll(fieldValue, options);\n      }\n      else if (_isArray(fieldValue)) {\n        return _map(fieldValue, function(element) {\n          if (element instanceof AstroClass) {\n            return rawAll(element, options);\n          }\n          else {\n            return element;\n          }\n        });\n      }\n      else {\n        return fieldValue;\n      }\n    }\n  );\n};\n\nexport default rawOne;"]},"sourceType":"script","hash":"8df1566b60aa4ae57f83826a4021fdbc824af6d4"}
