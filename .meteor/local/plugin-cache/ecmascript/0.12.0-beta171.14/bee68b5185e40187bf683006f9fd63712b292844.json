{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\behaviors\\behavior.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/modules/behaviors/behavior.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\behaviors\\behavior.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\behaviors\\behavior.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/modules/behaviors/behavior.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _has;\n\nmodule.watch(require(\"lodash/has\"), {\n  \"default\": function (v) {\n    _has = v;\n  }\n}, 0);\n\nvar _extend;\n\nmodule.watch(require(\"lodash/extend\"), {\n  \"default\": function (v) {\n    _extend = v;\n  }\n}, 1);\nvar throwParseError;\nmodule.watch(require(\"../core/utils/throw_parse_error.js\"), {\n  \"default\": function (v) {\n    throwParseError = v;\n  }\n}, 2);\n\nvar checkDefinition = function (definition) {\n  // Check parameters validity.\n  if (!Match.test(definition, Object)) {\n    throwParseError(['Behavior definition has to be an object']);\n  } // Check if behavior name is provided and is a string.\n\n\n  if (!Match.test(definition.name, String)) {\n    throwParseError(['Behavior has to be named']);\n  } // Check if behavior with a given name already exists.\n\n\n  if (_has(Behavior.behaviors, definition.name)) {\n    throwParseError([{\n      'behavior': definition.name\n    }, 'Behavior already exists']);\n  }\n};\n\nvar Behavior =\n/*#__PURE__*/\nfunction () {\n  function Behavior(options) {\n    this.options = _extend({}, this.options, options);\n  }\n\n  var _proto = Behavior.prototype;\n\n  _proto.createClassDefinition = function () {\n    function createClassDefinition() {}\n\n    return createClassDefinition;\n  }();\n\n  _proto.apply = function () {\n    function apply(Class) {\n      var definition = this.createClassDefinition();\n\n      if (definition) {\n        Class.extend(definition);\n      }\n    }\n\n    return apply;\n  }();\n\n  Behavior.create = function () {\n    function create(definition) {\n      checkDefinition(definition); // Get behavior name.\n\n      var behaviorName = definition.name; // Extend the Behavior class.\n\n      var Behavior = this.behaviors[behaviorName] =\n      /*#__PURE__*/\n      function (_this) {\n        (0, _inheritsLoose2.default)(Behavior, _this);\n\n        function Behavior() {\n          return _this.apply(this, arguments) || this;\n        }\n\n        return Behavior;\n      }(this); // Store definition in behavior class.\n\n\n      Behavior.definition = definition; // Extend prototype with a definition.\n\n      _extend(Behavior.prototype, definition);\n\n      return Behavior;\n    }\n\n    return create;\n  }();\n\n  Behavior.get = function () {\n    function get(behaviorName) {\n      return this.behaviors[behaviorName];\n    }\n\n    return get;\n  }();\n\n  Behavior.has = function () {\n    function has(behaviorName) {\n      return _has(this.behaviors, behaviorName);\n    }\n\n    return has;\n  }();\n\n  return Behavior;\n}();\n\n;\nBehavior.behaviors = {};\nmodule.exportDefault(Behavior);","map":{"version":3,"sources":["packages/jagi:astronomy/lib/modules/behaviors/behavior.js"],"names":["_has","module","watch","require","v","_extend","throwParseError","checkDefinition","definition","Match","test","Object","name","String","Behavior","behaviors","options","createClassDefinition","apply","Class","extend","create","behaviorName","prototype","get","has","exportDefault"],"mappings":";;;;AAAA,IAAIA,IAAJ;;AAASC,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAAA,uBAASC,CAAT,EAAW;AAACJ,WAAKI,CAAL;AAAO;AAAnB,CAAnC,EAAwD,CAAxD;;AAA2D,IAAIC,OAAJ;;AAAYJ,OAAOC,KAAP,CAAaC,QAAQ,eAAR,CAAb,EAAsC;AAAA,uBAASC,CAAT,EAAW;AAACC,cAAQD,CAAR;AAAU;AAAtB,CAAtC,EAA8D,CAA9D;AAAiE,IAAIE,eAAJ;AAAoBL,OAAOC,KAAP,CAAaC,QAAQ,oCAAR,CAAb,EAA2D;AAAA,uBAASC,CAAT,EAAW;AAACE,sBAAgBF,CAAhB;AAAkB;AAA9B,CAA3D,EAA2F,CAA3F;;AAIrK,IAAMG,kBAAkB,UAASC,UAAT,EAAqB;AAC3C;AACA,MAAI,CAACC,MAAMC,IAAN,CAAWF,UAAX,EAAuBG,MAAvB,CAAL,EAAqC;AACnCL,oBAAgB,CACd,yCADc,CAAhB;AAGD,GAN0C,CAQ3C;;;AACA,MAAI,CAACG,MAAMC,IAAN,CAAWF,WAAWI,IAAtB,EAA4BC,MAA5B,CAAL,EAA0C;AACxCP,oBAAgB,CACd,0BADc,CAAhB;AAGD,GAb0C,CAe3C;;;AACA,MAAIN,KAAKc,SAASC,SAAd,EAAyBP,WAAWI,IAApC,CAAJ,EAA+C;AAC7CN,oBAAgB,CAAC;AACb,kBAAYE,WAAWI;AADV,KAAD,EAGd,yBAHc,CAAhB;AAKD;AACF,CAvBD;;IAyBME,Q;;;AACJ,oBAAYE,OAAZ,EAAqB;AACnB,SAAKA,OAAL,GAAeX,QAAQ,EAAR,EAAY,KAAKW,OAAjB,EAA0BA,OAA1B,CAAf;AACD;;;;SAEDC,qB;qCAAwB,CAAE;;;;;SAE1BC,K;mBAAMC,K,EAAO;AACX,UAAIX,aAAa,KAAKS,qBAAL,EAAjB;;AACA,UAAIT,UAAJ,EAAgB;AACdW,cAAMC,MAAN,CAAaZ,UAAb;AACD;AACF;;;;;WAEMa,M;oBAAOb,U,EAAY;AACxBD,sBAAgBC,UAAhB,EADwB,CAGxB;;AACA,UAAIc,eAAed,WAAWI,IAA9B,CAJwB,CAKxB;;AACA,UAAIE,WAAW,KAAKC,SAAL,CAAeO,YAAf;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,QAAsD,IAAtD,CAAf,CANwB,CAOxB;;;AACAR,eAASN,UAAT,GAAsBA,UAAtB,CARwB,CASxB;;AACAH,cAAQS,SAASS,SAAjB,EAA4Bf,UAA5B;;AAEA,aAAOM,QAAP;AACD;;;;;WAEMU,G;iBAAIF,Y,EAAc;AACvB,aAAO,KAAKP,SAAL,CAAeO,YAAf,CAAP;AACD;;;;;WAEMG,G;iBAAIH,Y,EAAc;AACvB,aAAOtB,KAAK,KAAKe,SAAV,EAAqBO,YAArB,CAAP;AACD;;;;;;;;AACF;AAEDR,SAASC,SAAT,GAAqB,EAArB;AAnEAd,OAAOyB,aAAP,CAqEeZ,QArEf","sourcesContent":["import _has from 'lodash/has';\nimport _extend from 'lodash/extend';\nimport throwParseError from '../core/utils/throw_parse_error.js';\n\nconst checkDefinition = function(definition) {\n  // Check parameters validity.\n  if (!Match.test(definition, Object)) {\n    throwParseError([\n      'Behavior definition has to be an object'\n    ]);\n  }\n\n  // Check if behavior name is provided and is a string.\n  if (!Match.test(definition.name, String)) {\n    throwParseError([\n      'Behavior has to be named'\n    ]);\n  }\n\n  // Check if behavior with a given name already exists.\n  if (_has(Behavior.behaviors, definition.name)) {\n    throwParseError([{\n        'behavior': definition.name\n      },\n      'Behavior already exists'\n    ]);\n  }\n};\n\nclass Behavior {\n  constructor(options) {\n    this.options = _extend({}, this.options, options);\n  }\n\n  createClassDefinition() {}\n\n  apply(Class) {\n    let definition = this.createClassDefinition();\n    if (definition) {\n      Class.extend(definition);\n    }\n  }\n\n  static create(definition) {\n    checkDefinition(definition);\n\n    // Get behavior name.\n    let behaviorName = definition.name;\n    // Extend the Behavior class.\n    let Behavior = this.behaviors[behaviorName] = class Behavior extends this {};\n    // Store definition in behavior class.\n    Behavior.definition = definition;\n    // Extend prototype with a definition.\n    _extend(Behavior.prototype, definition);\n\n    return Behavior;\n  }\n\n  static get(behaviorName) {\n    return this.behaviors[behaviorName];\n  }\n\n  static has(behaviorName) {\n    return _has(this.behaviors, behaviorName);\n  }\n};\n\nBehavior.behaviors = {};\n\nexport default Behavior;"]},"sourceType":"script","hash":"bee68b5185e40187bf683006f9fd63712b292844"}
