{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\api\\users\\users.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/api/users/users.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\api\\users\\users.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\api\\users\\users.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/users/users.js"}},"code":"module.export({\n  User: function () {\n    return User;\n  },\n  Profile: function () {\n    return Profile;\n  },\n  UserType: function () {\n    return UserType;\n  },\n  MyersBriggs: function () {\n    return MyersBriggs;\n  },\n  Answer: function () {\n    return Answer;\n  }\n});\nvar Class;\nmodule.watch(require(\"meteor/jagi:astronomy\"), {\n  Class: function (v) {\n    Class = v;\n  }\n}, 0);\nvar check;\nmodule.watch(require(\"meteor/check\"), {\n  check: function (v) {\n    check = v;\n  }\n}, 1);\nvar MyersBriggsCategory, Question;\nmodule.watch(require(\"../questions/questions.js\"), {\n  MyersBriggsCategory: function (v) {\n    MyersBriggsCategory = v;\n  },\n  Question: function (v) {\n    Question = v;\n  }\n}, 2);\nvar Category, CategoryManager;\nmodule.watch(require(\"../categories/categories.js\"), {\n  Category: function (v) {\n    Category = v;\n  },\n  CategoryManager: function (v) {\n    CategoryManager = v;\n  }\n}, 3);\nvar Defaults;\nmodule.watch(require(\"../../startup/both/defaults.js\"), {\n  Defaults: function (v) {\n    Defaults = v;\n  }\n}, 4);\nvar Team;\nmodule.watch(require(\"../teams/teams.js\"), {\n  Team: function (v) {\n    Team = v;\n  }\n}, 5);\nvar UserSegment;\nmodule.watch(require(\"../user_segments/user_segments.js\"), {\n  UserSegment: function (v) {\n    UserSegment = v;\n  }\n}, 6);\nvar MyersBriggsBit = Class.create({\n  name: 'MyersBriggsBit',\n  fields: {\n    Value: {\n      type: Number,\n      \"default\": 0\n    },\n    Totals: {\n      type: Number,\n      \"default\": 0\n    },\n    QuestionCount: {\n      type: Number,\n      \"default\": 0\n    }\n  },\n  helpers: {\n    addValue: function (value) {\n      this.Totals += value;\n      this.QuestionCount++;\n      this.Value = this.QuestionCount == 0 ? 0 : this.Totals / this.QuestionCount;\n    },\n    removeValue: function (value) {\n      this.QuestionCount--;\n\n      if (this.QuestionCount < 0) {\n        this.QuestionCount = 0;\n      }\n\n      if (this.QuestionCount == 0) {\n        this.Totals = this.Value = 0;\n        return;\n      }\n\n      this.Totals -= value;\n      this.Value = this.Totals / this.QuestionCount;\n    },\n    reset: function () {\n      this.Totals = 0;\n      this.QuestionCount = 0;\n      this.Value = 0;\n    }\n  }\n});\nvar MyersBriggs = Class.create({\n  name: 'MyersBriggs',\n  fields: {\n    IE: {\n      type: MyersBriggsBit,\n      \"default\": function () {\n        return new MyersBriggsBit();\n      }\n    },\n    NS: {\n      type: MyersBriggsBit,\n      \"default\": function () {\n        return new MyersBriggsBit();\n      }\n    },\n    TF: {\n      type: MyersBriggsBit,\n      \"default\": function () {\n        return new MyersBriggsBit();\n      }\n    },\n    JP: {\n      type: MyersBriggsBit,\n      \"default\": function () {\n        return new MyersBriggsBit();\n      }\n    }\n  },\n  helpers: {\n    addByCategory: function (category, value) {\n      console.log(category, value);\n      var name = this.getIdentifierById(category);\n      this[name].addValue(value);\n    },\n    removeByCategory: function (category, value) {\n      var name = this.getIdentifierById(category);\n      this[name].removeValue(value);\n    },\n    getIdentifierById: function (categoryId) {\n      if (categoryId === 0) {\n        return 'IE';\n      }\n\n      if (categoryId === 1) {\n        return 'NS';\n      }\n\n      if (categoryId === 2) {\n        return 'TF';\n      }\n\n      return 'JP';\n    },\n    getFourLetter: function () {\n      var IEL = this.IE.Value === 0 ? '_' : this.IE.Value < 0 ? 'I' : 'E';\n      var NSL = this.NS.Value === 0 ? '_' : this.NS.Value < 0 ? 'N' : 'S';\n      var TFL = this.TF.Value === 0 ? '_' : this.TF.Value < 0 ? 'T' : 'F';\n      var JPL = this.JP.Value === 0 ? '_' : this.JP.Value < 0 ? 'J' : 'P';\n      return \"\" + IEL + NSL + TFL + JPL;\n    },\n    reset: function () {\n      for (var i = 0; i < 4; i++) {\n        this[this.getIdentifierById(i)].reset();\n      }\n    }\n  }\n});\nvar Answer = Class.create({\n  name: 'Answer',\n  fields: {\n    Category: {\n      type: MyersBriggsCategory,\n      \"default\": 0\n    },\n    Categories: {\n      type: [MyersBriggsCategory],\n      \"default\": []\n    },\n    QuestionID: {\n      type: String,\n      \"default\": ''\n    },\n    Reversed: {\n      type: Boolean,\n      \"default\": false\n    },\n    Value: {\n      type: Number,\n      \"default\": 0\n    },\n    AnsweredAt: {\n      type: Date,\n      \"default\": function () {\n        return new Date();\n      }\n    }\n  },\n  helpers: {\n    getQuestion: function () {\n      var q = Question.findOne({\n        _id: this.QuestionID\n      });\n      return q;\n    },\n    unanswer: function () {\n      this.getQuestion().removeAnswer(this);\n    }\n  }\n});\nvar UserType = Class.create({\n  name: 'UserType',\n  fields: {\n    Personality: {\n      type: MyersBriggs,\n      \"default\": function () {\n        return new MyersBriggs();\n      }\n    },\n    AnsweredQuestions: {\n      type: [Answer],\n      \"default\": function () {\n        return [];\n      }\n    },\n    TotalQuestions: {\n      type: Number,\n      \"default\": 0\n    }\n  },\n  helpers: {\n    getAnsweredQuestionsIDs: function () {\n      var qids = [];\n\n      _.each(this.AnsweredQuestions, function (ans) {\n        qids.push(ans.QuestionID);\n      });\n\n      return qids;\n    },\n    setTotalQuestions: function (totalQuestions) {\n      //console.log(\"user.js totalQuestions\", totalQuestions);\n      this.TotalQuestions = totalQuestions; //console.log(\"user.js totalQuestions2\", this.TotalQuestions);\n    },\n    getTotalQuestions: function () {\n      return this.TotalQuestions;\n    },\n    answerQuestion: function (answer) {\n      this.AnsweredQuestions.push(answer);\n      console.log(this.AnsweredQuestions);\n      console.log(answer.Categories);\n      var contextThis = this;\n\n      _.each(answer.Categories, function (cat) {\n        contextThis.Personality.addByCategory(cat, answer.Value);\n      }); //this.Personality.addByCategory(answer.Category, answer.Value);\n\n    },\n    unAnswerQuestion: function (answer, skipSlice) {\n      var index = this.getAnswerIndexForQuestionID(answer.QuestionID);\n      var before = this.AnsweredQuestions.length;\n\n      if (index < 0) {\n        return;\n      }\n\n      console.log(index);\n\n      if (!skipSlice) {\n        if (index == 0) {\n          this.AnsweredQuestions.shift();\n        } else if (index == this.AnsweredQuestions.length - 1) {\n          this.AnsweredQuestions.pop();\n        } else {\n          this.AnsweredQuestions = this.AnsweredQuestions.slice(0, index).concat(this.AnsweredQuestions.slice(index + 1));\n        }\n      }\n\n      answer.unanswer();\n\n      _.each(answer.Categories, function (cat) {\n        this.Personality.removeByCategory(cat, answer.Value);\n      }); //this.Personality.removeByCategory(answer.Category, answer.Value);\n\n\n      console.log(\"User Answer Count: \" + before + \" => \" + this.AnsweredQuestions.length);\n    },\n    getAnswerIndexForQuestionID: function (questionId) {\n      for (var i = 0; i < this.AnsweredQuestions.length; i++) {\n        if (this.AnsweredQuestions[i].QuestionID == questionId) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n    getAnswerForQuestion: function (questionId) {\n      return _.find(this.AnsweredQuestions, function (ans, i) {\n        return ans.QuestionID == questionId;\n      });\n    },\n    reset: function () {\n      var self = this;\n\n      _.each(this.AnsweredQuestions, function (ans) {\n        self.unAnswerQuestion(ans, true);\n      });\n\n      this.Personality.reset();\n      this.AnsweredQuestions = [];\n    }\n  }\n});\nvar DashboardPane = Class.create({\n  name: 'DashboardPane',\n  fields: {\n    size: {\n      type: Number,\n      \"default\": 4\n    },\n    name: {\n      type: String,\n      \"default\": 'App_home'\n    },\n    title: {\n      type: String,\n      \"default\": 'Personality Questions'\n    },\n    route: {\n      type: String,\n      \"default\": '/'\n    }\n  }\n});\nvar Profile = Class.create({\n  name: 'Profile',\n  fields: {\n    firstName: {\n      type: String,\n      validators: [{\n        type: 'minLength',\n        param: 2\n      }]\n    },\n    lastName: {\n      type: String,\n      validators: [{\n        type: 'minLength',\n        param: 2\n      }]\n    },\n    UserType: {\n      type: UserType,\n      \"default\": function () {\n        return new UserType();\n      }\n    },\n    gender: {\n      type: Boolean,\n      \"default\": false\n    },\n    birthDate: {\n      type: Date,\n      optional: true\n    },\n    Categories: {\n      type: CategoryManager,\n      \"default\": function () {\n        return CategoryManager.OfType(\"User\");\n      }\n    },\n    dashboardPanes: {\n      type: [DashboardPane],\n      \"default\": []\n    },\n    segments: {\n      type: [String],\n      \"default\": []\n    }\n  },\n  helpers: {\n    calculateAge: function () {\n      if (this.birthDate) {\n        var diff = Date.now() - this.birthDate.getTime();\n        this.age = Math.abs(new Date(diff).getUTCFullYear() - 1970);\n      }\n    },\n    fullName: function (param) {\n      var fullName = this.firstName + ' ' + this.lastName;\n\n      if (param === 'lower') {\n        return fullName.toLowerCase();\n      } else if (param === 'upper') {\n        return fullName.toUpperCase();\n      }\n\n      return fullName;\n    }\n  }\n});\nvar User = Class.create({\n  name: 'User',\n  collection: Meteor.users,\n  fields: {\n    createdAt: Date,\n    emails: {\n      type: [Object],\n      \"default\": function () {\n        return [];\n      }\n    },\n    MyProfile: {\n      type: Profile,\n      \"default\": function () {\n        return new Profile();\n      }\n    },\n    teams: {\n      type: [String],\n      \"default\": function () {\n        return [Team.Default.Name];\n      }\n    },\n    roles: {\n      type: Object\n    }\n  },\n  resolveError: function (_ref) {\n    var nestedName = _ref.nestedName,\n        validator = _ref.validator;\n    console.log(nestedName, validator);\n  },\n  events: {\n    afterInit: function (e) {\n      e.target.MyProfile.calculateAge();\n    },\n    beforeSave: function (e) {\n      if (e.currentTarget.MyProfile.Categories.length() === 0) {\n        e.currentTarget.MyProfile.Categories.addCategory(Category.Default);\n      }\n\n      if (e.currentTarget.teams.length === 0) {\n        e.currentTarget.addTeam(Team.Default.Name);\n      }\n    }\n  },\n  meteorMethods: {\n    create: function () {\n      return this.save();\n    },\n    changeName: function (firstName, lastName) {\n      check(firstName, String);\n      check(lastName, String);\n      this.MyProfile.firstName = firstName;\n      this.MyProfile.lastName = lastName;\n      return this.save();\n    },\n    fullName: function (param) {\n      return this.MyProfile.fullName(param);\n    },\n    addTeam: function (teamName) {\n      var teamDoc = Team.findOne({\n        \"Name\": teamName\n      });\n\n      if (typeof teamDoc !== \"undefined\") {\n        teamDoc.addUsers(this._id);\n      } else {\n        return false;\n      }\n    },\n    profileUpdate: function (uprofile) {\n      check(uprofile.firstName, String);\n      check(uprofile.lastName, String);\n      check(uprofile.gender, Boolean);\n      this.MyProfile.firstName = uprofile.firstName;\n      this.MyProfile.lastName = uprofile.lastName;\n      this.MyProfile.gender = uprofile.gender;\n      this.MyProfile.segments = uprofile.segments;\n\n      if (\"\" !== uprofile.birthDate) {\n        this.MyProfile.birthDate = new Date(uprofile.birthDate);\n      }\n\n      return this.save();\n    }\n  },\n  indexes: {},\n  behaviors: {\n    slug: {\n      fieldName: 'email'\n    },\n    timestamp: {}\n  }\n});\n\nif (Meteor.isServer) {\n  User.extend({\n    fields: {\n      services: Object\n    }\n  });\n}","map":{"version":3,"sources":["imports/api/users/users.js"],"names":["module","export","User","Profile","UserType","MyersBriggs","Answer","Class","watch","require","v","check","MyersBriggsCategory","Question","Category","CategoryManager","Defaults","Team","UserSegment","MyersBriggsBit","create","name","fields","Value","type","Number","Totals","QuestionCount","helpers","addValue","value","removeValue","reset","IE","NS","TF","JP","addByCategory","category","console","log","getIdentifierById","removeByCategory","categoryId","getFourLetter","IEL","NSL","TFL","JPL","i","Categories","QuestionID","String","Reversed","Boolean","AnsweredAt","Date","getQuestion","q","findOne","_id","unanswer","removeAnswer","Personality","AnsweredQuestions","TotalQuestions","getAnsweredQuestionsIDs","qids","_","each","ans","push","setTotalQuestions","totalQuestions","getTotalQuestions","answerQuestion","answer","contextThis","cat","unAnswerQuestion","skipSlice","index","getAnswerIndexForQuestionID","before","length","shift","pop","slice","concat","questionId","getAnswerForQuestion","find","self","DashboardPane","size","title","route","firstName","validators","param","lastName","gender","birthDate","optional","OfType","dashboardPanes","segments","calculateAge","diff","now","getTime","age","Math","abs","getUTCFullYear","fullName","toLowerCase","toUpperCase","collection","Meteor","users","createdAt","emails","Object","MyProfile","teams","Default","Name","roles","resolveError","nestedName","validator","events","afterInit","e","target","beforeSave","currentTarget","addCategory","addTeam","meteorMethods","save","changeName","teamName","teamDoc","addUsers","profileUpdate","uprofile","indexes","behaviors","slug","fieldName","timestamp","isServer","extend","services"],"mappings":"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","sourcesContent":["import { Class } from 'meteor/jagi:astronomy';\nimport { check } from 'meteor/check';\nimport { MyersBriggsCategory, Question } from '../questions/questions.js';\nimport { Category, CategoryManager } from '../categories/categories.js';\nimport { Defaults } from '../../startup/both/defaults.js';\nimport { Team } from '../teams/teams.js';\nimport { UserSegment } from '../user_segments/user_segments.js';\n\nconst MyersBriggsBit = Class.create({\n    name: 'MyersBriggsBit',\n    fields: {\n        Value: {\n            type: Number,\n            default: 0\n        },\n        Totals: {\n            type: Number,\n            default: 0\n        },\n        QuestionCount: {\n            type: Number,\n            default: 0\n        }\n    },\n    helpers: {\n        addValue(value) {\n            this.Totals += value;\n            this.QuestionCount ++;\n            this.Value = (this.QuestionCount == 0 ? 0 :this.Totals / this.QuestionCount);\n        },\n        removeValue(value) {\n            this.QuestionCount --;\n            if(this.QuestionCount < 0) { this.QuestionCount = 0; }\n            if(this.QuestionCount == 0) { this.Totals = this.Value = 0; return; }\n            this.Totals -= value;\n            this.Value = this.Totals / this.QuestionCount;\n        },\n        reset() {\n            this.Totals = 0;\n            this.QuestionCount = 0;\n            this.Value = 0;\n        }\n    }\n});\nconst MyersBriggs = Class.create({\n    name: 'MyersBriggs',\n    fields: {\n        IE: {\n            type: MyersBriggsBit,\n            default: function () { return new MyersBriggsBit(); }\n        },\n        NS: {\n            type: MyersBriggsBit,\n            default: function () { return new MyersBriggsBit(); }\n        },\n        TF: {\n            type: MyersBriggsBit,\n            default: function () { return new MyersBriggsBit(); }\n        },\n        JP: {\n            type: MyersBriggsBit,\n            default: function () { return new MyersBriggsBit(); }\n        }\n    },\n    helpers: {\n        addByCategory(category, value) {\n            console.log(category, value);\n            let name = this.getIdentifierById(category);\n            this[name].addValue(value);\n        },\n        removeByCategory(category, value) {\n            let name = this.getIdentifierById(category);\n            this[name].removeValue(value);\n        },\n        getIdentifierById(categoryId) {\n            if(categoryId === 0) { return 'IE'; }\n            if(categoryId === 1) { return 'NS'; }\n            if(categoryId === 2) { return 'TF'; }\n            return 'JP';\n        },\n        getFourLetter() {\n            let IEL = (this.IE.Value === 0 ? '_' : (this.IE.Value < 0 ? 'I' : 'E'));\n            let NSL = (this.NS.Value === 0 ? '_' : (this.NS.Value < 0 ? 'N' : 'S'));\n            let TFL = (this.TF.Value === 0 ? '_' : (this.TF.Value < 0 ? 'T' : 'F'));\n            let JPL = (this.JP.Value === 0 ? '_' : (this.JP.Value < 0 ? 'J' : 'P'));\n            return `${IEL}${NSL}${TFL}${JPL}`;\n        },\n        reset() {\n            for(let i = 0; i < 4; i++) {\n                this[this.getIdentifierById(i)].reset();\n            }\n        }\n    }\n});\nconst Answer = Class.create({\n    name: 'Answer',\n    fields: {\n        Category: {\n            type:MyersBriggsCategory,\n            default:0\n        },\n        Categories: {\n            type: [MyersBriggsCategory],\n            default: []\n        },\n        QuestionID: {\n            type: String,\n            default:''\n        },\n        Reversed: {\n            type: Boolean,\n            default:false\n        },\n        Value: {\n            type: Number,\n            default:0\n        },\n        AnsweredAt: {\n            type: Date,\n            default: function () { return new Date(); }\n        }\n    },\n    helpers: {\n        getQuestion() {\n            let q = Question.findOne({_id:this.QuestionID});\n            return q;\n        },\n        unanswer() {\n            this.getQuestion().removeAnswer(this);\n        }\n    }\n});\nconst UserType = Class.create({\n    name: 'UserType',\n    fields: {\n        Personality: {\n            type: MyersBriggs,\n            default: function () { return new MyersBriggs(); }\n        },\n        AnsweredQuestions: {\n            type: [Answer],\n            default: function() { return []; }\n        },\n        TotalQuestions: {\n            type: Number,\n            default:0\n        }\n    },\n    helpers: {\n        getAnsweredQuestionsIDs() {\n            let qids = [];\n            _.each(this.AnsweredQuestions, function (ans) {\n                qids.push(ans.QuestionID);\n            });\n            return qids;\n        },\n        setTotalQuestions(totalQuestions) {\n            //console.log(\"user.js totalQuestions\", totalQuestions);\n            this.TotalQuestions = totalQuestions;\n            //console.log(\"user.js totalQuestions2\", this.TotalQuestions);\n        },\n        getTotalQuestions() {\n          return this.TotalQuestions;\n        },\n        answerQuestion(answer) {\n            this.AnsweredQuestions.push(answer);\n            console.log(this.AnsweredQuestions);\n            console.log(answer.Categories);\n            let contextThis = this;\n            _.each(answer.Categories, function (cat) {\n                contextThis.Personality.addByCategory(cat, answer.Value);\n            });\n            //this.Personality.addByCategory(answer.Category, answer.Value);\n        },\n        unAnswerQuestion(answer, skipSlice) {\n            let index = this.getAnswerIndexForQuestionID(answer.QuestionID);\n            let before = this.AnsweredQuestions.length;\n\n            if(index < 0) { return; }\n            console.log(index);\n            if(!skipSlice) {\n                if(index == 0) {\n                    this.AnsweredQuestions.shift();\n                } else if(index == this.AnsweredQuestions.length - 1) {\n                    this.AnsweredQuestions.pop();\n                } else {\n                    this.AnsweredQuestions = this.AnsweredQuestions.slice(0,index).concat(this.AnsweredQuestions.slice(index+1));\n                }\n            }\n            answer.unanswer();\n            _.each(answer.Categories, function (cat) {\n                this.Personality.removeByCategory(cat, answer.Value);\n            });\n            //this.Personality.removeByCategory(answer.Category, answer.Value);\n            console.log(\"User Answer Count: \"+before+\" => \"+this.AnsweredQuestions.length);\n        },\n        getAnswerIndexForQuestionID(questionId) {\n            for(let i = 0; i < this.AnsweredQuestions.length; i++) {\n                if(this.AnsweredQuestions[i].QuestionID == questionId) { return i; }\n            }\n            return -1;\n        },\n        getAnswerForQuestion(questionId) {\n            return _.find(this.AnsweredQuestions, function (ans, i) {\n                return ans.QuestionID == questionId;\n            });\n        },\n        reset() {\n            let self = this;\n            _.each(this.AnsweredQuestions, function (ans) {\n                self.unAnswerQuestion(ans, true);\n            });\n            this.Personality.reset();\n            this.AnsweredQuestions = [];\n        }\n    }\n});\n\nconst DashboardPane = Class.create({\n    name: 'DashboardPane',\n    fields: {\n        size: {\n            type: Number,\n            default: 4\n        },\n        name: {\n            type: String,\n            default: 'App_home'\n        },\n        title: {\n            type: String,\n            default: 'Personality Questions'\n        },\n        route: {\n            type: String,\n            default: '/'\n        }\n    }\n})\n\nconst Profile = Class.create({\n    name: 'Profile',\n    fields: {\n        firstName: {\n            type: String,\n            validators: [{\n              type: 'minLength',\n              param: 2\n            }]\n        },\n        lastName: {\n            type: String,\n            validators: [{\n              type: 'minLength',\n              param: 2\n            }]\n        },\n        UserType: {\n            type: UserType,\n            default: function () { return new UserType(); }\n        },\n        gender: {\n            type: Boolean,\n            default: false\n        },\n        birthDate: {\n            type: Date,\n            optional: true\n        },\n        Categories: {\n            type: CategoryManager,\n            default: function() {\n                return CategoryManager.OfType(\"User\");\n            }\n        },\n        dashboardPanes: {\n            type: [DashboardPane],\n            default: []\n        },\n        segments: {\n            type: [String],\n            default: []\n        }\n    },\n    helpers: {\n        calculateAge() {\n            if (this.birthDate) {\n                const diff = Date.now() - this.birthDate.getTime();\n                this.age = Math.abs((new Date(diff)).getUTCFullYear() - 1970);\n            }\n        },\n        fullName(param) {\n            var fullName = this.firstName + ' ' + this.lastName;\n            if (param === 'lower') { return fullName.toLowerCase(); }\n            else if (param === 'upper') { return fullName.toUpperCase(); }\n            return fullName;\n        }\n    },\n});\n\nconst User = Class.create({\n    name: 'User',\n    collection: Meteor.users,\n    fields:{\n        createdAt: Date,\n        emails: {\n            type: [Object],\n            default: function() { return []; }\n        },\n        MyProfile: {\n            type: Profile,\n            default: function() { return new Profile(); }\n        },\n        teams: {\n        \ttype: [String],\n        \tdefault: function() { return [ Team.Default.Name ]; }\n        },\n        roles: {\n            type: Object\n        }\n    },\n    resolveError({ nestedName, validator }) {\n        console.log(nestedName, validator);\n    },\n    events: {\n        afterInit(e) {\n            e.target.MyProfile.calculateAge();\n        },\n        beforeSave(e) {\n            if (e.currentTarget.MyProfile.Categories.length() === 0) {\n                e.currentTarget.MyProfile.Categories.addCategory(Category.Default);\n            }\n            if (e.currentTarget.teams.length === 0) {\n            \te.currentTarget.addTeam( Team.Default.Name );\n            }\n        }\n    },\n    meteorMethods: {\n        create() {\n            return this.save();\n        },\n        changeName(firstName, lastName) {\n            check(firstName, String);\n            check(lastName, String);\n            this.MyProfile.firstName = firstName;\n            this.MyProfile.lastName = lastName;\n            return this.save();\n        },\n        fullName(param) {\n            return this.MyProfile.fullName(param);\n        },\n        addTeam(teamName) {\n        \tlet teamDoc = Team.findOne({ \"Name\" : teamName});\n        \tif (typeof teamDoc !== \"undefined\") {\n                teamDoc.addUsers(this._id);\n        \t} else {\n                return false;\n            }\n        },\n        profileUpdate(uprofile) {\n            check(uprofile.firstName, String);\n            check(uprofile.lastName, String);\n            check(uprofile.gender, Boolean);\n\n            this.MyProfile.firstName = uprofile.firstName;\n            this.MyProfile.lastName = uprofile.lastName;\n            this.MyProfile.gender = uprofile.gender;\n            this.MyProfile.segments = uprofile.segments;\n            if (\"\" !== uprofile.birthDate) {\n                this.MyProfile.birthDate = new Date(uprofile.birthDate);\n            }\n            return this.save();\n        }\n    },\n    indexes: {\n    },\n    behaviors: {\n        slug: {\n            fieldName: 'email'\n        },\n        timestamp: {}\n    }\n});\n\nif (Meteor.isServer) {\n  User.extend({\n    fields: {\n      services: Object\n    }\n  });\n}\n\nexport { User, Profile, UserType, MyersBriggs, Answer };\n"]},"sourceType":"script","hash":"1fdf6249f0f73257a44640eea64dd06eb4508cc4"}
