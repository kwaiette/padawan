{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\fields\\utils\\set_one.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/modules/fields/utils/set_one.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\fields\\utils\\set_one.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","presets":[],"generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\fields\\utils\\set_one.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/modules/fields/utils/set_one.js"}},"code":"let _isObject;\n\nmodule.watch(require(\"lodash/isObject\"), {\n  default(v) {\n    _isObject = v;\n  }\n\n}, 0);\nlet EJSON;\nmodule.watch(require(\"meteor/ejson\"), {\n  EJSON(v) {\n    EJSON = v;\n  }\n\n}, 1);\nlet traverse;\nmodule.watch(require(\"../utils/traverse\"), {\n  default(v) {\n    traverse = v;\n  }\n\n}, 2);\nlet warn;\nmodule.watch(require(\"../../core/utils/warn\"), {\n  default(v) {\n    warn = v;\n  }\n\n}, 3);\nlet ObjectField;\nmodule.watch(require(\"../ObjectField\"), {\n  default(v) {\n    ObjectField = v;\n  }\n\n}, 4);\nlet ListField;\nmodule.watch(require(\"../ListField\"), {\n  default(v) {\n    ListField = v;\n  }\n\n}, 5);\n\nfunction setOne(doc, fieldPattern, fieldValue, options) {\n  // If the \"clone\" option was set and the value being set is an object,\n  // then we clone value using the \"EJSON.clone\" function.\n  if (options.clone && _isObject(fieldValue)) {\n    fieldValue = EJSON.clone(fieldValue);\n  }\n\n  return traverse(doc, fieldPattern, (nestedDoc, nestedFieldName, field) => {\n    // If a field does not exist than we don't return anything.\n    if (!field) {\n      const Class = doc.constructor;\n      const className = Class.getName();\n      warn(`[\"${className}\" class][\"${fieldPattern}\" field] ` + 'Trying to set a value of the field that does not exist in the class');\n      return;\n    } // Cast value if the \"cast\" option was set or if a field is instance of\n    // ObjectField or ListField.\n\n\n    if (options.cast || field instanceof ObjectField || field instanceof ListField && field.isClass) {\n      // If the \"cast\" option is set and we're casting array's element.\n      if (options.cast && field instanceof ListField && /\\d+/.test(nestedFieldName)) {\n        options.element = true;\n      }\n\n      fieldValue = field.castValue(fieldValue, options);\n    } // Set default value if the \"defualts\" option was set.\n\n\n    if (fieldValue === undefined && options.defaults) {\n      fieldValue = field.getDefault(nestedDoc);\n    } // Finally set casted/cloned/untouched value.\n\n\n    nestedDoc[nestedFieldName] = fieldValue;\n  });\n}\n\nmodule.exportDefault(setOne);","map":{"version":3,"sources":["packages/jagi:astronomy/lib/modules/fields/utils/set_one.js"],"names":["_isObject","module","watch","require","default","v","EJSON","traverse","warn","ObjectField","ListField","setOne","doc","fieldPattern","fieldValue","options","clone","nestedDoc","nestedFieldName","field","Class","constructor","className","getName","cast","isClass","test","element","castValue","undefined","defaults","getDefault","exportDefault"],"mappings":"AAAA,IAAIA,SAAJ;;AAAcC,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACC,UAAQC,CAAR,EAAU;AAACL,gBAAUK,CAAV;AAAY;;AAAxB,CAAxC,EAAkE,CAAlE;AAAqE,IAAIC,KAAJ;AAAUL,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACG,QAAMD,CAAN,EAAQ;AAACC,YAAMD,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIE,QAAJ;AAAaN,OAAOC,KAAP,CAAaC,QAAQ,mBAAR,CAAb,EAA0C;AAACC,UAAQC,CAAR,EAAU;AAACE,eAASF,CAAT;AAAW;;AAAvB,CAA1C,EAAmE,CAAnE;AAAsE,IAAIG,IAAJ;AAASP,OAAOC,KAAP,CAAaC,QAAQ,uBAAR,CAAb,EAA8C;AAACC,UAAQC,CAAR,EAAU;AAACG,WAAKH,CAAL;AAAO;;AAAnB,CAA9C,EAAmE,CAAnE;AAAsE,IAAII,WAAJ;AAAgBR,OAAOC,KAAP,CAAaC,QAAQ,gBAAR,CAAb,EAAuC;AAACC,UAAQC,CAAR,EAAU;AAACI,kBAAYJ,CAAZ;AAAc;;AAA1B,CAAvC,EAAmE,CAAnE;AAAsE,IAAIK,SAAJ;AAAcT,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACC,UAAQC,CAAR,EAAU;AAACK,gBAAUL,CAAV;AAAY;;AAAxB,CAArC,EAA+D,CAA/D;;AAO/Z,SAASM,MAAT,CAAgBC,GAAhB,EAAqBC,YAArB,EAAmCC,UAAnC,EAA+CC,OAA/C,EAAwD;AACtD;AACA;AACA,MAAIA,QAAQC,KAAR,IAAiBhB,UAAUc,UAAV,CAArB,EAA4C;AAC1CA,iBAAaR,MAAMU,KAAN,CAAYF,UAAZ,CAAb;AACD;;AAED,SAAOP,SACLK,GADK,EACAC,YADA,EAEL,CAACI,SAAD,EAAYC,eAAZ,EAA6BC,KAA7B,KAAuC;AACrC;AACA,QAAI,CAACA,KAAL,EAAY;AACV,YAAMC,QAAQR,IAAIS,WAAlB;AACA,YAAMC,YAAYF,MAAMG,OAAN,EAAlB;AACAf,WACG,KAAIc,SAAU,aAAYT,YAAa,WAAxC,GACA,qEAFF;AAIA;AACD,KAVoC,CAYrC;AACA;;;AACA,QACGE,QAAQS,IAAT,IACCL,iBAAiBV,WADlB,IAECU,iBAAiBT,SAAjB,IAA8BS,MAAMM,OAHvC,EAIE;AACA;AACA,UACGV,QAAQS,IAAT,IACCL,iBAAiBT,SADlB,IAEC,MAAMgB,IAAN,CAAWR,eAAX,CAHH,EAIE;AACAH,gBAAQY,OAAR,GAAkB,IAAlB;AACD;;AACDb,mBAAaK,MAAMS,SAAN,CAAgBd,UAAhB,EAA4BC,OAA5B,CAAb;AACD,KA5BoC,CA8BrC;;;AACA,QAAID,eAAee,SAAf,IAA4Bd,QAAQe,QAAxC,EAAkD;AAChDhB,mBAAaK,MAAMY,UAAN,CAAiBd,SAAjB,CAAb;AACD,KAjCoC,CAmCrC;;;AACAA,cAAUC,eAAV,IAA6BJ,UAA7B;AACD,GAvCI,CAAP;AAyCD;;AAvDDb,OAAO+B,aAAP,CAyDerB,MAzDf","sourcesContent":["import _isObject from 'lodash/isObject';\nimport { EJSON } from 'meteor/ejson';\nimport traverse from '../utils/traverse';\nimport warn from '../../core/utils/warn';\nimport ObjectField from '../ObjectField';\nimport ListField from '../ListField';\n\nfunction setOne(doc, fieldPattern, fieldValue, options) {\n  // If the \"clone\" option was set and the value being set is an object,\n  // then we clone value using the \"EJSON.clone\" function.\n  if (options.clone && _isObject(fieldValue)) {\n    fieldValue = EJSON.clone(fieldValue);\n  }\n\n  return traverse(\n    doc, fieldPattern,\n    (nestedDoc, nestedFieldName, field) => {\n      // If a field does not exist than we don't return anything.\n      if (!field) {\n        const Class = doc.constructor;\n        const className = Class.getName();\n        warn(\n          `[\"${className}\" class][\"${fieldPattern}\" field] ` +\n          'Trying to set a value of the field that does not exist in the class'\n        );\n        return;\n      }\n\n      // Cast value if the \"cast\" option was set or if a field is instance of\n      // ObjectField or ListField.\n      if (\n        (options.cast) ||\n        (field instanceof ObjectField) ||\n        (field instanceof ListField && field.isClass)\n      ) {\n        // If the \"cast\" option is set and we're casting array's element.\n        if (\n          (options.cast) &&\n          (field instanceof ListField) &&\n          (/\\d+/.test(nestedFieldName))\n        ) {\n          options.element = true;\n        }\n        fieldValue = field.castValue(fieldValue, options);\n      }\n\n      // Set default value if the \"defualts\" option was set.\n      if (fieldValue === undefined && options.defaults) {\n        fieldValue = field.getDefault(nestedDoc);\n      }\n\n      // Finally set casted/cloned/untouched value.\n      nestedDoc[nestedFieldName] = fieldValue;\n    }\n  );\n}\n\nexport default setOne;"]},"sourceType":"script","hash":"5bebde2ff6b7c97a566133642ada9da7334183ee"}
