{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\fields\\ListField.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/modules/fields/ListField.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\fields\\ListField.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\fields\\ListField.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/modules/fields/ListField.js"}},"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nvar _isArray;\n\nmodule.watch(require(\"lodash/isArray\"), {\n  \"default\": function (v) {\n    _isArray = v;\n  }\n}, 1);\n\nvar _isNil;\n\nmodule.watch(require(\"lodash/isNil\"), {\n  \"default\": function (v) {\n    _isNil = v;\n  }\n}, 2);\n\nvar _isPlainObject;\n\nmodule.watch(require(\"lodash/isPlainObject\"), {\n  \"default\": function (v) {\n    _isPlainObject = v;\n  }\n}, 3);\n\nvar _map;\n\nmodule.watch(require(\"lodash/map\"), {\n  \"default\": function (v) {\n    _map = v;\n  }\n}, 4);\nvar Field;\nmodule.watch(require(\"./Field\"), {\n  \"default\": function (v) {\n    Field = v;\n  }\n}, 5);\nvar AstroClass;\nmodule.watch(require(\"../../core/class\"), {\n  \"default\": function (v) {\n    AstroClass = v;\n  }\n}, 6);\nvar Validators;\nmodule.watch(require(\"../validators/validators\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 7);\nvar castToClass;\nmodule.watch(require(\"./utils/castToClass\"), {\n  \"default\": function (v) {\n    castToClass = v;\n  }\n}, 8);\nvar resolveValues;\nmodule.watch(require(\"./utils/resolveValues\"), {\n  \"default\": function (v) {\n    resolveValues = v;\n  }\n}, 9);\n\nvar ListField =\n/*#__PURE__*/\nfunction (_Field) {\n  (0, _inheritsLoose2.default)(ListField, _Field);\n\n  function ListField() {\n    var _this;\n\n    var definition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    _this = _Field.call(this, definition) || this;\n    _this.isClass = AstroClass.isParentOf(_this.type.class);\n    return _this;\n  }\n\n  var _proto = ListField.prototype;\n\n  _proto.validate = function () {\n    function validate(args) {\n      var _this2 = this;\n\n      _Field.prototype.validate.call(this, args);\n\n      var doc = args.doc,\n          name = args.name,\n          value = args.value; // If a value is not empty.\n\n      if (!_isNil(value)) {\n        Validators.array(args);\n\n        _each(value, function (element, index) {\n          _this2.type.validate({\n            doc: doc,\n            name: name + '.' + index,\n            value: element\n          });\n        });\n      }\n    }\n\n    return validate;\n  }();\n\n  _proto.cast = function () {\n    function cast(value, options) {\n      var _this3 = this;\n\n      if (options.element) {\n        return this.type.cast(value, options);\n      }\n\n      if (value === '' && this.optional) {\n        return null;\n      } else if (_isArray(value)) {\n        return _map(value, function (element) {\n          // Class type.\n          if (_this3.isClass) {\n            // We only cast if a value is a plain object.\n            if (_isPlainObject(element)) {\n              // Cast value to an instance of the class.\n              return castToClass({\n                Class: _this3.type.class,\n                rawDoc: element,\n                options: options\n              });\n            }\n\n            return element;\n          } // Scalar type.\n          else {\n              // The \"cast\" option is only passed to the ObjectFields and ListFields.\n              // Here we have to check if it's set, so we don't cast if user don't\n              // want to.\n              if (options.cast) {\n                return _this3.type.cast.call(_this3, element);\n              }\n\n              return element;\n            }\n        });\n      }\n\n      return value;\n    }\n\n    return cast;\n  }();\n\n  _proto.resolveValue = function () {\n    function resolveValue(rawDoc) {\n      var _this4 = this;\n\n      var resolvedValues = _Field.prototype.resolveValue.call(this, rawDoc);\n\n      if (!this.isClass) {\n        return resolvedValues;\n      }\n\n      return _map(resolvedValues, function (nestedRawDoc) {\n        return resolveValues({\n          Class: _this4.type.class,\n          rawDoc: nestedRawDoc\n        });\n      });\n    }\n\n    return resolveValue;\n  }();\n\n  return ListField;\n}(Field);\n\n;\nmodule.exportDefault(ListField);","map":{"version":3,"sources":["packages/jagi:astronomy/lib/modules/fields/ListField.js"],"names":["_each","module","watch","require","v","_isArray","_isNil","_isPlainObject","_map","Field","AstroClass","Validators","castToClass","resolveValues","ListField","definition","isClass","isParentOf","type","class","validate","args","doc","name","value","array","element","index","cast","options","optional","Class","rawDoc","call","resolveValue","resolvedValues","nestedRawDoc","exportDefault"],"mappings":"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","sourcesContent":["import _each from 'lodash/each';\nimport _isArray from 'lodash/isArray';\nimport _isNil from 'lodash/isNil';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _map from 'lodash/map';\nimport Field from './Field';\nimport AstroClass from '../../core/class';\nimport Validators from '../validators/validators';\nimport castToClass from './utils/castToClass';\nimport resolveValues from './utils/resolveValues';\n\nclass ListField extends Field {\n  constructor(definition = {}) {\n    super(definition);\n    this.isClass = AstroClass.isParentOf(this.type.class);\n  }\n\n  validate(args) {\n    super.validate(args);\n    var {\n      doc,\n      name,\n      value\n    } = args;\n    // If a value is not empty.\n    if (!_isNil(value)) {\n      Validators.array(args);\n      _each(value, (element, index) => {\n        this.type.validate({\n          doc,\n          name: name + '.' + index,\n          value: element\n        });\n      });\n    }\n  }\n\n  cast(value, options) {\n    if (options.element) {\n      return this.type.cast(value, options);\n    }\n    if (value === '' && this.optional) {\n      return null;\n    }\n    else if (_isArray(value)) {\n      return _map(value, (element) => {\n        // Class type.\n        if (this.isClass) {\n          // We only cast if a value is a plain object.\n          if (_isPlainObject(element)) {\n            // Cast value to an instance of the class.\n            return castToClass({\n              Class: this.type.class,\n              rawDoc: element,\n              options\n            });\n          }\n          return element;\n        }\n        // Scalar type.\n        else {\n          // The \"cast\" option is only passed to the ObjectFields and ListFields.\n          // Here we have to check if it's set, so we don't cast if user don't\n          // want to.\n          if (options.cast) {\n            return this.type.cast.call(this, element);\n          }\n          return element;\n        }\n      });\n    }\n    return value;\n  }\n\n  resolveValue(rawDoc) {\n    const resolvedValues = super.resolveValue(rawDoc);\n    if (!this.isClass) {\n      return resolvedValues;\n    }\n    return _map(resolvedValues, (nestedRawDoc) => {\n      return resolveValues({\n        Class: this.type.class,\n        rawDoc: nestedRawDoc\n      });\n    });\n  }\n};\n\nexport default ListField;\n"]},"sourceType":"script","hash":"ec926768713fd748674ad28877f1abce1eb85f7a"}
