{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\core\\module.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/core/module.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\core\\module.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","presets":[],"generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\core\\module.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/core/module.js"}},"code":"const module1 = module;\n\nlet _each;\n\nmodule1.watch(require(\"lodash/each\"), {\n  default(v) {\n    _each = v;\n  }\n\n}, 0);\nlet throwParseError;\nmodule1.watch(require(\"../modules/core/utils/throw_parse_error.js\"), {\n  default(v) {\n    throwParseError = v;\n  }\n\n}, 1);\n\nclass Module {\n  constructor(definition) {\n    if (!Match.test(definition, Object)) {\n      throwParseError(['Module definition has to be an object']);\n    } // Set module name.\n\n\n    if (!Match.test(definition.name, String)) {\n      throwParseError(['Module name has to be a string']);\n    }\n\n    this.name = definition.name; // Set module aliases.\n\n    if (!Match.test(definition.aliases, Match.Maybe([String]))) {\n      throwParseError([`Module aliases has to be an array of strings in the \"${this.name}\" module`]);\n    }\n\n    this.aliases = definition.aliases; // Set module hooks.\n\n    _each(['onInitSchema', 'onInitDefinition', 'onInitClass', 'onParseDefinition', 'onApplyDefinition', 'onMergeDefinitions', 'onFinalizeClass'], hookName => {\n      if (definition[hookName] === undefined) {\n        return;\n      }\n\n      if (!Match.test(definition[hookName], Function)) {\n        throwParseError([{\n          'module': this.name\n        }, {\n          'property': hookName\n        }, `The \"${hookName}\" hook has to be a function`]);\n      }\n\n      this[hookName] = definition[hookName];\n    }); // Set module utils.\n\n\n    if (definition.utils) {\n      if (!Match.test(definition.utils, Object)) {\n        throwParseError([{\n          'module': this.name\n        }, {\n          'property': 'utils'\n        }, 'Utilities definition has to be an object']);\n      }\n\n      this.utils = {};\n\n      _each(definition.utils, (method, methodName) => {\n        if (!Match.test(method, Function)) {\n          throwParseError([{\n            'module': this.name\n          }, {\n            'property': 'utils'\n          }, {\n            'method': methodName\n          }, 'Utility has to be a function']);\n        }\n\n        this.utils[methodName] = method;\n      });\n    }\n  }\n\n  onInitSchema(schema, className) {}\n\n  onInitDefinition(definition, className) {}\n\n  onInitClass(Class, className) {}\n\n  onParseDefinition(parsedDefinition, definition, className) {}\n\n  onApplyDefinition(Class, definition, className) {}\n\n  onMergeDefinitions(targetDefinition, sourceDefinition, className) {}\n\n  onFinalizeClass(Class, className) {}\n\n  static create(definition) {\n    let module = new this(definition);\n    this.modules[module.name] = module;\n    this.modulesOrder.push(module.name);\n    return module;\n  }\n\n  static get(moduleName) {\n    return this.modules[moduleName];\n  }\n\n  static forEach(iteratee) {\n    if (!Match.test(iteratee, Function)) {\n      throwParseError(['The first argument of the \"Module.forEach\" method has to be a function']);\n    }\n\n    _each(this.modulesOrder, moduleName => {\n      iteratee(this.modules[moduleName]);\n    });\n  }\n\n}\n\n;\nModule.modules = {};\nModule.modulesOrder = [];\nmodule1.exportDefault(Module);","map":{"version":3,"sources":["packages/jagi:astronomy/lib/core/module.js"],"names":["module1","module","_each","watch","require","default","v","throwParseError","Module","constructor","definition","Match","test","Object","name","String","aliases","Maybe","hookName","undefined","Function","utils","method","methodName","onInitSchema","schema","className","onInitDefinition","onInitClass","Class","onParseDefinition","parsedDefinition","onApplyDefinition","onMergeDefinitions","targetDefinition","sourceDefinition","onFinalizeClass","create","modules","modulesOrder","push","get","moduleName","forEach","iteratee","exportDefault"],"mappings":"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","sourcesContent":["import _each from 'lodash/each';\nimport throwParseError from '../modules/core/utils/throw_parse_error.js';\n\nclass Module {\n  constructor(definition) {\n    if (!Match.test(definition, Object)) {\n      throwParseError([\n        'Module definition has to be an object'\n      ]);\n    }\n\n    // Set module name.\n    if (!Match.test(definition.name, String)) {\n      throwParseError([\n        'Module name has to be a string'\n      ]);\n    }\n    this.name = definition.name;\n\n    // Set module aliases.\n    if (!Match.test(definition.aliases, Match.Maybe([String]))) {\n      throwParseError([\n        `Module aliases has to be an array of strings in the \"${this.name}\" module`\n      ]);\n    }\n    this.aliases = definition.aliases;\n\n    // Set module hooks.\n    _each([\n      'onInitSchema', 'onInitDefinition', 'onInitClass', 'onParseDefinition',\n      'onApplyDefinition', 'onMergeDefinitions', 'onFinalizeClass'\n    ], (hookName) => {\n      if (definition[hookName] === undefined) {\n        return;\n      }\n      if (!Match.test(definition[hookName], Function)) {\n        throwParseError([{\n            'module': this.name\n          }, {\n            'property': hookName\n          },\n          `The \"${hookName}\" hook has to be a function`\n        ]);\n      }\n      this[hookName] = definition[hookName];\n    });\n\n    // Set module utils.\n    if (definition.utils) {\n      if (!Match.test(definition.utils, Object)) {\n        throwParseError([{\n            'module': this.name\n          }, {\n            'property': 'utils'\n          },\n          'Utilities definition has to be an object'\n        ]);\n      }\n      this.utils = {};\n      _each(definition.utils, (method, methodName) => {\n        if (!Match.test(method, Function)) {\n          throwParseError([{\n              'module': this.name\n            }, {\n              'property': 'utils'\n            }, {\n              'method': methodName\n            },\n            'Utility has to be a function'\n          ]);\n        }\n        this.utils[methodName] = method;\n      });\n    }\n  }\n\n  onInitSchema(schema, className) {}\n  onInitDefinition(definition, className) {}\n\n  onInitClass(Class, className) {}\n\n  onParseDefinition(parsedDefinition, definition, className) {}\n  onApplyDefinition(Class, definition, className) {}\n  onMergeDefinitions(targetDefinition, sourceDefinition, className) {}\n\n  onFinalizeClass(Class, className) {}\n\n  static create(definition) {\n    let module = new this(definition);\n    this.modules[module.name] = module;\n    this.modulesOrder.push(module.name);\n    return module;\n  }\n\n  static get(moduleName) {\n    return this.modules[moduleName];\n  }\n\n  static forEach(iteratee) {\n    if (!Match.test(iteratee, Function)) {\n      throwParseError([\n        'The first argument of the \"Module.forEach\" method has to be a function'\n      ]);\n    }\n    _each(this.modulesOrder, (moduleName) => {\n      iteratee(this.modules[moduleName]);\n    });\n  }\n};\n\nModule.modules = {};\nModule.modulesOrder = [];\n\nexport default Module;"]},"sourceType":"script","hash":"1dafc11ab158a79b9680e8293c4c335faa80253d"}
