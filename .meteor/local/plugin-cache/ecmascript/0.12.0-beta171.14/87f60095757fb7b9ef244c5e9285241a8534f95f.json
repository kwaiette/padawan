{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\reywood:publish-composite\\lib\\publication.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/reywood:publish-composite/lib/publication.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\reywood:publish-composite\\lib\\publication.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","presets":[],"generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\reywood:publish-composite\\lib\\publication.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/reywood:publish-composite/lib/publication.js"}},"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Match, check;\nmodule.watch(require(\"meteor/check\"), {\n  Match(v) {\n    Match = v;\n  },\n\n  check(v) {\n    check = v;\n  }\n\n}, 1);\n\nlet _;\n\nmodule.watch(require(\"meteor/underscore\"), {\n  _(v) {\n    _ = v;\n  }\n\n}, 2);\nlet debugLog;\nmodule.watch(require(\"./logging\"), {\n  debugLog(v) {\n    debugLog = v;\n  }\n\n}, 3);\nlet PublishedDocumentList;\nmodule.watch(require(\"./published_document_list\"), {\n  default(v) {\n    PublishedDocumentList = v;\n  }\n\n}, 4);\n\nclass Publication {\n  constructor(subscription, options, args) {\n    check(options, {\n      find: Function,\n      children: Match.Optional(Match.OneOf([Object], Function)),\n      collectionName: Match.Optional(String)\n    });\n    this.subscription = subscription;\n    this.options = options;\n    this.args = args || [];\n    this.childrenOptions = options.children || [];\n    this.publishedDocs = new PublishedDocumentList();\n    this.collectionName = options.collectionName;\n  }\n\n  publish() {\n    this.cursor = this._getCursor();\n\n    if (!this.cursor) {\n      return;\n    }\n\n    const collectionName = this._getCollectionName(); // Use Meteor.bindEnvironment to make sure the callbacks are run with the same\n    // environmentVariables as when publishing the \"parent\".\n    // It's only needed when publish is being recursively run.\n\n\n    this.observeHandle = this.cursor.observe({\n      added: Meteor.bindEnvironment(doc => {\n        const alreadyPublished = this.publishedDocs.has(doc._id);\n\n        if (alreadyPublished) {\n          debugLog('Publication.observeHandle.added', `${collectionName}:${doc._id} already published`);\n          this.publishedDocs.unflagForRemoval(doc._id);\n\n          this._republishChildrenOf(doc);\n\n          this.subscription.changed(collectionName, doc._id, doc);\n        } else {\n          this.publishedDocs.add(collectionName, doc._id);\n\n          this._publishChildrenOf(doc);\n\n          this.subscription.added(collectionName, doc);\n        }\n      }),\n      changed: Meteor.bindEnvironment(newDoc => {\n        debugLog('Publication.observeHandle.changed', `${collectionName}:${newDoc._id}`);\n\n        this._republishChildrenOf(newDoc);\n      }),\n      removed: doc => {\n        debugLog('Publication.observeHandle.removed', `${collectionName}:${doc._id}`);\n\n        this._removeDoc(collectionName, doc._id);\n      }\n    });\n    this.observeChangesHandle = this.cursor.observeChanges({\n      changed: (id, fields) => {\n        debugLog('Publication.observeChangesHandle.changed', `${collectionName}:${id}`);\n        this.subscription.changed(collectionName, id, fields);\n      }\n    });\n  }\n\n  unpublish() {\n    debugLog('Publication.unpublish', this._getCollectionName());\n\n    this._stopObservingCursor();\n\n    this._unpublishAllDocuments();\n  }\n\n  _republish() {\n    this._stopObservingCursor();\n\n    this.publishedDocs.flagAllForRemoval();\n    debugLog('Publication._republish', 'run .publish again');\n    this.publish();\n    debugLog('Publication._republish', 'unpublish docs from old cursor');\n\n    this._removeFlaggedDocs();\n  }\n\n  _getCursor() {\n    return this.options.find.apply(this.subscription.meteorSub, this.args);\n  }\n\n  _getCollectionName() {\n    return this.collectionName || this.cursor && this.cursor._getCollectionName();\n  }\n\n  _publishChildrenOf(doc) {\n    const children = _.isFunction(this.childrenOptions) ? this.childrenOptions(doc, ...this.args) : this.childrenOptions;\n\n    _.each(children, function createChildPublication(options) {\n      const pub = new Publication(this.subscription, options, [doc].concat(this.args));\n      this.publishedDocs.addChildPub(doc._id, pub);\n      pub.publish();\n    }, this);\n  }\n\n  _republishChildrenOf(doc) {\n    this.publishedDocs.eachChildPub(doc._id, publication => {\n      publication.args[0] = doc;\n\n      publication._republish();\n    });\n  }\n\n  _unpublishAllDocuments() {\n    this.publishedDocs.eachDocument(doc => {\n      this._removeDoc(doc.collectionName, doc.docId);\n    }, this);\n  }\n\n  _stopObservingCursor() {\n    debugLog('Publication._stopObservingCursor', 'stop observing cursor');\n\n    if (this.observeHandle) {\n      this.observeHandle.stop();\n      delete this.observeHandle;\n    }\n\n    if (this.observeChangesHandle) {\n      this.observeChangesHandle.stop();\n      delete this.observeChangesHandle;\n    }\n  }\n\n  _removeFlaggedDocs() {\n    this.publishedDocs.eachDocument(doc => {\n      if (doc.isFlaggedForRemoval()) {\n        this._removeDoc(doc.collectionName, doc.docId);\n      }\n    }, this);\n  }\n\n  _removeDoc(collectionName, docId) {\n    this.subscription.removed(collectionName, docId);\n\n    this._unpublishChildrenOf(docId);\n\n    this.publishedDocs.remove(docId);\n  }\n\n  _unpublishChildrenOf(docId) {\n    debugLog('Publication._unpublishChildrenOf', `unpublishing children of ${this._getCollectionName()}:${docId}`);\n    this.publishedDocs.eachChildPub(docId, publication => {\n      publication.unpublish();\n    });\n  }\n\n}\n\nmodule.exportDefault(Publication);","map":{"version":3,"sources":["packages/reywood:publish-composite/lib/publication.js"],"names":["Meteor","module","watch","require","v","Match","check","_","debugLog","PublishedDocumentList","default","Publication","constructor","subscription","options","args","find","Function","children","Optional","OneOf","Object","collectionName","String","childrenOptions","publishedDocs","publish","cursor","_getCursor","_getCollectionName","observeHandle","observe","added","bindEnvironment","doc","alreadyPublished","has","_id","unflagForRemoval","_republishChildrenOf","changed","add","_publishChildrenOf","newDoc","removed","_removeDoc","observeChangesHandle","observeChanges","id","fields","unpublish","_stopObservingCursor","_unpublishAllDocuments","_republish","flagAllForRemoval","_removeFlaggedDocs","apply","meteorSub","isFunction","each","createChildPublication","pub","concat","addChildPub","eachChildPub","publication","eachDocument","docId","stop","isFlaggedForRemoval","_unpublishChildrenOf","remove","exportDefault"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Match, check } from 'meteor/check';\nimport { _ } from 'meteor/underscore';\n\nimport { debugLog } from './logging';\nimport PublishedDocumentList from './published_document_list';\n\n\nclass Publication {\n    constructor(subscription, options, args) {\n        check(options, {\n            find: Function,\n            children: Match.Optional(Match.OneOf([Object], Function)),\n            collectionName: Match.Optional(String),\n        });\n\n        this.subscription = subscription;\n        this.options = options;\n        this.args = args || [];\n        this.childrenOptions = options.children || [];\n        this.publishedDocs = new PublishedDocumentList();\n        this.collectionName = options.collectionName;\n    }\n\n    publish() {\n        this.cursor = this._getCursor();\n        if (!this.cursor) { return; }\n\n        const collectionName = this._getCollectionName();\n\n        // Use Meteor.bindEnvironment to make sure the callbacks are run with the same\n        // environmentVariables as when publishing the \"parent\".\n        // It's only needed when publish is being recursively run.\n        this.observeHandle = this.cursor.observe({\n            added: Meteor.bindEnvironment((doc) => {\n                const alreadyPublished = this.publishedDocs.has(doc._id);\n\n                if (alreadyPublished) {\n                    debugLog('Publication.observeHandle.added', `${collectionName}:${doc._id} already published`);\n                    this.publishedDocs.unflagForRemoval(doc._id);\n                    this._republishChildrenOf(doc);\n                    this.subscription.changed(collectionName, doc._id, doc);\n                } else {\n                    this.publishedDocs.add(collectionName, doc._id);\n                    this._publishChildrenOf(doc);\n                    this.subscription.added(collectionName, doc);\n                }\n            }),\n            changed: Meteor.bindEnvironment((newDoc) => {\n                debugLog('Publication.observeHandle.changed', `${collectionName}:${newDoc._id}`);\n                this._republishChildrenOf(newDoc);\n            }),\n            removed: (doc) => {\n                debugLog('Publication.observeHandle.removed', `${collectionName}:${doc._id}`);\n                this._removeDoc(collectionName, doc._id);\n            },\n        });\n\n        this.observeChangesHandle = this.cursor.observeChanges({\n            changed: (id, fields) => {\n                debugLog('Publication.observeChangesHandle.changed', `${collectionName}:${id}`);\n                this.subscription.changed(collectionName, id, fields);\n            },\n        });\n    }\n\n    unpublish() {\n        debugLog('Publication.unpublish', this._getCollectionName());\n        this._stopObservingCursor();\n        this._unpublishAllDocuments();\n    }\n\n    _republish() {\n        this._stopObservingCursor();\n\n        this.publishedDocs.flagAllForRemoval();\n\n        debugLog('Publication._republish', 'run .publish again');\n        this.publish();\n\n        debugLog('Publication._republish', 'unpublish docs from old cursor');\n        this._removeFlaggedDocs();\n    }\n\n    _getCursor() {\n        return this.options.find.apply(this.subscription.meteorSub, this.args);\n    }\n\n    _getCollectionName() {\n        return this.collectionName || (this.cursor && this.cursor._getCollectionName());\n    }\n\n    _publishChildrenOf(doc) {\n        const children = _.isFunction(this.childrenOptions) ?\n        this.childrenOptions(doc, ...this.args) : this.childrenOptions;\n        _.each(children, function createChildPublication(options) {\n            const pub = new Publication(this.subscription, options, [doc].concat(this.args));\n            this.publishedDocs.addChildPub(doc._id, pub);\n            pub.publish();\n        }, this);\n    }\n\n    _republishChildrenOf(doc) {\n        this.publishedDocs.eachChildPub(doc._id, (publication) => {\n            publication.args[0] = doc;\n            publication._republish();\n        });\n    }\n\n    _unpublishAllDocuments() {\n        this.publishedDocs.eachDocument((doc) => {\n            this._removeDoc(doc.collectionName, doc.docId);\n        }, this);\n    }\n\n    _stopObservingCursor() {\n        debugLog('Publication._stopObservingCursor', 'stop observing cursor');\n\n        if (this.observeHandle) {\n            this.observeHandle.stop();\n            delete this.observeHandle;\n        }\n\n        if (this.observeChangesHandle) {\n            this.observeChangesHandle.stop();\n            delete this.observeChangesHandle;\n        }\n    }\n\n    _removeFlaggedDocs() {\n        this.publishedDocs.eachDocument((doc) => {\n            if (doc.isFlaggedForRemoval()) {\n                this._removeDoc(doc.collectionName, doc.docId);\n            }\n        }, this);\n    }\n\n    _removeDoc(collectionName, docId) {\n        this.subscription.removed(collectionName, docId);\n        this._unpublishChildrenOf(docId);\n        this.publishedDocs.remove(docId);\n    }\n\n    _unpublishChildrenOf(docId) {\n        debugLog('Publication._unpublishChildrenOf', `unpublishing children of ${this._getCollectionName()}:${docId}`);\n\n        this.publishedDocs.eachChildPub(docId, (publication) => {\n            publication.unpublish();\n        });\n    }\n}\n\nexport default Publication;\n"]},"sourceType":"script","hash":"87f60095757fb7b9ef244c5e9285241a8534f95f"}
