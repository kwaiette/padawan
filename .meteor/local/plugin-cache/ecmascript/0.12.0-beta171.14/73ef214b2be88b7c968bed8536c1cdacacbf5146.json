{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy-softremove-behavior\\lib\\class_prototype_methods\\softRemove.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy-softremove-behavior/lib/class_prototype_methods/softRemove.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy-softremove-behavior\\lib\\class_prototype_methods\\softRemove.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy-softremove-behavior\\lib\\class_prototype_methods\\softRemove.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy-softremove-behavior/lib/class_prototype_methods/softRemove.js"}},"code":"let Match;\nmodule.watch(require(\"meteor/check\"), {\n  Match(v) {\n    Match = v;\n  }\n\n}, 0);\nlet Module;\nmodule.watch(require(\"meteor/jagi:astronomy\"), {\n  Module(v) {\n    Module = v;\n  }\n\n}, 1);\nlet documentSoftRemove;\nmodule.watch(require(\"../utils/documentSoftRemove\"), {\n  default(v) {\n    documentSoftRemove = v;\n  }\n\n}, 2);\nconst isRemote = Module.modules.storage.utils.isRemote;\nconst callMeteorMethod = Module.modules.storage.utils.callMeteorMethod;\n\nconst softRemove = function () {\n  let args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let callback = arguments.length > 1 ? arguments[1] : undefined;\n  let doc = this;\n  let Class = doc.constructor; // If the first argument is callback function then reassign values.\n\n  if (arguments.length === 1 && Match.test(args, Function)) {\n    callback = args;\n    args = {};\n  } // Get variables from the first argument.\n\n\n  let {\n    simulation = true\n  } = args; // If we are dealing with a remote collection and we are not on the server.\n\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    let methodName = \"/Astronomy/softRemove\"; // Prepare arguments for the meteor method.\n\n    let methodArgs = {\n      className: Class.getName(),\n      selector: {\n        _id: doc._id\n      },\n      simulation\n    };\n\n    try {\n      // Run meteor method.\n      let result = callMeteorMethod(Class, methodName, [methodArgs], callback); // Return result of the meteor method call.\n\n      return result;\n    } catch (err) {\n      // Catch stub exceptions.\n      if (callback) {\n        callback(err);\n        return null;\n      }\n\n      throw err;\n    }\n  } // If we can just remove a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n\n\n  try {\n    // Prepare arguments.\n    let methodArgs = {\n      doc,\n      simulation,\n      trusted: true\n    };\n    let result = documentSoftRemove(methodArgs);\n\n    if (callback) {\n      callback(undefined, result);\n    }\n\n    return result;\n  } catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n\n    throw err;\n  }\n};\n\nmodule.exportDefault(softRemove);","map":{"version":3,"sources":["packages/jagi:astronomy-softremove-behavior/lib/class_prototype_methods/softRemove.js"],"names":["Match","module","watch","require","v","Module","documentSoftRemove","default","isRemote","modules","storage","utils","callMeteorMethod","softRemove","args","callback","doc","Class","constructor","arguments","length","test","Function","simulation","methodName","methodArgs","className","getName","selector","_id","result","err","trusted","undefined","exportDefault"],"mappings":"AAAA,IAAIA,KAAJ;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACH,QAAMI,CAAN,EAAQ;AAACJ,YAAMI,CAAN;AAAQ;;AAAlB,CAArC,EAAyD,CAAzD;AAA4D,IAAIC,MAAJ;AAAWJ,OAAOC,KAAP,CAAaC,QAAQ,uBAAR,CAAb,EAA8C;AAACE,SAAOD,CAAP,EAAS;AAACC,aAAOD,CAAP;AAAS;;AAApB,CAA9C,EAAoE,CAApE;AAAuE,IAAIE,kBAAJ;AAAuBL,OAAOC,KAAP,CAAaC,QAAQ,6BAAR,CAAb,EAAoD;AAACI,UAAQH,CAAR,EAAU;AAACE,yBAAmBF,CAAnB;AAAqB;;AAAjC,CAApD,EAAuF,CAAvF;AAG/K,MAAMI,WAAWH,OAAOI,OAAP,CAAeC,OAAf,CAAuBC,KAAvB,CAA6BH,QAA9C;AACA,MAAMI,mBAAmBP,OAAOI,OAAP,CAAeC,OAAf,CAAuBC,KAAvB,CAA6BC,gBAAtD;;AAEA,MAAMC,aAAa,YAA8B;AAAA,MAArBC,IAAqB,uEAAd,EAAc;AAAA,MAAVC,QAAU;AAC/C,MAAIC,MAAM,IAAV;AACA,MAAIC,QAAQD,IAAIE,WAAhB,CAF+C,CAI/C;;AACA,MAAIC,UAAUC,MAAV,KAAqB,CAArB,IAA0BpB,MAAMqB,IAAN,CAAWP,IAAX,EAAiBQ,QAAjB,CAA9B,EAA0D;AACxDP,eAAWD,IAAX;AACAA,WAAO,EAAP;AACD,GAR8C,CAS/C;;;AACA,MAAI;AAAES,iBAAa;AAAf,MAAwBT,IAA5B,CAV+C,CAY/C;;AACA,MAAIN,SAASS,KAAT,CAAJ,EAAqB;AACnB;AACA,QAAIO,aAAa,uBAAjB,CAFmB,CAGnB;;AACA,QAAIC,aAAa;AACfC,iBAAWT,MAAMU,OAAN,EADI;AAEfC,gBAAU;AACRC,aAAKb,IAAIa;AADD,OAFK;AAKfN;AALe,KAAjB;;AAQA,QAAI;AACF;AACA,UAAIO,SAASlB,iBAAiBK,KAAjB,EAAwBO,UAAxB,EAAoC,CAACC,UAAD,CAApC,EAAkDV,QAAlD,CAAb,CAFE,CAGF;;AACA,aAAOe,MAAP;AACD,KALD,CAKE,OAAOC,GAAP,EAAY;AACZ;AACA,UAAIhB,QAAJ,EAAc;AACZA,iBAASgB,GAAT;AACA,eAAO,IAAP;AACD;;AACD,YAAMA,GAAN;AACD;AACF,GAtC8C,CAwC/C;AACA;;;AACA,MAAI;AACF;AACA,QAAIN,aAAa;AACfT,SADe;AAEfO,gBAFe;AAGfS,eAAS;AAHM,KAAjB;AAKA,QAAIF,SAASxB,mBAAmBmB,UAAnB,CAAb;;AACA,QAAIV,QAAJ,EAAc;AACZA,eAASkB,SAAT,EAAoBH,MAApB;AACD;;AACD,WAAOA,MAAP;AACD,GAZD,CAYE,OAAOC,GAAP,EAAY;AACZ,QAAIhB,QAAJ,EAAc;AACZA,eAASgB,GAAT;AACA,aAAO,IAAP;AACD;;AACD,UAAMA,GAAN;AACD;AACF,CA7DD;;AANA9B,OAAOiC,aAAP,CAqEerB,UArEf","sourcesContent":["import { Match } from \"meteor/check\";\nimport { Module } from \"meteor/jagi:astronomy\";\nimport documentSoftRemove from \"../utils/documentSoftRemove\";\nconst isRemote = Module.modules.storage.utils.isRemote;\nconst callMeteorMethod = Module.modules.storage.utils.callMeteorMethod;\n\nconst softRemove = function(args = {}, callback) {\n  let doc = this;\n  let Class = doc.constructor;\n\n  // If the first argument is callback function then reassign values.\n  if (arguments.length === 1 && Match.test(args, Function)) {\n    callback = args;\n    args = {};\n  }\n  // Get variables from the first argument.\n  let { simulation = true } = args;\n\n  // If we are dealing with a remote collection and we are not on the server.\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    let methodName = \"/Astronomy/softRemove\";\n    // Prepare arguments for the meteor method.\n    let methodArgs = {\n      className: Class.getName(),\n      selector: {\n        _id: doc._id\n      },\n      simulation\n    };\n\n    try {\n      // Run meteor method.\n      let result = callMeteorMethod(Class, methodName, [methodArgs], callback);\n      // Return result of the meteor method call.\n      return result;\n    } catch (err) {\n      // Catch stub exceptions.\n      if (callback) {\n        callback(err);\n        return null;\n      }\n      throw err;\n    }\n  }\n\n  // If we can just remove a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n  try {\n    // Prepare arguments.\n    let methodArgs = {\n      doc,\n      simulation,\n      trusted: true\n    };\n    let result = documentSoftRemove(methodArgs);\n    if (callback) {\n      callback(undefined, result);\n    }\n    return result;\n  } catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n    throw err;\n  }\n};\n\nexport default softRemove;\n"]},"sourceType":"script","hash":"73ef214b2be88b7c968bed8536c1cdacacbf5146"}
