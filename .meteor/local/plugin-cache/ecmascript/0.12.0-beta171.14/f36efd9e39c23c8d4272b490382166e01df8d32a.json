{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\storage\\utils\\diff.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/modules/storage/utils/diff.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\storage\\utils\\diff.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\storage\\utils\\diff.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/modules/storage/utils/diff.js"}},"code":"var _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  \"default\": function (v) {\n    _each = v;\n  }\n}, 0);\n\nvar _isArray;\n\nmodule.watch(require(\"lodash/isArray\"), {\n  \"default\": function (v) {\n    _isArray = v;\n  }\n}, 1);\n\nvar _isPlainObject;\n\nmodule.watch(require(\"lodash/isPlainObject\"), {\n  \"default\": function (v) {\n    _isPlainObject = v;\n  }\n}, 2);\n\nvar _keys;\n\nmodule.watch(require(\"lodash/keys\"), {\n  \"default\": function (v) {\n    _keys = v;\n  }\n}, 3);\n\nvar _noop;\n\nmodule.watch(require(\"lodash/noop\"), {\n  \"default\": function (v) {\n    _noop = v;\n  }\n}, 4);\n\nvar _union;\n\nmodule.watch(require(\"lodash/union\"), {\n  \"default\": function (v) {\n    _union = v;\n  }\n}, 5);\nvar EJSON;\nmodule.watch(require(\"meteor/ejson\"), {\n  EJSON: function (v) {\n    EJSON = v;\n  }\n}, 6);\n\nfunction diff() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var fieldName = args.fieldName,\n      newDoc = args.newDoc,\n      oldDoc = args.oldDoc,\n      _args$prefix = args.prefix,\n      prefix = _args$prefix === void 0 ? '' : _args$prefix,\n      result = args.result,\n      _args$onDiff = args.onDiff,\n      onDiff = _args$onDiff === void 0 ? _noop : _args$onDiff,\n      _args$onObjectDiff = args.onObjectDiff,\n      onObjectDiff = _args$onObjectDiff === void 0 ? _noop : _args$onObjectDiff,\n      _args$onListDiff = args.onListDiff,\n      onListDiff = _args$onListDiff === void 0 ? _noop : _args$onListDiff,\n      _args$onScalarDiff = args.onScalarDiff,\n      onScalarDiff = _args$onScalarDiff === void 0 ? _noop : _args$onScalarDiff; // Combine fields from old and new document.\n\n  var fieldsNames = _union(_keys(oldDoc), _keys(newDoc)); // Loop through all fields and check if they differ.\n\n\n  _each(fieldsNames, function (fieldName) {\n    var oldValue = oldDoc[fieldName];\n    var newValue = newDoc[fieldName];\n\n    if (!EJSON.equals(oldValue, newValue)) {\n      var nestedPrefix = (prefix && prefix + '.') + fieldName;\n      onDiff({\n        oldValue: oldValue,\n        newValue: newValue,\n        prefix: nestedPrefix,\n        result: result\n      }); // Compare two objects.\n\n      if (_isPlainObject(oldValue) && _isPlainObject(newValue)) {\n        onObjectDiff({\n          oldDoc: oldValue,\n          newDoc: newValue,\n          prefix: nestedPrefix,\n          result: result\n        });\n      } // Compare two lists.\n      else if (_isArray(oldValue) && _isArray(newValue)) {\n          onListDiff({\n            oldList: oldValue,\n            newList: newValue,\n            prefix: nestedPrefix,\n            result: result\n          });\n        } // Compare two scalars.\n        else {\n            onScalarDiff({\n              oldValue: oldValue,\n              newValue: newValue,\n              prefix: nestedPrefix,\n              result: result\n            });\n          }\n    }\n  });\n}\n\nmodule.exportDefault(diff);","map":{"version":3,"sources":["packages/jagi:astronomy/lib/modules/storage/utils/diff.js"],"names":["_each","module","watch","require","v","_isArray","_isPlainObject","_keys","_noop","_union","EJSON","diff","args","fieldName","newDoc","oldDoc","prefix","result","onDiff","onObjectDiff","onListDiff","onScalarDiff","fieldsNames","oldValue","newValue","equals","nestedPrefix","oldList","newList","exportDefault"],"mappings":"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","sourcesContent":["import _each from 'lodash/each';\nimport _isArray from 'lodash/isArray';\nimport _isPlainObject from 'lodash/isPlainObject';\nimport _keys from 'lodash/keys';\nimport _noop from 'lodash/noop';\nimport _union from 'lodash/union';\nimport { EJSON } from 'meteor/ejson';\n\nfunction diff(args = {}) {\n  const {\n    fieldName,\n    newDoc,\n    oldDoc,\n    prefix = '',\n    result,\n    onDiff = _noop,\n    onObjectDiff = _noop,\n    onListDiff = _noop,\n    onScalarDiff = _noop,\n  } = args;\n\n  // Combine fields from old and new document.\n  const fieldsNames = _union(_keys(oldDoc), _keys(newDoc));\n\n  // Loop through all fields and check if they differ.\n  _each(fieldsNames, function(fieldName) {\n    const oldValue = oldDoc[fieldName];\n    const newValue = newDoc[fieldName];\n\n    if (!EJSON.equals(oldValue, newValue)) {\n      const nestedPrefix = (prefix && prefix + '.') + fieldName;\n\n      onDiff({\n        oldValue,\n        newValue,\n        prefix: nestedPrefix,\n        result\n      });\n\n      // Compare two objects.\n      if (_isPlainObject(oldValue) && _isPlainObject(newValue)) {\n        onObjectDiff({\n          oldDoc: oldValue,\n          newDoc: newValue,\n          prefix: nestedPrefix,\n          result\n        });\n      }\n      // Compare two lists.\n      else if (_isArray(oldValue) && _isArray(newValue)) {\n        onListDiff({\n          oldList: oldValue,\n          newList: newValue,\n          prefix: nestedPrefix,\n          result\n        });\n      }\n      // Compare two scalars.\n      else {\n        onScalarDiff({\n          oldValue,\n          newValue,\n          prefix: nestedPrefix,\n          result\n        });\n      }\n    }\n  });\n}\n\nexport default diff;"]},"sourceType":"script","hash":"f36efd9e39c23c8d4272b490382166e01df8d32a"}
