{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\validators\\hooks\\apply_definition.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/modules/validators/hooks/apply_definition.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\validators\\hooks\\apply_definition.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\validators\\hooks\\apply_definition.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/modules/validators/hooks/apply_definition.js"}},"code":"let _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  default(v) {\n    _each = v;\n  }\n\n}, 0);\n\nlet _zipObject;\n\nmodule.watch(require(\"lodash/zipObject\"), {\n  default(v) {\n    _zipObject = v;\n  }\n\n}, 1);\nlet hasMeteorMethod;\nmodule.watch(require(\"../../storage/utils/has_meteor_method.js\"), {\n  default(v) {\n    hasMeteorMethod = v;\n  }\n\n}, 2);\nlet meteorValidate;\nmodule.watch(require(\"../meteor_methods/validate.js\"), {\n  default(v) {\n    meteorValidate = v;\n  }\n\n}, 3);\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n  _each(parsedDefinition.validators, function (validators, fieldName) {\n    Class.schema.validators[fieldName] = Class.schema.validators[fieldName] || [];\n\n    _each(validators, function (validator) {\n      Class.schema.validators[fieldName] = Class.schema.validators[fieldName].concat(validator);\n    });\n  }); // Add the \"/Astronomy/validate\" meteor method only when a class has assigned\n  // collection.\n\n\n  let Collection = Class.getCollection(); // If it's a remote collection then we register methods on the connection\n  // object of the collection.\n\n  let connection = Collection && Collection._connection; // If it's not a remote collection than use main Meteor connection.\n\n  if (!connection && (!Collection || !Collection._name)) {\n    connection = Meteor.connection || Meteor.server;\n  }\n\n  if (connection) {\n    // Prepare meteor methods to be added.\n    let meteorMethods = {\n      '/Astronomy/validate': meteorValidate\n    };\n\n    _each(meteorMethods, (meteorMethod, methodName) => {\n      if (!hasMeteorMethod(connection, methodName)) {\n        // Add meteor method.\n        connection.methods(_zipObject([methodName], [meteorMethod]));\n      }\n    });\n  }\n\n  Class.schema.resolveError = parsedDefinition.resolveError;\n}\n\n;\nmodule.exportDefault(onApplyDefinition);","map":{"version":3,"sources":["packages/jagi:astronomy/lib/modules/validators/hooks/apply_definition.js"],"names":["_each","module","watch","require","default","v","_zipObject","hasMeteorMethod","meteorValidate","onApplyDefinition","Class","parsedDefinition","className","validators","fieldName","schema","validator","concat","Collection","getCollection","connection","_connection","_name","Meteor","server","meteorMethods","meteorMethod","methodName","methods","resolveError","exportDefault"],"mappings":"AAAA,IAAIA,KAAJ;;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACC,UAAQC,CAAR,EAAU;AAACL,YAAMK,CAAN;AAAQ;;AAApB,CAApC,EAA0D,CAA1D;;AAA6D,IAAIC,UAAJ;;AAAeL,OAAOC,KAAP,CAAaC,QAAQ,kBAAR,CAAb,EAAyC;AAACC,UAAQC,CAAR,EAAU;AAACC,iBAAWD,CAAX;AAAa;;AAAzB,CAAzC,EAAoE,CAApE;AAAuE,IAAIE,eAAJ;AAAoBN,OAAOC,KAAP,CAAaC,QAAQ,0CAAR,CAAb,EAAiE;AAACC,UAAQC,CAAR,EAAU;AAACE,sBAAgBF,CAAhB;AAAkB;;AAA9B,CAAjE,EAAiG,CAAjG;AAAoG,IAAIG,cAAJ;AAAmBP,OAAOC,KAAP,CAAaC,QAAQ,+BAAR,CAAb,EAAsD;AAACC,UAAQC,CAAR,EAAU;AAACG,qBAAeH,CAAf;AAAiB;;AAA7B,CAAtD,EAAqF,CAArF;;AAKxS,SAASI,iBAAT,CAA2BC,KAA3B,EAAkCC,gBAAlC,EAAoDC,SAApD,EAA+D;AAC7DZ,QAAMW,iBAAiBE,UAAvB,EAAmC,UAASA,UAAT,EAAqBC,SAArB,EAAgC;AACjEJ,UAAMK,MAAN,CAAaF,UAAb,CAAwBC,SAAxB,IACEJ,MAAMK,MAAN,CAAaF,UAAb,CAAwBC,SAAxB,KAAsC,EADxC;;AAEAd,UAAMa,UAAN,EAAkB,UAASG,SAAT,EAAoB;AACpCN,YAAMK,MAAN,CAAaF,UAAb,CAAwBC,SAAxB,IACEJ,MAAMK,MAAN,CAAaF,UAAb,CAAwBC,SAAxB,EAAmCG,MAAnC,CAA0CD,SAA1C,CADF;AAED,KAHD;AAID,GAPD,EAD6D,CAU7D;AACA;;;AACA,MAAIE,aAAaR,MAAMS,aAAN,EAAjB,CAZ6D,CAa7D;AACA;;AACA,MAAIC,aAAaF,cAAcA,WAAWG,WAA1C,CAf6D,CAgB7D;;AACA,MAAI,CAACD,UAAD,KAAgB,CAACF,UAAD,IAAe,CAACA,WAAWI,KAA3C,CAAJ,EAAuD;AACrDF,iBAAaG,OAAOH,UAAP,IAAqBG,OAAOC,MAAzC;AACD;;AACD,MAAIJ,UAAJ,EAAgB;AACd;AACA,QAAIK,gBAAgB;AAClB,6BAAuBjB;AADL,KAApB;;AAGAR,UAAMyB,aAAN,EAAqB,CAACC,YAAD,EAAeC,UAAf,KAA8B;AACjD,UAAI,CAACpB,gBAAgBa,UAAhB,EAA4BO,UAA5B,CAAL,EAA8C;AAC5C;AACAP,mBAAWQ,OAAX,CAAmBtB,WAAW,CAACqB,UAAD,CAAX,EAAyB,CAACD,YAAD,CAAzB,CAAnB;AACD;AACF,KALD;AAMD;;AAEDhB,QAAMK,MAAN,CAAac,YAAb,GAA4BlB,iBAAiBkB,YAA7C;AACD;;AAAA;AAvCD5B,OAAO6B,aAAP,CAyCerB,iBAzCf","sourcesContent":["import _each from 'lodash/each';\nimport _zipObject from 'lodash/zipObject';\nimport hasMeteorMethod from '../../storage/utils/has_meteor_method.js';\nimport meteorValidate from '../meteor_methods/validate.js';\n\nfunction onApplyDefinition(Class, parsedDefinition, className) {\n  _each(parsedDefinition.validators, function(validators, fieldName) {\n    Class.schema.validators[fieldName] =\n      Class.schema.validators[fieldName] || [];\n    _each(validators, function(validator) {\n      Class.schema.validators[fieldName] =\n        Class.schema.validators[fieldName].concat(validator);\n    });\n  });\n\n  // Add the \"/Astronomy/validate\" meteor method only when a class has assigned\n  // collection.\n  let Collection = Class.getCollection();\n  // If it's a remote collection then we register methods on the connection\n  // object of the collection.\n  let connection = Collection && Collection._connection;\n  // If it's not a remote collection than use main Meteor connection.\n  if (!connection && (!Collection || !Collection._name)) {\n    connection = Meteor.connection || Meteor.server;\n  }\n  if (connection) {\n    // Prepare meteor methods to be added.\n    let meteorMethods = {\n      '/Astronomy/validate': meteorValidate\n    };\n    _each(meteorMethods, (meteorMethod, methodName) => {\n      if (!hasMeteorMethod(connection, methodName)) {\n        // Add meteor method.\n        connection.methods(_zipObject([methodName], [meteorMethod]));\n      }\n    });\n  }\n\n  Class.schema.resolveError = parsedDefinition.resolveError;\n};\n\nexport default onApplyDefinition;"]},"sourceType":"script","hash":"c79363ee104553129fee861692eb7d0fcd045839"}
