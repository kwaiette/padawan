{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\validators\\validator.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/modules/validators/validator.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\validators\\validator.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\validators\\validator.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/modules/validators/validator.js"}},"code":"var ValidationError;\nmodule.watch(require(\"meteor/mdg:validation-error\"), {\n  ValidationError: function (v) {\n    ValidationError = v;\n  }\n}, 0);\nvar Validators;\nmodule.watch(require(\"./validators.js\"), {\n  \"default\": function (v) {\n    Validators = v;\n  }\n}, 1);\n\nvar Validator =\n/*#__PURE__*/\nfunction () {\n  function Validator(definition) {\n    this.name = definition.name;\n\n    if (definition.parseParam) {\n      this.parseParam = definition.parseParam;\n    }\n\n    if (definition.isValid) {\n      this.isValid = definition.isValid;\n    }\n\n    if (definition.validate) {\n      this.validate = definition.validate;\n    }\n\n    if (definition.resolveError) {\n      this.resolveError = definition.resolveError;\n    }\n  }\n\n  var _proto = Validator.prototype;\n\n  _proto.validate = function () {\n    function validate(_ref) {\n      var _this = this;\n\n      var doc = _ref.doc,\n          name = _ref.name,\n          nestedName = _ref.nestedName,\n          value = _ref.value,\n          param = _ref.param,\n          resolveParam = _ref.resolveParam,\n          message = _ref.message,\n          resolveError = _ref.resolveError;\n      // Get the class name, which will be used later for letting know what class\n      // thrown error.\n      var className = doc.constructor.getName(); // Resolve param is the \"resolveParam\" function is provided.\n\n      if (Match.test(resolveParam, Function)) {\n        param = resolveParam({\n          doc: doc,\n          name: name,\n          nestedName: nestedName,\n          value: value\n        });\n      } // Parse param type if validator has parsing function.\n\n\n      if (Match.test(this.parseParam, Function)) {\n        this.parseParam(param);\n      } // Prepare data for validation.\n\n\n      var args = {\n        className: className,\n        doc: doc,\n        name: name,\n        nestedName: nestedName,\n        value: value,\n        param: param,\n        validator: this.name\n      }; // Perform validation.\n\n      if (!this.isValid(args)) {\n        // Prepare function for throwing validation error.\n        var throwError = function (message) {\n          // Throw error only if the error message has been successfully\n          // generated.\n          if (!message) {\n            return;\n          } // Throw error.\n\n\n          throw new ValidationError([{\n            className: className,\n            type: _this.name,\n            name: name,\n            nestedName: nestedName,\n            value: value,\n            param: param,\n            message: message\n          }], message);\n        }; // Generate error message using the \"resolveError\" function if provided.\n\n\n        if (Match.test(resolveError, Function)) {\n          throwError(resolveError(args));\n        } // Get error message from the string if provided.\n\n\n        if (Match.test(message, String)) {\n          throwError(message);\n        } // Get error by executing a class level \"resolveError\" function.\n\n\n        var Class = doc.constructor;\n        var classResolveError = Class.getResolveError();\n\n        if (classResolveError instanceof Function) {\n          throwError(classResolveError(args));\n        } // Get default error message.\n\n\n        if (this.resolveError instanceof Function) {\n          throwError(this.resolveError(args));\n        }\n\n        throwError(ValidationError.DEFAULT_REASON);\n      }\n    }\n\n    return validate;\n  }();\n\n  Validator.create = function () {\n    function create(definition) {\n      var validator = new Validator(definition);\n      Validator.validators[validator.name] = validator; // Create a validation function.\n\n      return Validators[validator.name] = function (options) {\n        validator.validate(options);\n      };\n    }\n\n    return create;\n  }();\n\n  return Validator;\n}();\n\n;\nValidator.validators = {};\nmodule.exportDefault(Validator);","map":{"version":3,"sources":["packages/jagi:astronomy/lib/modules/validators/validator.js"],"names":["ValidationError","module","watch","require","v","Validators","Validator","definition","name","parseParam","isValid","validate","resolveError","doc","nestedName","value","param","resolveParam","message","className","constructor","getName","Match","test","Function","args","validator","throwError","type","String","Class","classResolveError","getResolveError","DEFAULT_REASON","create","validators","options","exportDefault"],"mappings":"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","sourcesContent":["import { ValidationError } from 'meteor/mdg:validation-error';\nimport Validators from './validators.js';\n\nclass Validator {\n  constructor(definition) {\n    this.name = definition.name;\n    if (definition.parseParam) {\n      this.parseParam = definition.parseParam;\n    }\n    if (definition.isValid) {\n      this.isValid = definition.isValid;\n    }\n    if (definition.validate) {\n      this.validate = definition.validate;\n    }\n    if (definition.resolveError) {\n      this.resolveError = definition.resolveError;\n    }\n  }\n\n  validate({\n    doc,\n    name,\n    nestedName,\n    value,\n    param,\n    resolveParam,\n    message,\n    resolveError\n  }) {\n    // Get the class name, which will be used later for letting know what class\n    // thrown error.\n    const className = doc.constructor.getName();\n\n    // Resolve param is the \"resolveParam\" function is provided.\n    if (Match.test(resolveParam, Function)) {\n      param = resolveParam({\n        doc,\n        name,\n        nestedName,\n        value\n      });\n    }\n    // Parse param type if validator has parsing function.\n    if (Match.test(this.parseParam, Function)) {\n      this.parseParam(param);\n    }\n    // Prepare data for validation.\n    const args = {\n      className,\n      doc,\n      name,\n      nestedName,\n      value,\n      param,\n      validator: this.name\n    };\n    // Perform validation.\n    if (!this.isValid(args)) {\n      // Prepare function for throwing validation error.\n      const throwError = (message) => {\n        // Throw error only if the error message has been successfully\n        // generated.\n        if (!message) {\n          return;\n        }\n        // Throw error.\n        throw new ValidationError([{\n          className,\n          type: this.name,\n          name,\n          nestedName,\n          value,\n          param,\n          message\n        }], message);\n      };\n\n      // Generate error message using the \"resolveError\" function if provided.\n      if (Match.test(resolveError, Function)) {\n        throwError(resolveError(args));\n      }\n      // Get error message from the string if provided.\n      if (Match.test(message, String)) {\n        throwError(message);\n      }\n      // Get error by executing a class level \"resolveError\" function.\n      let Class = doc.constructor;\n      let classResolveError = Class.getResolveError();\n      if (classResolveError instanceof Function) {\n        throwError(classResolveError(args));\n      }\n      // Get default error message.\n      if (this.resolveError instanceof Function) {\n        throwError(this.resolveError(args));\n      }\n      throwError(ValidationError.DEFAULT_REASON);\n    }\n  }\n\n  static create(definition) {\n    let validator = new Validator(definition);\n    Validator.validators[validator.name] = validator;\n\n    // Create a validation function.\n    return Validators[validator.name] = function(options) {\n      validator.validate(options);\n    }\n  }\n};\n\nValidator.validators = {};\n\nexport default Validator;"]},"sourceType":"script","hash":"eb5b3da638a4327b1ef146c67531fc364df39366"}
