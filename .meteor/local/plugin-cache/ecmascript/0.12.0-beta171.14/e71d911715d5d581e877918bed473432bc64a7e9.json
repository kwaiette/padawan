{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\storage\\class_prototype_methods\\remove.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/modules/storage/class_prototype_methods/remove.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\storage\\class_prototype_methods\\remove.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","presets":[],"generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\storage\\class_prototype_methods\\remove.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/modules/storage/class_prototype_methods/remove.js"}},"code":"let documentRemove;\nmodule.watch(require(\"../utils/document_remove.js\"), {\n  default(v) {\n    documentRemove = v;\n  }\n\n}, 0);\nlet isRemote;\nmodule.watch(require(\"../utils/is_remote.js\"), {\n  default(v) {\n    isRemote = v;\n  }\n\n}, 1);\nlet callMeteorMethod;\nmodule.watch(require(\"../utils/call_meteor_method.js\"), {\n  default(v) {\n    callMeteorMethod = v;\n  }\n\n}, 2);\n\nfunction remove(args = {}, callback) {\n  let doc = this;\n  let Class = doc.constructor; // If the first argument is callback function then reassign values.\n\n  if (arguments.length === 1 && Match.test(args, Function)) {\n    callback = args;\n    args = {};\n  } // Get variables from the first argument.\n\n\n  let {\n    simulation = true\n  } = args; // If we are dealing with a remote collection and we are not on the server.\n\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    let methodName = '/Astronomy/remove'; // Prepare arguments for the meteor method.\n\n    let methodArgs = {\n      className: Class.getName(),\n      selector: {\n        _id: doc._id\n      },\n      simulation\n    };\n\n    try {\n      // Run meteor method.\n      let result = callMeteorMethod(Class, methodName, [methodArgs], callback); // Change the \"_isNew\" flag to \"true\". After removing a document can be\n      // saved again as a new one.\n\n      doc._isNew = true; // Return result of the meteor method call.\n\n      return result;\n    } // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n\n      throw err;\n    }\n  } // If we can just remove a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n\n\n  try {\n    // Prepare arguments.\n    let methodArgs = {\n      doc,\n      simulation,\n      trusted: true\n    };\n    let result = documentRemove(methodArgs);\n\n    if (callback) {\n      callback(undefined, result);\n    }\n\n    return result;\n  } catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n\n    throw err;\n  }\n}\n\nmodule.exportDefault(remove);","map":{"version":3,"sources":["packages/jagi:astronomy/lib/modules/storage/class_prototype_methods/remove.js"],"names":["documentRemove","module","watch","require","default","v","isRemote","callMeteorMethod","remove","args","callback","doc","Class","constructor","arguments","length","Match","test","Function","simulation","methodName","methodArgs","className","getName","selector","_id","result","_isNew","err","trusted","undefined","exportDefault"],"mappings":"AAAA,IAAIA,cAAJ;AAAmBC,OAAOC,KAAP,CAAaC,QAAQ,6BAAR,CAAb,EAAoD;AAACC,UAAQC,CAAR,EAAU;AAACL,qBAAeK,CAAf;AAAiB;;AAA7B,CAApD,EAAmF,CAAnF;AAAsF,IAAIC,QAAJ;AAAaL,OAAOC,KAAP,CAAaC,QAAQ,uBAAR,CAAb,EAA8C;AAACC,UAAQC,CAAR,EAAU;AAACC,eAASD,CAAT;AAAW;;AAAvB,CAA9C,EAAuE,CAAvE;AAA0E,IAAIE,gBAAJ;AAAqBN,OAAOC,KAAP,CAAaC,QAAQ,gCAAR,CAAb,EAAuD;AAACC,UAAQC,CAAR,EAAU;AAACE,uBAAiBF,CAAjB;AAAmB;;AAA/B,CAAvD,EAAwF,CAAxF;;AAIrN,SAASG,MAAT,CAAgBC,OAAO,EAAvB,EAA2BC,QAA3B,EAAqC;AACnC,MAAIC,MAAM,IAAV;AACA,MAAIC,QAAQD,IAAIE,WAAhB,CAFmC,CAInC;;AACA,MAAIC,UAAUC,MAAV,KAAqB,CAArB,IAA0BC,MAAMC,IAAN,CAAWR,IAAX,EAAiBS,QAAjB,CAA9B,EAA0D;AACxDR,eAAWD,IAAX;AACAA,WAAO,EAAP;AACD,GARkC,CASnC;;;AACA,MAAI;AACFU,iBAAa;AADX,MAEAV,IAFJ,CAVmC,CAcnC;;AACA,MAAIH,SAASM,KAAT,CAAJ,EAAqB;AACnB;AACA,QAAIQ,aAAa,mBAAjB,CAFmB,CAGnB;;AACA,QAAIC,aAAa;AACfC,iBAAWV,MAAMW,OAAN,EADI;AAEfC,gBAAU;AACRC,aAAKd,IAAIc;AADD,OAFK;AAKfN;AALe,KAAjB;;AAQA,QAAI;AACF;AACA,UAAIO,SAASnB,iBACXK,KADW,EACJQ,UADI,EACQ,CAACC,UAAD,CADR,EACsBX,QADtB,CAAb,CAFE,CAKF;AACA;;AACAC,UAAIgB,MAAJ,GAAa,IAAb,CAPE,CAQF;;AACA,aAAOD,MAAP;AACD,KAVD,CAWA;AACA,WAAOE,GAAP,EAAY;AACV,UAAIlB,QAAJ,EAAc;AACZA,iBAASkB,GAAT;AACA,eAAO,IAAP;AACD;;AACD,YAAMA,GAAN;AACD;AACF,GA9CkC,CAgDnC;AACA;;;AACA,MAAI;AACF;AACA,QAAIP,aAAa;AACfV,SADe;AAEfQ,gBAFe;AAGfU,eAAS;AAHM,KAAjB;AAKA,QAAIH,SAAS1B,eAAeqB,UAAf,CAAb;;AACA,QAAIX,QAAJ,EAAc;AACZA,eAASoB,SAAT,EAAoBJ,MAApB;AACD;;AACD,WAAOA,MAAP;AACD,GAZD,CAaA,OAAOE,GAAP,EAAY;AACV,QAAIlB,QAAJ,EAAc;AACZA,eAASkB,GAAT;AACA,aAAO,IAAP;AACD;;AACD,UAAMA,GAAN;AACD;AACF;;AA1ED3B,OAAO8B,aAAP,CA4EevB,MA5Ef","sourcesContent":["import documentRemove from '../utils/document_remove.js';\nimport isRemote from '../utils/is_remote.js';\nimport callMeteorMethod from '../utils/call_meteor_method.js';\n\nfunction remove(args = {}, callback) {\n  let doc = this;\n  let Class = doc.constructor;\n\n  // If the first argument is callback function then reassign values.\n  if (arguments.length === 1 && Match.test(args, Function)) {\n    callback = args;\n    args = {};\n  }\n  // Get variables from the first argument.\n  let {\n    simulation = true\n  } = args;\n\n  // If we are dealing with a remote collection and we are not on the server.\n  if (isRemote(Class)) {\n    // Prepare meteor method name to be called.\n    let methodName = '/Astronomy/remove';\n    // Prepare arguments for the meteor method.\n    let methodArgs = {\n      className: Class.getName(),\n      selector: {\n        _id: doc._id\n      },\n      simulation\n    };\n\n    try {\n      // Run meteor method.\n      let result = callMeteorMethod(\n        Class, methodName, [methodArgs], callback\n      );\n      // Change the \"_isNew\" flag to \"true\". After removing a document can be\n      // saved again as a new one.\n      doc._isNew = true;\n      // Return result of the meteor method call.\n      return result;\n    }\n    // Catch stub exceptions.\n    catch (err) {\n      if (callback) {\n        callback(err);\n        return null;\n      }\n      throw err;\n    }\n  }\n\n  // If we can just remove a document without calling the meteor method. We may\n  // be on the server or the collection may be local.\n  try {\n    // Prepare arguments.\n    let methodArgs = {\n      doc,\n      simulation,\n      trusted: true\n    };\n    let result = documentRemove(methodArgs);\n    if (callback) {\n      callback(undefined, result);\n    }\n    return result;\n  }\n  catch (err) {\n    if (callback) {\n      callback(err);\n      return null;\n    }\n    throw err;\n  }\n}\n\nexport default remove;"]},"sourceType":"script","hash":"e71d911715d5d581e877918bed473432bc64a7e9"}
