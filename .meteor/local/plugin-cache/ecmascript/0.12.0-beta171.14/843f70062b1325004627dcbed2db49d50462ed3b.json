{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":false}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"FunctionExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"ForInStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$6","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"ArrowFunctionExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"BlockStatement":{"enter":[null]},"SwitchCase":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$4","visitor":{"VariableDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"_exploded":true,"BlockStatement":{"enter":[null]},"SwitchStatement":{"enter":[null]},"Program":{"enter":[null]},"_verified":true,"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$5","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$6","visitor":{"ObjectExpression":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$7","visitor":{"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"VariableDeclaration":{"enter":[null]},"_exploded":true,"_verified":true,"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$9","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"ObjectExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$11","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$12","visitor":{"ObjectMethod":{"enter":[null]},"ObjectProperty":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$13","visitor":{"ArrayExpression":{"enter":[null]},"CallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$14","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$15","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$16","visitor":{"UnaryExpression":{"enter":[null]},"_exploded":true,"_verified":true,"BlockStatement":{"enter":[null]},"CatchClause":{"enter":[null]},"DoWhileStatement":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForStatement":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"Program":{"enter":[null]},"ObjectMethod":{"enter":[null]},"SwitchStatement":{"enter":[null]},"WhileStatement":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"ForOfStatement":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$17","visitor":{"RegExpLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$18","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$19","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$20","visitor":{"ObjectProperty":{"exit":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$21","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$22","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$23","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"regenerator-transform","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\storage\\utils\\document_insert.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/modules/storage/utils/document_insert.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\storage\\utils\\document_insert.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\storage\\utils\\document_insert.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/modules/storage/utils/document_insert.js"}},"code":"var _omitBy;\n\nmodule.watch(require(\"lodash/omitBy\"), {\n  \"default\": function (v) {\n    _omitBy = v;\n  }\n}, 0);\nvar castNested;\nmodule.watch(require(\"../../fields/utils/castNested\"), {\n  \"default\": function (v) {\n    castNested = v;\n  }\n}, 1);\nvar rawAll;\nmodule.watch(require(\"../../fields/utils/rawAll\"), {\n  \"default\": function (v) {\n    rawAll = v;\n  }\n}, 2);\nvar triggerBeforeSave;\nmodule.watch(require(\"./trigger_before_save\"), {\n  \"default\": function (v) {\n    triggerBeforeSave = v;\n  }\n}, 3);\nvar triggerBeforeInsert;\nmodule.watch(require(\"./trigger_before_insert\"), {\n  \"default\": function (v) {\n    triggerBeforeInsert = v;\n  }\n}, 4);\nvar triggerAfterSave;\nmodule.watch(require(\"./trigger_after_save\"), {\n  \"default\": function (v) {\n    triggerAfterSave = v;\n  }\n}, 5);\nvar triggerAfterInsert;\nmodule.watch(require(\"./trigger_after_insert\"), {\n  \"default\": function (v) {\n    triggerAfterInsert = v;\n  }\n}, 6);\nvar documentValidate;\nmodule.watch(require(\"../../validators/utils/document_validate\"), {\n  \"default\": function (v) {\n    documentValidate = v;\n  }\n}, 7);\n\nfunction documentInsert() {\n  var args = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var doc = args.doc,\n      stopOnFirstError = args.stopOnFirstError,\n      fields = args.fields,\n      _args$simulation = args.simulation,\n      simulation = _args$simulation === void 0 ? true : _args$simulation,\n      _args$trusted = args.trusted,\n      trusted = _args$trusted === void 0 ? false : _args$trusted; // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  var Class = doc.constructor;\n  var Collection = Class.getCollection(); // Generate ID if not provided.\n\n  if (!doc._id) {\n    doc._id = Collection._makeNewID();\n  } // Check if a class is secured.\n\n\n  if (Class.isSecured('insert') && Meteor.isServer && !trusted) {\n    throw new Meteor.Error(403, 'Inserting from the client is not allowed');\n  } // Cast nested documents.\n\n\n  castNested({\n    doc: doc,\n    options: {\n      clone: false\n    }\n  }); // Trigger before events.\n\n  triggerBeforeSave(doc, trusted);\n  triggerBeforeInsert(doc, trusted); // Cast nested documents.\n\n  castNested({\n    doc: doc,\n    options: {\n      clone: false\n    }\n  }); // Validate a document.\n\n  documentValidate({\n    doc: doc,\n    fields: fields,\n    stopOnFirstError: stopOnFirstError,\n    simulation: simulation\n  }); // Get plain values of all fields. Pick only values that we want to save.\n\n  var values = rawAll(doc, {\n    \"transient\": false\n  });\n  values = _omitBy(values, function (value) {\n    return value === undefined;\n  }); // Insert a document.\n\n  try {\n    // There is a difference in what the insert method returns depending on the\n    // environment. On the client it returns an inserted document id, on the\n    // server it returns array of inserted documents. So we always return the\n    // generated id. We can't send an entire document because it could be a\n    // security issue if we are not subscribed to all fields of a document.\n    Collection._collection.insert(values); // Change the \"_isNew\" flag to \"false\". Mark a document as not new.\n\n\n    doc._isNew = false; // Trigger after events.\n\n    triggerAfterInsert(doc, trusted);\n    triggerAfterSave(doc, trusted);\n    return doc._id;\n  } catch (err) {\n    if (err.name === 'MongoError' || err.name === 'MinimongoError') {\n      throw new Meteor.Error(409, err.toString());\n    } else {\n      throw err;\n    }\n  }\n}\n\n;\nmodule.exportDefault(documentInsert);","map":{"version":3,"sources":["packages/jagi:astronomy/lib/modules/storage/utils/document_insert.js"],"names":["_omitBy","module","watch","require","v","castNested","rawAll","triggerBeforeSave","triggerBeforeInsert","triggerAfterSave","triggerAfterInsert","documentValidate","documentInsert","args","doc","stopOnFirstError","fields","simulation","trusted","Meteor","isServer","Class","constructor","Collection","getCollection","_id","_makeNewID","isSecured","Error","options","clone","values","value","undefined","_collection","insert","_isNew","err","name","toString","exportDefault"],"mappings":"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","sourcesContent":["import _omitBy from 'lodash/omitBy';\nimport castNested from '../../fields/utils/castNested';\nimport rawAll from '../../fields/utils/rawAll';\nimport triggerBeforeSave from './trigger_before_save';\nimport triggerBeforeInsert from './trigger_before_insert';\nimport triggerAfterSave from './trigger_after_save';\nimport triggerAfterInsert from './trigger_after_insert';\nimport documentValidate from '../../validators/utils/document_validate';\n\nfunction documentInsert(args = {}) {\n  const {\n    doc,\n    stopOnFirstError,\n    fields,\n    simulation = true,\n    trusted = false\n  } = args;\n\n  // Stop execution, if we are not on the server, when the \"simulation\" flag is\n  // not set.\n  if (!simulation && !Meteor.isServer) {\n    return;\n  }\n\n  const Class = doc.constructor;\n  const Collection = Class.getCollection();\n\n  // Generate ID if not provided.\n  if (!doc._id) {\n    doc._id = Collection._makeNewID();\n  }\n\n  // Check if a class is secured.\n  if (Class.isSecured('insert') && Meteor.isServer && !trusted) {\n    throw new Meteor.Error(403, 'Inserting from the client is not allowed');\n  }\n\n  // Cast nested documents.\n  castNested({\n    doc,\n    options: {\n      clone: false\n    }\n  });\n\n  // Trigger before events.\n  triggerBeforeSave(doc, trusted);\n  triggerBeforeInsert(doc, trusted);\n\n  // Cast nested documents.\n  castNested({\n    doc,\n    options: {\n      clone: false\n    }\n  });\n\n  // Validate a document.\n  documentValidate({\n    doc,\n    fields,\n    stopOnFirstError,\n    simulation\n  });\n\n  // Get plain values of all fields. Pick only values that we want to save.\n  let values = rawAll(doc, {\n    transient: false\n  });\n  values = _omitBy(values, (value) => value === undefined);\n\n  // Insert a document.\n  try {\n    // There is a difference in what the insert method returns depending on the\n    // environment. On the client it returns an inserted document id, on the\n    // server it returns array of inserted documents. So we always return the\n    // generated id. We can't send an entire document because it could be a\n    // security issue if we are not subscribed to all fields of a document.\n    Collection._collection.insert(values);\n\n    // Change the \"_isNew\" flag to \"false\". Mark a document as not new.\n    doc._isNew = false;\n\n    // Trigger after events.\n    triggerAfterInsert(doc, trusted);\n    triggerAfterSave(doc, trusted);\n\n    return doc._id;\n  }\n  catch(err) {\n    if (err.name === 'MongoError' || err.name === 'MinimongoError') {\n      throw new Meteor.Error(409, err.toString());\n    }\n    else {\n      throw err;\n    }\n  }\n};\n\nexport default documentInsert;\n"]},"sourceType":"script","hash":"843f70062b1325004627dcbed2db49d50462ed3b"}
