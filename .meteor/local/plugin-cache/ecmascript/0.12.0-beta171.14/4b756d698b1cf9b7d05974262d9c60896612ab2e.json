{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\fields\\types\\date.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/modules/fields/types/date.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\fields\\types\\date.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\fields\\types\\date.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/modules/fields/types/date.js"}},"code":"let _isNaN;\n\nmodule.watch(require(\"lodash/isNaN\"), {\n  default(v) {\n    _isNaN = v;\n  }\n\n}, 0);\n\nlet _isNumber;\n\nmodule.watch(require(\"lodash/isNumber\"), {\n  default(v) {\n    _isNumber = v;\n  }\n\n}, 1);\nlet Type;\nmodule.watch(require(\"../type.js\"), {\n  default(v) {\n    Type = v;\n  }\n\n}, 2);\nlet Validators;\nmodule.watch(require(\"../../validators/validators.js\"), {\n  default(v) {\n    Validators = v;\n  }\n\n}, 3);\nType.create({\n  name: 'Date',\n  class: Date,\n\n  cast(value) {\n    if (_isNumber(value)) {\n      return new Date(value);\n    } else if (typeof value === 'string') {\n      if (value === '') {\n        // The \"this\" context is a field.\n        if (this.optional) {\n          return null;\n        }\n      } else if (/^[0-9]+$/.test(value)) {\n        return new Date(parseInt(value, 10));\n      } else {\n        const time = Date.parse(value);\n\n        if (!_isNaN(time)) {\n          return new Date(time);\n        }\n      }\n    }\n\n    return value;\n  },\n\n  validate(args) {\n    Validators.date(args);\n  }\n\n});","map":{"version":3,"sources":["packages/jagi:astronomy/lib/modules/fields/types/date.js"],"names":["_isNaN","module","watch","require","default","v","_isNumber","Type","Validators","create","name","class","Date","cast","value","optional","test","parseInt","time","parse","validate","args","date"],"mappings":"AAAA,IAAIA,MAAJ;;AAAWC,OAAOC,KAAP,CAAaC,QAAQ,cAAR,CAAb,EAAqC;AAACC,UAAQC,CAAR,EAAU;AAACL,aAAOK,CAAP;AAAS;;AAArB,CAArC,EAA4D,CAA5D;;AAA+D,IAAIC,SAAJ;;AAAcL,OAAOC,KAAP,CAAaC,QAAQ,iBAAR,CAAb,EAAwC;AAACC,UAAQC,CAAR,EAAU;AAACC,gBAAUD,CAAV;AAAY;;AAAxB,CAAxC,EAAkE,CAAlE;AAAqE,IAAIE,IAAJ;AAASN,OAAOC,KAAP,CAAaC,QAAQ,YAAR,CAAb,EAAmC;AAACC,UAAQC,CAAR,EAAU;AAACE,WAAKF,CAAL;AAAO;;AAAnB,CAAnC,EAAwD,CAAxD;AAA2D,IAAIG,UAAJ;AAAeP,OAAOC,KAAP,CAAaC,QAAQ,gCAAR,CAAb,EAAuD;AAACC,UAAQC,CAAR,EAAU;AAACG,iBAAWH,CAAX;AAAa;;AAAzB,CAAvD,EAAkF,CAAlF;AAKhPE,KAAKE,MAAL,CAAY;AACVC,QAAM,MADI;AAEVC,SAAOC,IAFG;;AAGVC,OAAKC,KAAL,EAAY;AACV,QAAIR,UAAUQ,KAAV,CAAJ,EAAsB;AACpB,aAAO,IAAIF,IAAJ,CAASE,KAAT,CAAP;AACD,KAFD,MAGK,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAClC,UAAIA,UAAU,EAAd,EAAkB;AAChB;AACA,YAAI,KAAKC,QAAT,EAAmB;AACjB,iBAAO,IAAP;AACD;AACF,OALD,MAMK,IAAI,WAAWC,IAAX,CAAgBF,KAAhB,CAAJ,EAA4B;AAC/B,eAAO,IAAIF,IAAJ,CAASK,SAASH,KAAT,EAAgB,EAAhB,CAAT,CAAP;AACD,OAFI,MAGA;AACH,cAAMI,OAAON,KAAKO,KAAL,CAAWL,KAAX,CAAb;;AACA,YAAI,CAACd,OAAOkB,IAAP,CAAL,EAAmB;AACjB,iBAAO,IAAIN,IAAJ,CAASM,IAAT,CAAP;AACD;AACF;AACF;;AACD,WAAOJ,KAAP;AACD,GAzBS;;AA0BVM,WAASC,IAAT,EAAe;AACbb,eAAWc,IAAX,CAAgBD,IAAhB;AACD;;AA5BS,CAAZ","sourcesContent":["import _isNaN from 'lodash/isNaN';\nimport _isNumber from 'lodash/isNumber';\nimport Type from '../type.js';\nimport Validators from '../../validators/validators.js';\n\nType.create({\n  name: 'Date',\n  class: Date,\n  cast(value) {\n    if (_isNumber(value)) {\n      return new Date(value);\n    }\n    else if (typeof value === 'string') {\n      if (value === '') {\n        // The \"this\" context is a field.\n        if (this.optional) {\n          return null;\n        }\n      }\n      else if (/^[0-9]+$/.test(value)) {\n        return new Date(parseInt(value, 10));\n      }\n      else {\n        const time = Date.parse(value);\n        if (!_isNaN(time)) {\n          return new Date(time);\n        }\n      }\n    }\n    return value;\n  },\n  validate(args) {\n    Validators.date(args);\n  }\n});"]},"sourceType":"script","hash":"4b756d698b1cf9b7d05974262d9c60896612ab2e"}
