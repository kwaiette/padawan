{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\events\\hooks\\parse_definition.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"packages/jagi:astronomy/lib/modules/events/hooks/parse_definition.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\events\\hooks\\parse_definition.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","presets":[],"generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\packages\\jagi:astronomy\\lib\\modules\\events\\hooks\\parse_definition.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"packages/jagi:astronomy/lib/modules/events/hooks/parse_definition.js"}},"code":"let _each;\n\nmodule.watch(require(\"lodash/each\"), {\n  default(v) {\n    _each = v;\n  }\n\n}, 0);\nlet throwParseError;\nmodule.watch(require(\"../../core/utils/throw_parse_error.js\"), {\n  default(v) {\n    throwParseError = v;\n  }\n\n}, 1);\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  // Check existence and validity of the \"events\" property.\n  if (definition.events !== undefined) {\n    _each(definition.events, function (eventHandlers, eventName) {\n      eventName = eventName.toLowerCase(); // Check if the event definition is an array of functions.\n\n      if (!Match.test(eventHandlers, Match.OneOf(Function, [Function]))) {\n        throwParseError([{\n          'class': className\n        }, {\n          'event': eventName\n        }, 'Event handler has to be a function or an array of functions']);\n      } // Convert function to array of functions.\n\n\n      if (Match.test(eventHandlers, Function)) {\n        eventHandlers = [eventHandlers];\n      }\n\n      parsedDefinition.events[eventName] = eventHandlers;\n    });\n  }\n}\n\n;\nmodule.exportDefault(onParseDefinition);","map":{"version":3,"sources":["packages/jagi:astronomy/lib/modules/events/hooks/parse_definition.js"],"names":["_each","module","watch","require","default","v","throwParseError","onParseDefinition","parsedDefinition","definition","className","events","undefined","eventHandlers","eventName","toLowerCase","Match","test","OneOf","Function","exportDefault"],"mappings":"AAAA,IAAIA,KAAJ;;AAAUC,OAAOC,KAAP,CAAaC,QAAQ,aAAR,CAAb,EAAoC;AAACC,UAAQC,CAAR,EAAU;AAACL,YAAMK,CAAN;AAAQ;;AAApB,CAApC,EAA0D,CAA1D;AAA6D,IAAIC,eAAJ;AAAoBL,OAAOC,KAAP,CAAaC,QAAQ,uCAAR,CAAb,EAA8D;AAACC,UAAQC,CAAR,EAAU;AAACC,sBAAgBD,CAAhB;AAAkB;;AAA9B,CAA9D,EAA8F,CAA9F;;AAG3F,SAASE,iBAAT,CAA2BC,gBAA3B,EAA6CC,UAA7C,EAAyDC,SAAzD,EAAoE;AAClE;AACA,MAAID,WAAWE,MAAX,KAAsBC,SAA1B,EAAqC;AACnCZ,UAAMS,WAAWE,MAAjB,EAAyB,UAASE,aAAT,EAAwBC,SAAxB,EAAmC;AAC1DA,kBAAYA,UAAUC,WAAV,EAAZ,CAD0D,CAE1D;;AACA,UAAI,CAACC,MAAMC,IAAN,CAAWJ,aAAX,EAA0BG,MAAME,KAAN,CAAYC,QAAZ,EAAsB,CAACA,QAAD,CAAtB,CAA1B,CAAL,EAAmE;AACjEb,wBAAgB,CAAC;AACb,mBAASI;AADI,SAAD,EAEX;AACD,mBAASI;AADR,SAFW,EAKd,6DALc,CAAhB;AAOD,OAXyD,CAY1D;;;AACA,UAAIE,MAAMC,IAAN,CAAWJ,aAAX,EAA0BM,QAA1B,CAAJ,EAAyC;AACvCN,wBAAgB,CAACA,aAAD,CAAhB;AACD;;AACDL,uBAAiBG,MAAjB,CAAwBG,SAAxB,IAAqCD,aAArC;AACD,KAjBD;AAkBD;AACF;;AAAA;AAzBDZ,OAAOmB,aAAP,CA2Beb,iBA3Bf","sourcesContent":["import _each from 'lodash/each';\nimport throwParseError from '../../core/utils/throw_parse_error.js';\n\nfunction onParseDefinition(parsedDefinition, definition, className) {\n  // Check existence and validity of the \"events\" property.\n  if (definition.events !== undefined) {\n    _each(definition.events, function(eventHandlers, eventName) {\n      eventName = eventName.toLowerCase();\n      // Check if the event definition is an array of functions.\n      if (!Match.test(eventHandlers, Match.OneOf(Function, [Function]))) {\n        throwParseError([{\n            'class': className\n          }, {\n            'event': eventName\n          },\n          'Event handler has to be a function or an array of functions'\n        ]);\n      }\n      // Convert function to array of functions.\n      if (Match.test(eventHandlers, Function)) {\n        eventHandlers = [eventHandlers];\n      }\n      parsedDefinition.events[eventName] = eventHandlers;\n    });\n  }\n};\n\nexport default onParseDefinition;"]},"sourceType":"script","hash":"9eed4d07d4d594adfa120554db7255ead4376f24"}
