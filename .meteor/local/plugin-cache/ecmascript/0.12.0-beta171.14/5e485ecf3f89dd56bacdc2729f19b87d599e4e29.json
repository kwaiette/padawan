{"metadata":{},"options":{"plugins":[{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$2","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$3","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}},{"key":"base$0$4","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$0$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$0","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$2","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$3","visitor":{"ForOfStatement":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"loose":true}},{"key":"base$0$0$4","visitor":{"NumericLiteral":{"enter":[null]},"StringLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$5","visitor":{"TaggedTemplateExpression":{"enter":[null]},"TemplateLiteral":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$6","visitor":{"_exploded":true,"_verified":true,"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]}},"options":{}},{"key":"base$0$0$7","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"base$0$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$0$9","visitor":{"AssignmentExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0$10","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}}],"presets":[],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\ui\\components\\notification_list\\notification_list.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","dynamicImport","classProperties","classPrivateProperties","jsx",["flow",{}],"asyncGenerators","objectRestSpread","objectRestSpread",["flow",{}],"asyncGenerators"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/ui/components/notification_list/notification_list.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\ui\\components\\notification_list\\notification_list.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\ui\\components\\notification_list\\notification_list.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/ui/components/notification_list/notification_list.js"}},"code":"let UserNotify;\nmodule.watch(require(\"/imports/api/user_notify/user_notify.js\"), {\n  UserNotify(v) {\n    UserNotify = v;\n  }\n\n}, 0);\nmodule.watch(require(\"./notification_list.html\"));\n\nfunction notificationClickAct(action) {\n  console.log(action);\n\n  switch (action[0]) {\n    case \"learnshare\":\n      FlowRouter.go('/learnShare/' + action[1]);\n      break;\n\n    case \"teams\":\n      if (action.length > 1) {\n        FlowRouter.go('/adminTeams/' + action[1]);\n      } else {\n        FlowRouter.go('/adminTeams');\n      }\n\n      break;\n\n    case \"teamgoals\":\n      FlowRouter.go('/teamGoals/' + action[1]);\n      break;\n  }\n}\n\nTemplate.notification_list.onCreated(function () {\n  this.autorun(() => {\n    console.log(\"autorunning notification_list...\");\n    this.subscription = this.subscribe('notificationList', Meteor.userId(), {\n      onStop: function () {\n        console.log(\"Notification List subscription stopped! \", arguments, this);\n      },\n      onReady: function () {\n        console.log(\"Notification List subscription ready! \", arguments, this);\n      }\n    });\n    console.log(this.subscription);\n  });\n});\nTemplate.notification_list.helpers({\n  notifications() {\n    let MAX_NOTIFICATIONS = 6;\n    let n = UserNotify.find({\n      userId: Meteor.userId()\n    }, {\n      sort: {\n        createdDate: -1\n      }\n    });\n\n    if (n) {\n      let noteList = [];\n      n.forEach(function (note) {\n        if (noteList.length < MAX_NOTIFICATIONS) {\n          noteList.push(note);\n        } else if (noteList.length === MAX_NOTIFICATIONS) {\n          noteList.push({\n            title: \"\",\n            body: \"See all notifications...\",\n            isRead: true,\n            action: \"notifications:all\"\n          });\n        }\n\n        if (!note.isPushed) {\n          if (new Date() - note.createdDate > 1000 * 60) {\n            //too old, don't send push notification\n            note.markNotified();\n          } else {\n            note.pushNotify({\n              onclick: function (event) {\n                let nid = event.target.data;\n                let un = UserNotify.findOne({\n                  _id: nid\n                });\n                un.markRead();\n                event.target.close();\n                notificationClickAct(un.action.split(\":\"));\n              }\n            });\n            note.markNotified();\n          }\n        }\n      });\n      return noteList;\n    } else {\n      return [];\n    }\n  },\n\n  when(note) {\n    let secondsAgo = (new Date() - note.createdDate) / 1000;\n\n    if (secondsAgo < 2) {\n      return \"Just now\";\n    } else if (secondsAgo < 60) {\n      return \"s\";\n    } else if (secondsAgo < 60 * 60) {\n      return parseInt(secondsAgo / 60) + \"m\";\n    } else if (secondsAgo < 60 * 60 * 24) {\n      return parseInt(secondsAgo / (60 * 60)) + \"h\";\n    } else if (typeof note.createdDate !== 'undefined') {\n      return note.createdDate.toLocaleDateString(\"en-US\");\n    } else {\n      return \"\";\n    }\n  },\n\n  read(is) {\n    if (is) {\n      //return \"list-group-item-secondary\";\n      return \"\";\n    } else {\n      return \"list-group-item-info\";\n    }\n  },\n\n  hasUnread() {\n    let n = UserNotify.find({\n      userId: Meteor.userId(),\n      isRead: false\n    });\n\n    if (n && n.fetch().length) {\n      return \"unread\";\n    } else {\n      return \"\";\n    }\n  }\n\n});\nTemplate.notification_list.events({\n  'click a.notification'(event, instance) {\n    event.preventDefault();\n    let $target = $(event.target);\n    let $li = $target.closest(\"[data-action]\");\n    let noteActionStr = $li.data(\"action\");\n    let nid = $li.data(\"nid\");\n    let noteAction = noteActionStr.split(\":\");\n    let un = UserNotify.findOne({\n      _id: nid\n    });\n    un.markRead();\n    notificationClickAct(noteAction);\n  }\n\n});","map":{"version":3,"sources":["imports/ui/components/notification_list/notification_list.js"],"names":["UserNotify","module","watch","require","v","notificationClickAct","action","console","log","FlowRouter","go","length","Template","notification_list","onCreated","autorun","subscription","subscribe","Meteor","userId","onStop","arguments","onReady","helpers","notifications","MAX_NOTIFICATIONS","n","find","sort","createdDate","noteList","forEach","note","push","title","body","isRead","isPushed","Date","markNotified","pushNotify","onclick","event","nid","target","data","un","findOne","_id","markRead","close","split","when","secondsAgo","parseInt","toLocaleDateString","read","is","hasUnread","fetch","events","instance","preventDefault","$target","$","$li","closest","noteActionStr","noteAction"],"mappings":"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","sourcesContent":["import { UserNotify } from '/imports/api/user_notify/user_notify.js';\nimport './notification_list.html';\n\nfunction notificationClickAct(action) {\n    console.log(action);\n    switch (action[0]) {\n    case \"learnshare\":\n        FlowRouter.go('/learnShare/'+action[1]);\n        break;\n    case \"teams\":\n        if (action.length > 1) {\n            FlowRouter.go('/adminTeams/'+action[1]);\n        } else {\n            FlowRouter.go('/adminTeams');\n        }\n        break;\n    case \"teamgoals\":\n        FlowRouter.go('/teamGoals/'+action[1]);\n        break;\n    }\n}\n\nTemplate.notification_list.onCreated(function () {\n    this.autorun( () => {\n        console.log(\"autorunning notification_list...\");\n        this.subscription = this.subscribe('notificationList', Meteor.userId(), {\n            onStop: function () {\n                console.log(\"Notification List subscription stopped! \", arguments, this);\n            },\n            onReady: function () {\n                console.log(\"Notification List subscription ready! \", arguments, this);\n            }\n        });\n        console.log(this.subscription);\n    });\n});\n\nTemplate.notification_list.helpers({\n    notifications() {\n        let MAX_NOTIFICATIONS = 6;\n        let n = UserNotify.find(\n            {userId: Meteor.userId()},\n            {sort: {createdDate: -1} }\n        );\n        if (n) {\n            let noteList = [];\n            n.forEach(function (note) {\n                if (noteList.length < MAX_NOTIFICATIONS) {\n                    noteList.push(note);\n                } else if (noteList.length === MAX_NOTIFICATIONS) {\n                    noteList.push({\n                        title: \"\",\n                        body: \"See all notifications...\",\n                        isRead: true,\n                        action: \"notifications:all\"\n                    })\n                }\n                if (!note.isPushed) {\n                    if ( (new Date()) - note.createdDate > 1000*60) {\n                        //too old, don't send push notification\n                        note.markNotified();\n                    } else {\n                        note.pushNotify({onclick: function(event) {\n                            let nid = event.target.data;\n                            let un = UserNotify.findOne( {_id:nid} );\n                            un.markRead();\n                            event.target.close();\n                            notificationClickAct(un.action.split(\":\"));\n                        }});\n                        note.markNotified();\n                    }\n                }\n            });\n            return noteList;\n        } else {\n            return [];\n        }\n    },\n    when(note) {\n        let secondsAgo = ( (new Date()) - note.createdDate ) / 1000;\n        if (secondsAgo < 2) {\n            return \"Just now\";\n        } else if (secondsAgo < 60) {\n            return \"s\";\n        } else if (secondsAgo < 60*60) {\n            return parseInt(secondsAgo/60) + \"m\";\n        } else if (secondsAgo < 60*60*24) {\n            return parseInt(secondsAgo/(60*60)) + \"h\";\n        } else if (typeof note.createdDate !== 'undefined'){\n            return note.createdDate.toLocaleDateString(\"en-US\");\n        } else {\n            return \"\";\n        }\n    },\n    read(is) {\n        if (is) {\n            //return \"list-group-item-secondary\";\n            return \"\";\n        } else {\n            return \"list-group-item-info\";\n        }\n    },\n    hasUnread() {\n        let n = UserNotify.find( {userId: Meteor.userId(), isRead: false} );\n        if (n && n.fetch().length) {\n            return \"unread\";\n        } else {\n            return \"\";\n        }\n    }\n});\n\nTemplate.notification_list.events({\n    'click a.notification'(event, instance) {\n        event.preventDefault();\n        let $target = $(event.target);\n        let $li = $target.closest(\"[data-action]\");\n        let noteActionStr = $li.data(\"action\");\n        let nid = $li.data(\"nid\");\n        let noteAction = noteActionStr.split(\":\");\n\n        let un = UserNotify.findOne( {_id:nid} );\n        un.markRead();\n\n        notificationClickAct(noteAction);\n    }\n});\n"]},"sourceType":"script","hash":"5e485ecf3f89dd56bacdc2729f19b87d599e4e29"}
