{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\api\\teams\\server\\publications.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/api/teams/server/publications.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\api\\teams\\server\\publications.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","presets":[],"generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\api\\teams\\server\\publications.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/teams/server/publications.js"}},"code":"let Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Team;\nmodule.watch(require(\"../teams.js\"), {\n  Team(v) {\n    Team = v;\n  }\n\n}, 1);\nlet User;\nmodule.watch(require(\"../../users/users.js\"), {\n  User(v) {\n    User = v;\n  }\n\n}, 2);\nMeteor.publish('teamsData', function () {\n  if (this.userId) {\n    return Team.find({\n      $or: [{\n        Public: true\n      }, {\n        Members: Meteor.userId()\n      }]\n    }, {\n      fields: {\n        Name: 1,\n        Description: 1,\n        CreatedBy: 1,\n        Icon: 1,\n        Icon64: 1,\n        IconType: 1\n      }\n    });\n  } else {\n    return [];\n  }\n});\nMeteor.publish('teamsMemberOfList', userId => {\n  // if (userId == Meteor.userId() || Roles.userIsInRole(Meteor.userId(),'admin', Roles.GLOBAL_GROUP)) {\n  return Team.find({\n    Members: userId\n  }); // } else {\n  //    return [];\n  // }\n});\nMeteor.publishComposite('teamMemberList', userId => {\n  return {\n    find() {\n      let u = User.findOne({\n        _id: Meteor.userId()\n      });\n\n      if (typeof u === \"undefined\") {\n        return; // [];\n      }\n\n      let teamsList = [];\n\n      _.forEach(u.roles, (roles, team) => {\n        if (roles.indexOf('admin') > -1 || roles.indexOf('view-members')) {\n          teamsList.push(team);\n        }\n      });\n\n      let fieldsObj = {\n        Name: 1,\n        Description: 1,\n        Members: 1,\n        CreatedBy: 1,\n        Icon: 1,\n        Icon64: 1,\n        IconType: 1\n      };\n      return Team.find({\n        Name: {\n          '$in': teamsList\n        }\n      }, {\n        fields: fieldsObj\n      });\n    },\n\n    children: [{\n      find(team) {\n        if (Roles.userIsInRole(userId, ['admin', 'view-members'], team.Name) || Roles.userIsInRole(userId, 'admin', Roles.GLOBAL_GROUP)) {\n          let memberList = team.Members;\n          let reqQuery = {};\n          let fieldsObj = {};\n          fieldsObj[\"MyProfile.firstName\"] = 1;\n          fieldsObj[\"MyProfile.lastName\"] = 1;\n          fieldsObj[\"roles.\" + team.Name] = 1;\n          fieldsObj[\"teams\"] = 1;\n          reqQuery['roles.' + team.Name] = \"user-join-request\";\n          let u = User.find({\n            $or: [{\n              _id: {\n                '$in': memberList\n              }\n            }, reqQuery]\n          }, {\n            fields: fieldsObj\n          });\n          return u;\n        } else {\n          return this.ready();\n        }\n      }\n\n    }]\n  };\n});","map":{"version":3,"sources":["imports/api/teams/server/publications.js"],"names":["Meteor","module","watch","require","v","Team","User","publish","userId","find","$or","Public","Members","fields","Name","Description","CreatedBy","Icon","Icon64","IconType","publishComposite","u","findOne","_id","teamsList","_","forEach","roles","team","indexOf","push","fieldsObj","children","Roles","userIsInRole","GLOBAL_GROUP","memberList","reqQuery","ready"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Team } from '../teams.js';\nimport { User } from '../../users/users.js';\n\nMeteor.publish('teamsData', function() {\n    if (this.userId) {\n        return Team.find(\n            {\n                $or: [\n                    {Public: true},\n                    {Members: Meteor.userId()}\n                ]\n            },\n            {\n                fields: { Name: 1, Description: 1, CreatedBy: 1, Icon: 1, Icon64: 1, IconType: 1 }\n            }\n        );\n    } else {\n        return [ ];\n    }\n});\n\nMeteor.publish('teamsMemberOfList', (userId) => {\n    // if (userId == Meteor.userId() || Roles.userIsInRole(Meteor.userId(),'admin', Roles.GLOBAL_GROUP)) {\n        return Team.find( {Members: userId} );\n    // } else {\n    //    return [];\n    // }\n});\n\n\nMeteor.publishComposite('teamMemberList', (userId) => {\n    return {\n        find() {\n            let u = User.findOne( {_id: Meteor.userId()} );\n\n            if (typeof u === \"undefined\") {\n                return; // [];\n            }\n            let teamsList = [];\n            _.forEach(u.roles, (roles, team) => {\n                if (roles.indexOf('admin') > -1 || roles.indexOf('view-members')) {\n                    teamsList.push(team);\n                }\n            });\n            let fieldsObj = {\n                Name: 1,\n                Description: 1,\n                Members: 1,\n                CreatedBy: 1,\n                Icon: 1,\n                Icon64: 1,\n                IconType: 1\n            };\n\n            return Team.find( {Name: {'$in': teamsList}}, {\n                fields: fieldsObj\n            });\n        },\n        children: [{\n            find(team) {\n                if ( Roles.userIsInRole(userId, ['admin','view-members'], team.Name) || Roles.userIsInRole(userId, 'admin', Roles.GLOBAL_GROUP) ) {\n\n                    let memberList = team.Members;\n\n                    let reqQuery = {};\n                    let fieldsObj = {};\n                    fieldsObj[\"MyProfile.firstName\"] = 1;\n                    fieldsObj[\"MyProfile.lastName\"] = 1;\n                    fieldsObj[\"roles.\"+team.Name] = 1;\n                    fieldsObj[\"teams\"] = 1;\n\n                    reqQuery['roles.'+team.Name] = \"user-join-request\";\n                    let u = User.find(\n                    {\n                        $or: [\n                            { _id: { '$in': memberList } },\n                            reqQuery\n                        ]\n                    }, { fields: fieldsObj });\n                    return u;\n                } else {\n                    return this.ready();\n                }\n            }\n        }]\n    }\n});\n"]},"sourceType":"script","hash":"2f3386a652af54dc69a45da3ea6a7428b687ab19"}
