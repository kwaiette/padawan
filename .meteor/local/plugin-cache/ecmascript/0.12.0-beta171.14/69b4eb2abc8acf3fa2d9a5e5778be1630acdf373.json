{"metadata":{},"options":{"plugins":[{"key":"base$1$0","visitor":{"_exploded":{},"_verified":{},"JSXNamespacedName":{"enter":[null]},"JSXElement":{"exit":[null]},"JSXFragment":{"exit":[null]},"Program":{"enter":[null],"exit":[null]},"JSXAttribute":{"enter":[null]}},"options":{"pragma":"React.createElement","pragmaFrag":"React.Fragment","throwIfNamespace":true,"useBuiltIns":false}},{"key":"base$1$1","visitor":{"ExportDefaultDeclaration":{"enter":[null]},"CallExpression":{"enter":[null]},"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$0","visitor":{"Program":{"enter":[null]},"_exploded":true,"_verified":true},"options":{"generateLetDeclarations":true,"enforceStrictMode":false}},{"key":"base$0$1","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$2","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]},"ImportDeclaration":{"enter":[null,null]},"ClassProperty":{"enter":[null]},"AssignmentPattern":{"enter":[null]},"TypeCastExpression":{"enter":[null,null]},"CallExpression":{"enter":[null]},"OptionalCallExpression":{"enter":[null]},"NewExpression":{"enter":[null]},"ImportSpecifier":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"AnyTypeAnnotation":{"enter":[null]},"ArrayTypeAnnotation":{"enter":[null]},"BooleanTypeAnnotation":{"enter":[null]},"BooleanLiteralTypeAnnotation":{"enter":[null]},"NullLiteralTypeAnnotation":{"enter":[null]},"ClassImplements":{"enter":[null]},"DeclareClass":{"enter":[null]},"DeclareFunction":{"enter":[null]},"DeclareInterface":{"enter":[null]},"DeclareModule":{"enter":[null]},"DeclareModuleExports":{"enter":[null]},"DeclareTypeAlias":{"enter":[null]},"DeclareOpaqueType":{"enter":[null]},"DeclareVariable":{"enter":[null]},"DeclareExportDeclaration":{"enter":[null]},"DeclareExportAllDeclaration":{"enter":[null]},"DeclaredPredicate":{"enter":[null]},"ExistsTypeAnnotation":{"enter":[null]},"FunctionTypeAnnotation":{"enter":[null]},"FunctionTypeParam":{"enter":[null]},"GenericTypeAnnotation":{"enter":[null]},"InferredPredicate":{"enter":[null]},"InterfaceExtends":{"enter":[null]},"InterfaceDeclaration":{"enter":[null]},"InterfaceTypeAnnotation":{"enter":[null]},"IntersectionTypeAnnotation":{"enter":[null]},"MixedTypeAnnotation":{"enter":[null]},"EmptyTypeAnnotation":{"enter":[null]},"NullableTypeAnnotation":{"enter":[null]},"NumberLiteralTypeAnnotation":{"enter":[null]},"NumberTypeAnnotation":{"enter":[null]},"ObjectTypeAnnotation":{"enter":[null]},"ObjectTypeInternalSlot":{"enter":[null]},"ObjectTypeCallProperty":{"enter":[null]},"ObjectTypeIndexer":{"enter":[null]},"ObjectTypeProperty":{"enter":[null]},"ObjectTypeSpreadProperty":{"enter":[null]},"OpaqueType":{"enter":[null]},"QualifiedTypeIdentifier":{"enter":[null]},"StringLiteralTypeAnnotation":{"enter":[null]},"StringTypeAnnotation":{"enter":[null]},"ThisTypeAnnotation":{"enter":[null]},"TupleTypeAnnotation":{"enter":[null]},"TypeofTypeAnnotation":{"enter":[null]},"TypeAlias":{"enter":[null]},"TypeAnnotation":{"enter":[null]},"TypeParameter":{"enter":[null]},"TypeParameterDeclaration":{"enter":[null]},"TypeParameterInstantiation":{"enter":[null]},"UnionTypeAnnotation":{"enter":[null]},"Variance":{"enter":[null]},"VoidTypeAnnotation":{"enter":[null]},"ExportAllDeclaration":{"enter":[null]},"ExportDefaultDeclaration":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]}},"options":{}},{"key":"base$0$3","visitor":{"CallExpression":{"enter":[null]},"BinaryExpression":{"enter":[null]},"MemberExpression":{"enter":[null],"exit":[null]},"_exploded":true,"_verified":true,"Identifier":{"enter":[null]},"JSXIdentifier":{"enter":[null]}},"options":{"polyfill":false,"useBuiltIns":true}},{"key":"base$0$4","visitor":{"_exploded":true,"_verified":true},"options":{}},{"key":"base$0$5","visitor":{"_exploded":{},"_verified":{},"VariableDeclarator":{"enter":[null]},"ExportNamedDeclaration":{"enter":[null]},"CatchClause":{"enter":[null]},"AssignmentExpression":{"enter":[null]},"ObjectExpression":{"enter":[null]},"FunctionDeclaration":{"enter":[null]},"FunctionExpression":{"enter":[null]},"ObjectMethod":{"enter":[null]},"ArrowFunctionExpression":{"enter":[null]},"ClassMethod":{"enter":[null]},"ForInStatement":{"enter":[null]},"ForOfStatement":{"enter":[null]}},"options":{}},{"key":"transform-meteor-async-await","visitor":{"AwaitExpression":{"enter":[null]},"_exploded":true,"_verified":true,"FunctionDeclaration":{"exit":[null]},"FunctionExpression":{"exit":[null]},"ObjectMethod":{"exit":[null]},"ArrowFunctionExpression":{"exit":[null]},"ClassMethod":{"exit":[null]}},"options":{"useNativeAsyncAwait":false}},{"key":"transform-meteor-dynamic-import","visitor":{"_exploded":{},"_verified":{},"CallExpression":{"enter":[null]}},"options":{}},{"key":"base$0$8","visitor":{"_exploded":{},"_verified":{},"Program":{"enter":[null]}},"options":{}},{"key":"base$0$9","visitor":{"Program":{"exit":[null]},"_exploded":true,"_verified":true},"options":{"allowTopLevelThis":true,"strictMode":false,"loose":true}},{"key":"base$0$10","visitor":{"_exploded":{},"_verified":{},"PrivateName":{"enter":[null]},"ClassDeclaration":{"enter":[null]},"ClassExpression":{"enter":[null]}},"options":{"loose":true}}],"compact":false,"sourceMaps":true,"ast":true,"babelrc":false,"configFile":false,"parserOpts":{"sourceType":"module","sourceFileName":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\api\\user_notify\\user_notify.js","plugins":["*","flow","jsx","asyncGenerators","bigInt","classPrivateMethods","classPrivateProperties","classProperties","doExpressions","dynamicImport","exportDefaultFrom","exportExtensions","exportNamespaceFrom","functionBind","functionSent","importMeta","nullishCoalescingOperator","numericSeparator","objectRestSpread","optionalCatchBinding","optionalChaining","pipelineOperator","throwExpressions","jsx",["flow",{}],["flow",{}],"objectRestSpread","objectRestSpread","dynamicImport","asyncGenerators","classProperties","classPrivateProperties"],"allowImportExportEverywhere":true,"allowReturnOutsideFunction":true,"strictMode":false},"sourceFileName":"imports/api/user_notify/user_notify.js","filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\api\\user_notify\\user_notify.js","passPerPreset":false,"envName":"development","cwd":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","root":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan","presets":[],"generatorOpts":{"filename":"C:\\Users\\wayne\\src\\kwaiette\\tmp\\padawan\\imports\\api\\user_notify\\user_notify.js","comments":true,"compact":false,"sourceMaps":true,"sourceFileName":"imports/api/user_notify/user_notify.js"}},"code":"module.export({\n  UserNotify: () => UserNotify\n});\nlet Meteor;\nmodule.watch(require(\"meteor/meteor\"), {\n  Meteor(v) {\n    Meteor = v;\n  }\n\n}, 0);\nlet Mongo;\nmodule.watch(require(\"meteor/mongo\"), {\n  Mongo(v) {\n    Mongo = v;\n  }\n\n}, 1);\nlet Class, Enum;\nmodule.watch(require(\"meteor/jagi:astronomy\"), {\n  Class(v) {\n    Class = v;\n  },\n\n  Enum(v) {\n    Enum = v;\n  }\n\n}, 2);\nlet User;\nmodule.watch(require(\"../users/users.js\"), {\n  User(v) {\n    User = v;\n  }\n\n}, 3);\nlet Email;\nmodule.watch(require(\"meteor/email\"), {\n  Email(v) {\n    Email = v;\n  }\n\n}, 4);\nlet UserNotify = Class.create({\n  name: \"UserNotify\",\n  collection: new Mongo.Collection('user_notify'),\n  fields: {\n    userId: {\n      type: String,\n      default: ''\n    },\n    isRead: {\n      type: Boolean,\n      default: false\n    },\n    isPushed: {\n      type: Boolean,\n      default: false\n    },\n    isEmailed: {\n      type: Boolean,\n      default: false\n    },\n    title: {\n      type: String,\n      default: ''\n    },\n    body: {\n      type: String,\n      default: ''\n    },\n    action: {\n      type: String,\n      default: ''\n    },\n    createdDate: {\n      type: Date,\n      default: function () {\n        return new Date();\n      }\n    }\n  },\n  meteorMethods: {\n    markRead() {\n      this.isRead = true;\n      this.save();\n    },\n\n    markNotified() {\n      this.isPushed = true;\n      this.save();\n    }\n\n  },\n  helpers: {\n    test() {\n      console.log(\"123\");\n    },\n\n    pushNotify(opts) {\n      let noteOpts = {\n        body: this.body,\n        icon: '/img/panda.png',\n        data: this._id\n      };\n      let browserNote;\n\n      if (!(\"Notification\" in window)) {\n        alert(\"This browser does not support desktop notification\");\n      } // Let's check whether notification permissions have already been granted\n      else if (Notification.permission === \"granted\") {\n          // If it's okay let's create a notification\n          browserNote = new Notification(this.title, noteOpts);\n        } // Otherwise, we need to ask the user for permission\n        else if (Notification.permission !== \"denied\") {\n            Notification.requestPermission(function (permission) {\n              // If the user accepts, let's create a notification\n              if (permission === \"granted\") {\n                browserNote = new Notification(this.title, noteOpts);\n              }\n            });\n          }\n\n      if (Notification.permission === \"granted\" && typeof opts.onclick !== 'undefined') {\n        browserNote.onclick = opts.onclick;\n      }\n    }\n\n  },\n  events: {\n    beforeSave(e) {\n      if (Meteor.isServer) {\n        let note = e.currentTarget;\n\n        if (!note.isEmailed) {\n          let u = User.findOne({\n            _id: note.userId\n          });\n\n          if (u) {\n            let addr = u.emails[0].address;\n            Email.send({\n              to: addr,\n              from: \"wayne@paladinarcher.com\",\n              subject: \"Developer Level Notification - \" + note.title,\n              text: note.body\n            });\n          }\n        }\n      }\n    }\n\n  }\n});\n\nif (Meteor.isClient) {//\n}\n\nUserNotify.add = function (opts) {\n  let notify = new UserNotify(opts);\n  notify.save();\n};","map":{"version":3,"sources":["imports/api/user_notify/user_notify.js"],"names":["module","export","UserNotify","Meteor","watch","require","v","Mongo","Class","Enum","User","Email","create","name","collection","Collection","fields","userId","type","String","default","isRead","Boolean","isPushed","isEmailed","title","body","action","createdDate","Date","meteorMethods","markRead","save","markNotified","helpers","test","console","log","pushNotify","opts","noteOpts","icon","data","_id","browserNote","window","alert","Notification","permission","requestPermission","onclick","events","beforeSave","e","isServer","note","currentTarget","u","findOne","addr","emails","address","send","to","from","subject","text","isClient","add","notify"],"mappings":"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","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { Class, Enum } from 'meteor/jagi:astronomy';\nimport { User } from '../users/users.js';\nimport { Email } from 'meteor/email';\n\nlet UserNotify = Class.create({\n    name: \"UserNotify\",\n    collection: new Mongo.Collection('user_notify'),\n    fields: {\n        userId: {\n            type: String,\n            default: ''\n        },\n        isRead: {\n            type: Boolean,\n            default: false\n        },\n        isPushed: {\n            type: Boolean,\n            default: false\n        },\n        isEmailed: {\n            type: Boolean,\n            default: false\n        },\n        title: {\n            type: String,\n            default: ''\n        },\n        body: {\n            type: String,\n            default: ''\n        },\n        action: {\n            type: String,\n            default: ''\n        },\n        createdDate: {\n            type: Date,\n            default: function () { return new Date(); }\n        }\n    },\n    meteorMethods: {\n        markRead() {\n            this.isRead = true;\n            this.save();\n        },\n        markNotified() {\n            this.isPushed = true;\n            this.save();\n        }\n    },\n    helpers: {\n        test() {\n            console.log(\"123\");\n        },\n        pushNotify(opts) {\n            let noteOpts = {\n                body: this.body,\n                icon: '/img/panda.png',\n                data: this._id\n            }\n            let browserNote;\n\n            if (!(\"Notification\" in window)) {\n                alert(\"This browser does not support desktop notification\");\n            }\n\n            // Let's check whether notification permissions have already been granted\n            else if (Notification.permission === \"granted\") {\n                // If it's okay let's create a notification\n                browserNote = new Notification(this.title, noteOpts);\n            }\n\n            // Otherwise, we need to ask the user for permission\n            else if (Notification.permission !== \"denied\") {\n                Notification.requestPermission(function (permission) {\n                    // If the user accepts, let's create a notification\n                    if (permission === \"granted\") {\n                        browserNote = new Notification(this.title, noteOpts);\n                    }\n                });\n            }\n            if (Notification.permission === \"granted\" && typeof opts.onclick !== 'undefined') {\n                browserNote.onclick = opts.onclick;\n            }\n        }\n    },\n    events: {\n        beforeSave(e) {\n            if (Meteor.isServer) {\n                let note = e.currentTarget;\n                if (!note.isEmailed) {\n                    let u = User.findOne( {_id:note.userId} );\n                    if (u) {\n                        let addr = u.emails[0].address;\n                        Email.send({\n                            to: addr,\n                            from: \"wayne@paladinarcher.com\",\n                            subject: \"Developer Level Notification - \"+note.title,\n                            text: note.body\n                        });\n                    }\n                }\n            }\n        }\n    }\n});\n\nif (Meteor.isClient) {\n    //\n}\n\nUserNotify.add = function(opts) {\n    let notify = new UserNotify(opts);\n    notify.save();\n}\n\nexport { UserNotify };\n"]},"sourceType":"script","hash":"69b4eb2abc8acf3fa2d9a5e5778be1630acdf373"}
