{"head":"","body":"","js":"\nTemplate.__checkName(\"individual_goals\");\nTemplate[\"individual_goals\"] = new Template(\"Template.individual_goals\", (function() {\n  var view = this;\n  return [ Blaze.If(function() {\n    return Spacebars.call(view.templateInstance().subscriptionsReady());\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      class: \"container goal-list individual-goal-list\"\n    }, \"\\n        \", HTML.DIV({\n      class: \"row spaced title\"\n    }, \"\\n            \", HTML.DIV({\n      class: \"col-sm-12\"\n    }, \"\\n                \", HTML.H2(\"Goals\"), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.DIV({\n      class: \"row spaced goal-controls\",\n      \"data-goal-id\": \"new\"\n    }, \"\\n            \", HTML.DIV({\n      class: \"col-sm-12\"\n    }, \"\\n                \", HTML.BUTTON({\n      id: \"btn-add-goal\",\n      class: \"btn btn-primary\",\n      \"data-txt-add\": \"Add a goal...\",\n      \"data-txt-save\": \"Save\"\n    }, \"Add a goal...\"), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.DIV({\n      class: \"row spaced blank-goal\",\n      id: \"blank-goal\"\n    }, \"\\n            \", HTML.DIV({\n      class: \"col-sm-12\"\n    }, \"\\n                \", Blaze._TemplateWith(function() {\n      return {\n        goal: Spacebars.call(view.lookup(\"blankGoal\")),\n        users: Spacebars.call(view.lookup(\"userList\"))\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"igoal_view\"));\n    }), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.DIV({\n      class: \"row spaced existing-goals\"\n    }, \"\\n            \", HTML.DIV({\n      class: \"col-sm-12\"\n    }, \"\\n                \", Blaze.Unless(function() {\n      return Spacebars.call(view.lookup(\"goalReload\"));\n    }, function() {\n      return [ \"\\n                    \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"ownList\"));\n      }, function() {\n        return [ \"\\n                        \", HTML.H3(\"Personal\"), \"\\n                        \", Blaze.If(function() {\n          return Spacebars.dataMustache(view.lookup(\"hasGoalsTeam\"), \"\");\n        }, function() {\n          return [ \"\\n                            \", Blaze.Each(function() {\n            return {\n              _sequence: Spacebars.dataMustache(view.lookup(\"individualGoalsTeam\"), \"\"),\n              _variable: \"goal\"\n            };\n          }, function() {\n            return [ \"\\n                                \", Blaze._TemplateWith(function() {\n              return {\n                goal: Spacebars.call(view.lookup(\"goal\"))\n              };\n            }, function() {\n              return Spacebars.include(view.lookupTemplate(\"igoal_view\"));\n            }), \"\\n                            \" ];\n          }), \"\\n                        \" ];\n        }, function() {\n          return \"\\n                            No goals yet\\n                        \";\n        }), \"\\n                    \" ];\n      }), \"\\n                    \", Blaze.Each(function() {\n        return {\n          _sequence: Spacebars.call(view.lookup(\"teamList\")),\n          _variable: \"team\"\n        };\n      }, function() {\n        return [ \"\\n                        \", HTML.H3(Blaze.View(\"lookup:team.Name\", function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\"team\"), \"Name\"));\n        })), \"\\n                        \", Blaze.If(function() {\n          return Spacebars.dataMustache(view.lookup(\"hasGoalsTeam\"), Spacebars.dot(view.lookup(\"team\"), \"_id\"));\n        }, function() {\n          return [ \"\\n                            \", Blaze.Each(function() {\n            return {\n              _sequence: Spacebars.dataMustache(view.lookup(\"individualGoalsTeam\"), Spacebars.dot(view.lookup(\"team\"), \"_id\")),\n              _variable: \"goal\"\n            };\n          }, function() {\n            return [ \"\\n                                \", Blaze._TemplateWith(function() {\n              return {\n                goal: Spacebars.call(view.lookup(\"goal\"))\n              };\n            }, function() {\n              return Spacebars.include(view.lookupTemplate(\"igoal_view\"));\n            }), \"\\n                            \" ];\n          }), \"\\n                        \" ];\n        }, function() {\n          return \"\\n                            No goals yet\\n                        \";\n        }), \"\\n                    \" ];\n      }), \"\\n                \" ];\n    }), \"\\n            \"), \"\\n        \"), \"\\n    \"), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"loading\")), \"\\n    \" ];\n  }), HTML.Raw('\\n\\n    <div class=\"modal fade\" id=\"goal-modal-new\">\\n        <div class=\"modal-dialog modal-lg\" role=\"document\">\\n          <div class=\"modal-content\">\\n            <div class=\"modal-header\">\\n              <h5 class=\"modal-title\">New Sub Goal</h5>\\n            </div>\\n            <div class=\"modal-body\">\\n            </div>\\n          </div>\\n        </div>\\n    </div>\\n    '), HTML.DIV({\n    class: \"modal fade\",\n    id: \"goal-modal-sub\"\n  }, \"\\n        \", HTML.DIV({\n    class: \"modal-dialog modal-lg\",\n    role: \"document\"\n  }, \"\\n          \", HTML.DIV({\n    class: \"modal-content\"\n  }, \"\\n            \", HTML.Raw('<div class=\"modal-header\">\\n              <h5 class=\"modal-title\">View/Edit Sub Goal</h5>\\n            </div>'), \"\\n            \", HTML.DIV({\n    class: \"modal-body\"\n  }, \"\\n                \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hasSubgoalView\"));\n  }, function() {\n    return [ \"\\n                  \", Blaze._TemplateWith(function() {\n      return {\n        goal: Spacebars.call(view.lookup(\"subgoal\"))\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"igoal_view\"));\n    }), \"\\n                \" ];\n  }), \"\\n            \"), \"\\n          \"), \"\\n        \"), \"\\n    \") ];\n}));\n\nTemplate.__checkName(\"igoal_view\");\nTemplate[\"igoal_view\"] = new Template(\"Template.igoal_view\", (function() {\n  var view = this;\n  return HTML.DIV({\n    class: function() {\n      return [ \"team-goal \", Spacebars.mustache(view.lookup(\"collapsed\"), Spacebars.dot(view.lookup(\"goal\"), \"parentId\")) ];\n    },\n    \"data-goal-id\": function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"_id\"));\n    },\n    id: function() {\n      return [ \"div-goal-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"_id\")) ];\n    }\n  }, HTML.Raw('\\n        <!-- <form id=\"form-goal-{{goal._id}}\"> -->\\n        '), HTML.DIV({\n    class: function() {\n      return [ \"progress pct-\", Spacebars.mustache(view.lookup(\"progressPct\")) ];\n    },\n    \"data-pct\": function() {\n      return Spacebars.mustache(view.lookup(\"progressPct\"));\n    }\n  }, \"\\n            \", HTML.DIV({\n    class: \"progress-bar\",\n    role: \"progressbar\",\n    style: function() {\n      return [ \"width: \", Spacebars.mustache(view.lookup(\"progressPct\")), \"%;\" ];\n    },\n    \"aria-valuenow\": function() {\n      return Spacebars.mustache(view.lookup(\"progressPct\"));\n    },\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\"\n  }, Blaze.View(\"lookup:progressPct\", function() {\n    return Spacebars.mustache(view.lookup(\"progressPct\"));\n  }), \"%\"), \"\\n        \"), \"\\n        \", HTML.DIV({\n    class: \"row summary-row\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"col-sm-10 collapsed-summary\"\n  }, \"\\n                \", HTML.SPAN({\n    class: \"team-goal-title\"\n  }, Blaze.View(\"lookup:goal.title\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"title\"));\n  })), \"\\n                \", HTML.SPAN({\n    class: \"collapsed-description\"\n  }, Blaze.View(\"lookup:goal.description\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"description\"));\n  })), \"\\n            \"), \"\\n            \", HTML.DIV({\n    class: \"col-sm-10 expanded-summary\"\n  }, \"\\n                \", HTML.SPAN({\n    class: \"team-goal-title\"\n  }, HTML.INPUT(HTML.Attrs({\n    type: \"text\",\n    id: function() {\n      return [ \"goal-title-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"_id\")) ];\n    },\n    class: \"flat form-control goal-title\",\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"title\"));\n    },\n    placeholder: [ HTML.CharRef({\n      html: \"&lt;\",\n      str: \"<\"\n    }), \"Enter goal title...\", HTML.CharRef({\n      html: \"&gt;\",\n      str: \">\"\n    }) ]\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"fldEnabled\"), \"title\");\n  }))), \"\\n            \"), \"\\n            \", HTML.DIV({\n    class: \"col-sm-2 text-right btn-group-xs\"\n  }, \"\\n                \", HTML.Raw('<button class=\"btn btn-success btn-save glyphicon glyphicon-ok details\" disabled=\"\" alt=\"Save changes\"></button>'), \"\\n                \", HTML.Raw('<button class=\"btn btn-warning btn-cancel glyphicon glyphicon-remove details\" disabled=\"\" alt=\"Discard changes\"></button>'), \"\\n                \", HTML.BUTTON({\n    class: \"btn btn-primary btn-expand glyphicon glyphicon-chevron-down\",\n    id: function() {\n      return [ \"btn-expand-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"_id\")) ];\n    }\n  }), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.DIV({\n    class: \"row spaced\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"col-sm-10\"\n  }, \"\\n                \", HTML.DIV({\n    class: \"team-goal-description\"\n  }, \"\\n                    \", HTML.TEXTAREA(HTML.Attrs({\n    id: function() {\n      return [ \"goal-description-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"_id\")) ];\n    },\n    class: \"flat form-control goal-description\",\n    placeholder: [ HTML.CharRef({\n      html: \"&lt;\",\n      str: \"<\"\n    }), \"Enter goal description...\", HTML.CharRef({\n      html: \"&gt;\",\n      str: \">\"\n    }) ]\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"fldEnabled\"), \"description\");\n  }, {\n    value: function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"description\"));\n    }\n  })), \"\\n                \"), \"\\n            \"), \"\\n            \", HTML.Raw('<div class=\"col-sm-2 text-right\">\\n            </div>'), \"\\n        \"), \"\\n        \", HTML.DIV({\n    class: \"row spaced details\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"col-sm-6\"\n  }, \"\\n                \", HTML.DIV({\n    class: \"row spaced\"\n  }, \"\\n                    \", HTML.DIV({\n    class: \"col-sm-12\"\n  }, \"\\n                        \", HTML.LABEL({\n    for: function() {\n      return [ \"select-team-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"_id\")) ];\n    }\n  }, \"Team\"), \"\\n                        \", HTML.SELECT({\n    class: \"form-control\",\n    id: function() {\n      return [ \"select-team-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"_id\")) ];\n    }\n  }, \"\\n                            \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"ownList\"));\n  }, function() {\n    return [ \"\\n                                \", HTML.OPTION({\n      value: \"\"\n    }, \"(personal)\"), \"\\n                            \" ];\n  }), \"\\n                            \", Blaze.Each(function() {\n    return {\n      _sequence: Spacebars.call(view.lookup(\"teamList\")),\n      _variable: \"team\"\n    };\n  }, function() {\n    return [ \"\\n                                \", HTML.OPTION(HTML.Attrs({\n      value: function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"team\"), \"_id\"));\n      }\n    }, function() {\n      return Spacebars.attrMustache(view.lookup(\"teamSelected\"), Spacebars.dot(view.lookup(\"team\"), \"_id\"));\n    }), Blaze.View(\"lookup:team.Name\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"team\"), \"Name\"));\n    })), \"\\n                            \" ];\n  }), \"\\n                        \"), \"\\n                    \"), \"\\n                \"), \"\\n                \", HTML.DIV({\n    class: \"row spaced\"\n  }, \"\\n                    \", HTML.DIV({\n    class: \"col-sm-12\"\n  }, \"\\n                        \", HTML.LABEL({\n    for: function() {\n      return [ \"select-privacy-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"_id\")) ];\n    }\n  }, \"Privacy\"), \"\\n                        \", HTML.SELECT({\n    class: \"form-control\",\n    id: function() {\n      return [ \"select-privacy-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"_id\")) ];\n    }\n  }, \"\\n                            \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"ownList\"));\n  }, function() {\n    return [ \"\\n                                \", HTML.OPTION(HTML.Attrs({\n      value: \"private\"\n    }, function() {\n      return Spacebars.attrMustache(view.lookup(\"privacySelected\"), \"private\");\n    }), \"Private\"), \"\\n                            \" ];\n  }), \"\\n                            \", HTML.OPTION(HTML.Attrs({\n    value: \"team\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"privacySelected\"), \"team\");\n  }), \"Team\"), \"\\n                            \", HTML.OPTION(HTML.Attrs({\n    value: \"public\"\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"privacySelected\"), \"public\");\n  }), \"Public\"), \"\\n                        \"), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n            \", HTML.DIV({\n    class: \"col-sm-6\"\n  }, \"\\n                \", HTML.DIV({\n    class: \"row spaced\"\n  }, \"\\n                    \", HTML.DIV({\n    class: \"col-sm-4 text-right\"\n  }, \"\\n                        \", HTML.LABEL({\n    for: function() {\n      return [ \"input-start-date-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"_id\")) ];\n    }\n  }, \"Start\"), \"\\n                    \"), \"\\n                    \", HTML.DIV({\n    class: \"col-sm-8\"\n  }, \"\\n                        \", HTML.INPUT(HTML.Attrs({\n    id: function() {\n      return [ \"input-start-date-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"_id\")) ];\n    },\n    type: \"text\",\n    class: \"form-control flat date\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"dateField\"), \"startDate\");\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"fldEnabled\"), \"startDate\");\n  })), \"\\n                    \"), \"\\n                \"), \"\\n                \", HTML.DIV({\n    class: \"row spaced\"\n  }, \"\\n                    \", HTML.Raw('<div class=\"col-sm-4 text-right\">\\n                        Due\\n                    </div>'), \"\\n                    \", HTML.DIV({\n    class: \"col-sm-8\"\n  }, \"\\n                        \", HTML.INPUT(HTML.Attrs({\n    id: function() {\n      return [ \"input-date-due-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"_id\")) ];\n    },\n    type: \"text\",\n    class: \"form-control flat date\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"dateField\"), \"dueDate\");\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"fldEnabled\"), \"dueDate\");\n  })), \"\\n                    \"), \"\\n                \"), \"\\n                \", HTML.DIV({\n    class: \"row spaced\"\n  }, \"\\n                    \", HTML.Raw('<div class=\"col-sm-4 text-right\">\\n                        Review\\n                    </div>'), \"\\n                    \", HTML.DIV({\n    class: \"col-sm-8\"\n  }, \"\\n                        \", HTML.INPUT(HTML.Attrs({\n    id: function() {\n      return [ \"input-date-review-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"_id\")) ];\n    },\n    type: \"text\",\n    class: \"form-control flat date\",\n    value: function() {\n      return Spacebars.mustache(view.lookup(\"dateField\"), \"reviewDate\");\n    }\n  }, function() {\n    return Spacebars.attrMustache(view.lookup(\"fldEnabled\"), \"reviewDate\");\n  })), \"\\n                    \"), \"\\n                \"), \"\\n                \", Blaze.Unless(function() {\n    return Spacebars.dataMustache(view.lookup(\"isNew\"), Spacebars.dot(view.lookup(\"goal\"), \"_id\"));\n  }, function() {\n    return [ \"\\n                \", HTML.DIV({\n      class: \"row spaced\"\n    }, \"\\n                    \", HTML.DIV({\n      class: \"col-sm-4 text-right\"\n    }, \"\\n                        Completed\\n                    \"), \"\\n                    \", HTML.DIV({\n      class: \"col-sm-8\"\n    }, \"\\n                        \", HTML.INPUT(HTML.Attrs({\n      id: function() {\n        return [ \"input-date-reached-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"_id\")) ];\n      },\n      type: \"text\",\n      class: \"form-control flat date\",\n      value: function() {\n        return Spacebars.mustache(view.lookup(\"dateField\"), \"reachedDate\");\n      }\n    }, function() {\n      return Spacebars.attrMustache(view.lookup(\"fldEnabled\"), \"reachedDate\");\n    })), \"\\n                    \"), \"\\n                \"), \"\\n                \" ];\n  }), \"\\n            \"), \"\\n        \"), \"\\n\\n        \", HTML.DIV({\n    class: \"row spaced comments details\"\n  }, \"\\n            \", HTML.DIV({\n    class: \"col-sm-6 goal-comments\"\n  }, \"\\n                \", HTML.Raw(\"<h3>Comments</h3>\"), \"\\n                \", HTML.DIV(\"\\n                    \", Blaze.Each(function() {\n    return {\n      _sequence: Spacebars.dataMustache(view.lookup(\"goalComments\"), Spacebars.dot(view.lookup(\"goal\"), \"_id\")),\n      _variable: \"comment\"\n    };\n  }, function() {\n    return [ \"\\n                    \", HTML.DIV({\n      class: \"goal-comment-outer\"\n    }, \"\\n                        \", HTML.DIV({\n      class: \"goal-comment-header row\"\n    }, \"\\n                            \", HTML.DIV({\n      class: \"col-sm-12\"\n    }, \"\\n                                \", Blaze.View(\"lookup:getUserName\", function() {\n      return Spacebars.mustache(view.lookup(\"getUserName\"), Spacebars.dot(view.lookup(\"comment\"), \"userId\"));\n    }), \"\\n                                \", HTML.DIV({\n      class: \"float-right\"\n    }, \"\\n                                    \", Blaze.View(\"lookup:formatDate\", function() {\n      return Spacebars.mustache(view.lookup(\"formatDate\"), Spacebars.dot(view.lookup(\"comment\"), \"date\"));\n    }), \"\\n                                \"), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n      class: \"goal-comment row\"\n    }, \"\\n                            \", HTML.DIV({\n      class: \"col-sm-12\"\n    }, \"\\n                                \", Blaze.View(\"lookup:comment.text\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"comment\"), \"text\"));\n    }), \"\\n                            \"), \"\\n                        \"), \"\\n                    \"), \"\\n                    \" ];\n  }), \"\\n                \"), \"\\n                \", HTML.DIV({\n    class: \"row spaced comment-add details\"\n  }, \"\\n                    \", HTML.DIV({\n    class: \"col-sm-12\"\n  }, \"\\n                        \", HTML.DIV({\n    class: \"row spaced\"\n  }, \"\\n                            \", HTML.DIV({\n    class: \"col-sm-12\"\n  }, \"\\n                                \", HTML.TEXTAREA({\n    id: function() {\n      return [ \"new-comment-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"_id\")) ];\n    },\n    class: \"new-comment form-control\"\n  }), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n    class: \"row spaced\"\n  }, \"\\n                            \", HTML.DIV({\n    class: \"col-sm-12\"\n  }, \"\\n                                \", HTML.BUTTON({\n    id: function() {\n      return [ \"btn-comment-add-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"_id\")) ];\n    },\n    class: \"btn btn-primary btn-comment-add\",\n    alt: \"Add comment\"\n  }, HTML.Raw('<span class=\"glyphicon glyphicon-pencil\"></span>'), \" Add comment\"), \"\\n                            \"), \"\\n                        \"), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n            \", HTML.DIV({\n    class: \"col-sm-6 review-comments\"\n  }, \"\\n                \", HTML.Raw(\"<h3>Reviews</h3>\"), \"\\n                \", HTML.DIV(\"\\n                    \", Blaze.Each(function() {\n    return {\n      _sequence: Spacebars.dataMustache(view.lookup(\"reviewComments\"), Spacebars.dot(view.lookup(\"goal\"), \"_id\")),\n      _variable: \"comment\"\n    };\n  }, function() {\n    return [ \"\\n                    \", HTML.DIV({\n      class: \"goal-comment-outer\"\n    }, \"\\n                        \", HTML.DIV({\n      class: \"goal-comment-header row\"\n    }, \"\\n                            \", HTML.DIV({\n      class: \"col-sm-12\"\n    }, \"\\n                                \", Blaze.View(\"lookup:getUserName\", function() {\n      return Spacebars.mustache(view.lookup(\"getUserName\"), Spacebars.dot(view.lookup(\"comment\"), \"userId\"));\n    }), \"\\n                                \", HTML.DIV({\n      class: \"float-right\"\n    }, \"\\n                                    \", Blaze.View(\"lookup:formatDate\", function() {\n      return Spacebars.mustache(view.lookup(\"formatDate\"), Spacebars.dot(view.lookup(\"comment\"), \"date\"));\n    }), \"\\n                                \"), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n      class: \"goal-comment row\"\n    }, \"\\n                            \", HTML.DIV({\n      class: \"col-sm-12\"\n    }, \"\\n                                \", Blaze.View(\"lookup:comment.text\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"comment\"), \"text\"));\n    }), \"\\n                            \"), \"\\n                        \"), \"\\n                    \"), \"\\n                    \" ];\n  }), \"\\n                \"), \"\\n                \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"userHasModifyPerm\"), \"reviewComments\");\n  }, function() {\n    return [ \"\\n                \", HTML.DIV({\n      class: \"row spaced comment-add details\"\n    }, \"\\n                    \", HTML.DIV({\n      class: \"col-sm-12\"\n    }, \"\\n                        \", HTML.DIV({\n      class: \"row spaced\"\n    }, \"\\n                            \", HTML.DIV({\n      class: \"col-sm-12\"\n    }, \"\\n                                \", HTML.TEXTAREA({\n      id: function() {\n        return [ \"new-review-comment-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"_id\")) ];\n      },\n      class: \"new-review-comment form-control\"\n    }), \"\\n                            \"), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n      class: \"row spaced\"\n    }, \"\\n                            \", HTML.DIV({\n      class: \"col-sm-12\"\n    }, \"\\n                                \", HTML.BUTTON({\n      id: function() {\n        return [ \"btn-review-comment-add-\", Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"_id\")) ];\n      },\n      class: \"btn btn-primary btn-review-comment-add\",\n      alt: \"Add comment\"\n    }, HTML.SPAN({\n      class: \"glyphicon glyphicon-pencil\"\n    }), \" Add comment\"), \"\\n                            \"), \"\\n                        \"), \"\\n                    \"), \"\\n                \"), \"\\n                \" ];\n  }), \"\\n            \"), \"\\n        \"), \"\\n        \", Blaze.If(function() {\n    return Spacebars.dataMustache(view.lookup(\"userHasModifyPerm\"), \"subgoals\");\n  }, function() {\n    return [ \"\\n        \", HTML.DIV({\n      class: \"row spaced details subgoal-add\"\n    }, \"\\n            \", HTML.DIV({\n      class: \"col-sm-12\"\n    }, \"\\n                \", HTML.BUTTON({\n      class: \"btn btn-primary btn-sm btn-add-subgoal\",\n      alt: \"Add subgoal\"\n    }, HTML.SPAN({\n      class: \"glyphicon glyphicon-th-list\"\n    }), \" Add subgoal\"), \"\\n            \"), \"\\n        \"), \"\\n        \" ];\n  }), \"\\n        \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hasChildren\"));\n  }, function() {\n    return [ \"\\n        \", HTML.DIV({\n      class: \"row spaced details subgoals\"\n    }, \"\\n            \", HTML.DIV({\n      class: \"col-sm-12\"\n    }, \"\\n                \", HTML.DIV({\n      class: \"team-goal-children\"\n    }, \"\\n                    \", HTML.UL(\"\\n                        \", Blaze.Each(function() {\n      return {\n        _sequence: Spacebars.call(view.lookup(\"childGoals\")),\n        _variable: \"childGoal\"\n      };\n    }, function() {\n      return [ \"\\n                        \", HTML.LI(\"\\n                            \", Blaze._TemplateWith(function() {\n        return {\n          goal: Spacebars.call(view.lookup(\"childGoal\"))\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"child_igoal_view\"));\n      }), \"\\n                        \"), \"\\n                        \" ];\n    }), \"\\n                    \"), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n        \" ];\n  }), HTML.Raw(\"\\n        <!-- </form> -->\\n    \"));\n}));\n\nTemplate.__checkName(\"child_igoal_view\");\nTemplate[\"child_igoal_view\"] = new Template(\"Template.child_igoal_view\", (function() {\n  var view = this;\n  return [ HTML.DIV({\n    class: \"team-goal-title\",\n    \"data-id\": function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"_id\"));\n    }\n  }, Blaze.View(\"lookup:goal.title\", function() {\n    return Spacebars.mustache(Spacebars.dot(view.lookup(\"goal\"), \"title\"));\n  })), \"\\n    \", Blaze.If(function() {\n    return Spacebars.call(view.lookup(\"hasChildren\"));\n  }, function() {\n    return [ \"\\n    \", HTML.UL(\"\\n        \", Blaze.Each(function() {\n      return {\n        _sequence: Spacebars.call(view.lookup(\"childGoals\")),\n        _variable: \"childGoal\"\n      };\n    }, function() {\n      return [ \"\\n        \", HTML.LI(\"\\n            \", Blaze._TemplateWith(function() {\n        return {\n          goal: Spacebars.call(view.lookup(\"childGoal\"))\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"child_igoal_view\"));\n      }), \"\\n        \"), \"\\n        \" ];\n    }), \"\\n    \"), \"\\n    \" ];\n  }) ];\n}));\n","bodyAttrs":{}}