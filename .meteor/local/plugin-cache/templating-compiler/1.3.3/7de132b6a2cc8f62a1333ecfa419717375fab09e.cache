{"head":"","body":"","js":"\nTemplate.__checkName(\"add_questions\");\nTemplate[\"add_questions\"] = new Template(\"Template.add_questions\", (function() {\n  var view = this;\n  return Blaze.If(function() {\n    return Spacebars.call(view.templateInstance().subscriptionsReady());\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      class: \"container\"\n    }, \"\\n        \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n            \", HTML.H4(\"Select a category to enter into\"), \"\\n        \"), \"\\n        \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n            \", HTML.DIV({\n      class: \"btn-group\",\n      role: \"group\",\n      \"aria-label\": \"...\"\n    }, \"\\n                \", HTML.BUTTON({\n      type: \"button\",\n      class: function() {\n        return [ \"btn btn-default quest-cat-select cat-IE \", Blaze.If(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"categoryCheck\"), \"IE\"));\n        }, function() {\n          return \"active\";\n        }) ];\n      },\n      \"data-category\": \"IE\"\n    }, \"Introvert/Extrovert\"), \"\\n                \", HTML.BUTTON({\n      type: \"button\",\n      class: function() {\n        return [ \"btn btn-default quest-cat-select cat-NS \", Blaze.If(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"categoryCheck\"), \"NS\"));\n        }, function() {\n          return \"active\";\n        }) ];\n      },\n      \"data-category\": \"NS\"\n    }, \"iNtuitive/Sensing\"), \"\\n                \", HTML.BUTTON({\n      type: \"button\",\n      class: function() {\n        return [ \"btn btn-default quest-cat-select cat-TF \", Blaze.If(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"categoryCheck\"), \"TF\"));\n        }, function() {\n          return \"active\";\n        }) ];\n      },\n      \"data-category\": \"TF\"\n    }, \"Thinking/Feeling\"), \"\\n                \", HTML.BUTTON({\n      type: \"button\",\n      class: function() {\n        return [ \"btn btn-default quest-cat-select cat-JP \", Blaze.If(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"categoryCheck\"), \"JP\"));\n        }, function() {\n          return \"active\";\n        }) ];\n      },\n      \"data-category\": \"JP\"\n    }, \"Judging/Perceiving\"), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.DIV({\n      class: \"row\"\n    }, \"\\n            \", HTML.TABLE({\n      class: \"table table-striped table-hover\"\n    }, \"\\n                \", HTML.THEAD(\"\\n                \", HTML.TR(\"\\n                    \", HTML.TD(\"\\n                        \", HTML.UL({\n      class: \"nav nav-tabs\",\n      role: \"tablist\",\n      style: \"margin-bottom:5px;\"\n    }, \"\\n                            \", HTML.LI({\n      role: \"presentation\",\n      class: \"active\"\n    }, HTML.A({\n      href: \"#addQuestion\",\n      \"aria-controls\": \"addQuestion\",\n      role: \"tab\",\n      \"data-toggle\": \"tab\",\n      \"data-type\": \"question\"\n    }, HTML.H4({\n      style: \"margin:0;\"\n    }, \"Add new question\"))), \"\\n                        \"), \"\\n                        \", HTML.DIV({\n      class: \"tab-content\",\n      style: \"overflow: inherit\"\n    }, \"\\n                            \", HTML.DIV({\n      role: \"tabpanel\",\n      class: \"tab-pane active\",\n      id: \"addQuestion\"\n    }, \"\\n                                \", HTML.FORM({\n      id: \"newQuestion\"\n    }, \"\\n                                    \", HTML.DIV({\n      class: \"input-group\"\n    }, \"\\n                                        \", HTML.INPUT({\n      type: \"text\",\n      class: \"form-control input-medium\",\n      name: \"Text\",\n      style: \"height:34px;\",\n      placeholder: \"Brief description...\"\n    }), \"\\n                                        \", HTML.DIV({\n      class: \"input-group-btn\"\n    }, \"\\n                                            \", Blaze._TemplateWith(function() {\n      return {\n        id: Spacebars.call(\"select-segments\"),\n        id2: Spacebars.call(\"\"),\n        name: Spacebars.call(\"segments[]\"),\n        placeholder: Spacebars.call(\"User Segments...\"),\n        list: Spacebars.call(view.lookup(\"userSegmentList\")),\n        selected: Spacebars.call(view.lookup(\"assignedUserSegments\")),\n        onItemRemove: Spacebars.call(view.lookup(\"itemRemoveHandler\")),\n        onItemAdd: Spacebars.call(view.lookup(\"itemAddHandler\"))\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"select_autocomplete\"));\n    }), \"\\n                                        \"), \"\\n                                    \"), \"\\n                                    \", HTML.DIV({\n      class: \"input-group\"\n    }, \"\\n                                        \", HTML.DIV({\n      class: \"input-group-btn\"\n    }, \"\\n                                            \", Blaze._TemplateWith(function() {\n      return {\n        id: Spacebars.call(\"select-categories\"),\n        id2: Spacebars.call(\"\"),\n        name: Spacebars.call(\"Categories\"),\n        placeholder: Spacebars.call(\"Categories...\"),\n        list: Spacebars.call(view.lookup(\"categoryList\"))\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"select_autocomplete\"));\n    }), \"\\n                                        \"), \"\\n                                        \", HTML.INPUT({\n      type: \"text\",\n      class: \"form-control input-medium\",\n      name: \"LeftText\",\n      style: \"height:35px;\",\n      placeholder: \"Are you more like this...\"\n    }), \"\\n                                        \", HTML.SPAN({\n      class: \"input-group-addon\"\n    }, HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    }), \"vs\", HTML.CharRef({\n      html: \"&nbsp;\",\n      str: \" \"\n    })), \"\\n                                        \", HTML.INPUT({\n      type: \"text\",\n      class: \"form-control input-medium\",\n      name: \"RightText\",\n      style: \"height:35px;\",\n      placeholder: \"Or are you more like this?\"\n    }), \"\\n                                        \", HTML.SPAN({\n      class: \"input-group-btn\"\n    }, \"\\n                                            \", HTML.BUTTON({\n      class: \"btn btn-default btn-primary new-question\",\n      type: \"submit\"\n    }, \"Add\"), \"\\n                                        \"), \"\\n                                    \"), \"\\n                                \"), \"\\n                            \"), \"\\n                        \"), \"\\n                    \"), \"\\n                \"), \"\\n                \"), \"\\n                \", HTML.TBODY(\"\\n                \", HTML.TR(\"\\n                    \", HTML.TD(\"\\n                        \", HTML.H4(\"Edit existing questions\"), \"\\n                    \"), \"\\n                \"), \"\\n                \"), \"\\n                \", HTML.TBODY({\n      id: \"questionTable\",\n      class: \"edit-body\"\n    }, \"\\n            \", Blaze.Each(function() {\n      return {\n        _sequence: Spacebars.call(view.lookup(\"questions\")),\n        _variable: \"question\"\n      };\n    }, function() {\n      return [ \"\\n                    \", HTML.TR({\n        \"data-id\": function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\"question\"), \"_id\"));\n        },\n        id: function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\"question\"), \"_id\"));\n        },\n        class: \"edit-question edit-row\"\n      }, \"\\n                        \", HTML.TD(\"\\n                            \", HTML.DIV({\n        class: \"row\"\n      }, \"\\n                                \", HTML.DIV({\n        class: \"col-md-1\"\n      }, \"\\n                                    \", HTML.SPAN({\n        class: \"label label-default\"\n      }, Blaze.View(\"lookup:indexToCategory\", function() {\n        return Spacebars.mustache(view.lookup(\"indexToCategory\"), Spacebars.dot(view.lookup(\"question\"), \"Category\"));\n      })), HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      }), HTML.SPAN({\n        class: \"label label-warning\"\n      }, Blaze.View(\"lookup:totalAnswers\", function() {\n        return Spacebars.mustache(view.lookup(\"totalAnswers\"), Spacebars.dot(view.lookup(\"question\"), \"TimesAnswered\", \"LeftSum\"), Spacebars.dot(view.lookup(\"question\"), \"TimesAnswered\", \"RightSum\"));\n      })), \"\\n                                    \", HTML.SPAN({\n        class: \"label label-info\"\n      }, Blaze.View(\"lookup:averageAnswer\", function() {\n        return Spacebars.mustache(view.lookup(\"averageAnswer\"), Spacebars.dot(view.lookup(\"question\"), \"TimesAnswered\", \"LeftSum\"), Spacebars.dot(view.lookup(\"question\"), \"SumOfAnswers\", \"LeftSum\"));\n      }), \" vs \", Blaze.View(\"lookup:averageAnswer\", function() {\n        return Spacebars.mustache(view.lookup(\"averageAnswer\"), Spacebars.dot(view.lookup(\"question\"), \"TimesAnswered\", \"RightSum\"), Spacebars.dot(view.lookup(\"question\"), \"SumOfAnswers\", \"RightSum\"));\n      })), HTML.BR(), \"\\n                                    \", HTML.SPAN({\n        style: \"cursor: pointer;\",\n        class: function() {\n          return [ \"label label-\", Blaze.If(function() {\n            return Spacebars.call(Spacebars.dot(view.lookup(\"question\"), \"Active\"));\n          }, function() {\n            return \"success\";\n          }, function() {\n            return \"danger\";\n          }), \" toggle-enable\" ];\n        }\n      }, Blaze.If(function() {\n        return Spacebars.call(Spacebars.dot(view.lookup(\"question\"), \"Active\"));\n      }, function() {\n        return \"Active\";\n      }, function() {\n        return \"Inactive\";\n      })), \"\\n                                \"), \"\\n                                \", HTML.DIV({\n        class: \"col-md-10\"\n      }, \"\\n                                    \", HTML.EM(Blaze.View(\"lookup:question.Text\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"question\"), \"Text\"));\n      })), \"\\n                                    \", HTML.SPAN({\n        class: \"pull-right\"\n      }, \"\\n                                        \", HTML.STRONG(Blaze.View(\"lookup:questionAuthor\", function() {\n        return Spacebars.makeRaw(Spacebars.mustache(view.lookup(\"questionAuthor\"), view.lookup(\"question\")));\n      })), \"\\n                                    \"), \"\\n                                    \", HTML.BR(), \"\\n                                    \", HTML.SPAN({\n        class: \"glyphicon glyphicon-arrow-left\"\n      }), \" \", Blaze.View(\"lookup:question.LeftText\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"question\"), \"LeftText\"));\n      }), \"\\n                                    \", HTML.SPAN({\n        class: \"pull-right\"\n      }, \"\\n                                        \", Blaze._TemplateWith(function() {\n        return {\n          items: Spacebars.call(Spacebars.dataMustache(view.lookup(\"assignedUserSegments\"), view.lookup(\"question\"))),\n          labelType: Spacebars.call(\"label-info\")\n        };\n      }, function() {\n        return Spacebars.include(view.lookupTemplate(\"label_list\"));\n      }), \"\\n                                    \"), \"\\n                                    \", HTML.BR(), \"\\n                                    \", HTML.SPAN({\n        class: \"glyphicon glyphicon-arrow-right\"\n      }), \" \", Blaze.View(\"lookup:question.RightText\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"question\"), \"RightText\"));\n      }), \"\\n                                \"), \"\\n                                \", HTML.DIV({\n        class: \"col-md-1\",\n        style: \"text-align: right;\"\n      }, \"\\n                                    \", Blaze.If(function() {\n        return Spacebars.dataMustache(view.lookup(\"canDelete\"), view.lookup(\"question\"));\n      }, function() {\n        return [ \"\\n                                    \", HTML.SPAN({\n          class: \"glyphicon glyphicon-remove delete text-danger\",\n          \"data-qid\": function() {\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\"question\"), \"_id\"));\n          },\n          style: \"cursor: pointer;\"\n        }), \"\\n                                    \" ];\n      }, function() {\n        return [ \"\\n                                    \", HTML.SPAN({\n          class: \"glyphicon glyphicon-remove text-muted\",\n          style: \"cursor: not-allowed;\",\n          title: \"You can not delete questions that have been answered\",\n          \"data-toggle\": \"tooltip\"\n        }), \"\\n                                    \" ];\n      }), \"\\n                                \"), \"\\n                                \", HTML.DIV({\n        class: \"col-md-10 col-md-offset-1\",\n        style: \"display:none;\"\n      }, \"\\n                                    \", HTML.Comment(\" additional info here \"), \"\\n                                \"), \"\\n                            \"), \"\\n                        \"), \"\\n                    \"), HTML.SCRIPT(\"\\n                    $('#\", Blaze.View(\"lookup:question._id\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"question\"), \"_id\"));\n      }), ' [data-toogle=\"tooltip\"]\\').tooltip();\\n                    '), \"\\n            \" ];\n    }), \"\\n                \"), \"\\n            \"), \"\\n        \"), \"\\n        \", HTML.Comment(\" Modal \"), \"\\n        \", HTML.DIV({\n      class: \"modal fade\",\n      id: \"tempModal\",\n      tabindex: \"-1\",\n      role: \"dialog\",\n      \"aria-labelledby\": \"tempModalLabel\"\n    }, \"\\n          \", HTML.DIV({\n      class: \"modal-dialog\",\n      role: \"document\",\n      style: \"margin:0;\"\n    }, \"\\n            \", HTML.DIV({\n      class: \"modal-content\"\n    }, \"\\n              \", HTML.DIV({\n      class: \"modal-header\"\n    }, \"\\n                \", HTML.BUTTON({\n      type: \"button\",\n      class: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\"\n    }, HTML.SPAN({\n      \"aria-hidden\": \"true\"\n    }, HTML.CharRef({\n      html: \"&times;\",\n      str: \"×\"\n    }))), \"\\n                \", HTML.H4({\n      class: \"modal-title\"\n    }), \"\\n              \"), \"\\n              \", HTML.DIV({\n      class: \"modal-body\"\n    }, \"\\n\\n              \"), \"\\n              \", HTML.DIV({\n      class: \"modal-footer\"\n    }, \"\\n                \", HTML.BUTTON({\n      type: \"button\",\n      class: \"btn btn-default closebtn\",\n      \"data-dismiss\": \"modal\"\n    }), \"\\n                \", HTML.BUTTON({\n      type: \"button\",\n      class: \"btn btn-primary savebtn\"\n    }), \"\\n              \"), \"\\n            \"), \"\\n          \"), \"\\n        \"), \"\\n    \"), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n        \", Spacebars.include(view.lookupTemplate(\"loading\")), \"\\n    \" ];\n  });\n}));\n","bodyAttrs":{}}